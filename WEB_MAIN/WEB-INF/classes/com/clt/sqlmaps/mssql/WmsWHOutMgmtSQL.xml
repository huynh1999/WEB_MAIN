<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="wms.WHOutMgmt">
	<typeAlias type="com.clt.apps.fis.wms.whoutbooking.dto.WHOutbkDocVO" alias="WHOutbkDocVO"/>
	
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.WHObSaoSysNoVO" alias="saoSysNoDto"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.Grd01WHOutMgmtVO" alias="grd01WHOutMgmtVO"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.Grd00WHOutMgmtVO" alias="grd00WHOutMgmtVO"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.Grd02WHOutMgmtVO" alias="grd02WHOutMgmtVO"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.Grd04WHOutMgmtVO" alias="grd04WHOutMgmtVO"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.Grd05WHOutMgmtVO" alias="grd05WHOutMgmtVO"></typeAlias>
	<typeAlias type="com.clt.apps.fis.wms.outboundmanagement.dto.WHOutMgmtListSearchVO" alias="WHOutMgmtListSearchVO"></typeAlias>
	
	<!-- WHOutList (S) -->
	<sql id="searchWHOutListWith">
		/*wms.WHOutMgmt.searchWHOutListWith_Outmgmt*/
		WITH TAB AS (
		
		SELECT 
			 T.*
		     , ISNULL(D.LOT_ATTRIB_01, T.INBOUND_DT_OB) AS INBOUND_DT
		     , ISNULL(D.LOT_ATTRIB_02, T.LOT_NO_OB)     AS LOT_NO
		     , ISNULL(D.LOT_ATTRIB_03, T.EXP_DT_OB)     AS EXP_DT
		     , ISNULL(D.LOT_ATTRIB_04, T.LOT_04_OB)     AS LOT_04
		     , ISNULL(D.LOT_ATTRIB_05, T.LOT_05_OB)     AS LOT_05
		     <!-- , ISNULL(WAVE.SMP_WAVE_FLG, 'N') AS SMP_WAVE_FLG
		     , ISNULL(WAVE_OB.WAVE_NO, ' ') AS WAVE_NO -->
		     , ISNULL((SELECT TOP 1 WAVE.SMP_WAVE_FLG FROM TL_WH_WAVE_OB WAVE_OB JOIN TL_WH_WAVE WAVE ON WAVE_OB.WAVE_NO = WAVE.WAVE_NO WHERE WAVE_OB.WOB_BK_NO = T.WOB_BK_NO) , 'N') AS SMP_WAVE_FLG
		     , ISNULL((SELECT MAX(WAVE_OB.WAVE_NO) FROM TL_WH_WAVE_OB WAVE_OB WHERE WAVE_OB.WOB_BK_NO = T.WOB_BK_NO), ' ') AS WAVE_NO
		     <!-- //#1950 WMS4.0 In/outBound Status 관리 개선   Completed => Shipped  -->
		     , CASE WHEN T.BK_STS_CD = 'BK' OR T.BK_STS_CD = 'LP' THEN 'Shipped' ELSE dbo.TL_GET_COMM_NM('WB6', T.BK_STS_CD) END AS BK_STS_NM
	         , dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
	                                     , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD) AS PKG_INFO
	         <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST (S)-->
	         , CASE WHEN cfrt.WOB_BK_NO IS NULL
	                THEN 'New'
		            WHEN cfrt.WOB_BK_NO IS NOT NULL AND cfrt.STS_CD = ''
		            THEN 'Freight Saved'
			        WHEN cfrt.sts_cd != ''
			        THEN dbo.TL_GET_COMM_NM('WH07', CFRT.STS_CD)
	           END AS INV_STS_NM
	         <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST (E)-->  
		  FROM (
		SELECT DISTINCT OB.WOB_BK_NO
		     , OB.WH_CD
		     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM 
		     , OB.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM     
		     , CASE WHEN OB.CUST_ORD_NO = '' THEN OB.WOB_BK_NO ELSE ISNULL(OB.CUST_ORD_NO, OB.WOB_BK_NO) END AS CUST_ORD_NO
		     , OB.ORD_TP_CD
		     , dbo.TL_GET_COMM_NM('WB3', OB.ORD_TP_CD) AS ORD_TP_NM     
		     , LTRIM(RTRIM(OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3+ ' ' + OB.BUYER_ADDR4+ ' ' + OB.BUYER_ADDR5)) AS SHIP_TO
		     , OB.BUYER_NM AS SHIP_TO_NM		<!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
		     , OB.BUYER_ADDR1 AS SHIP_TO_ADDR	<!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
		     , OB.MBL_NO
		     , OB.HBL_NO
		     , OB.EST_OUT_DT	  
		     , OB.MODI_SYS_DT
		     , OB_ITEM.SAO_SYS_NO
		     , OB_ITEM.ITEM_SYS_NO     
		     , OB_ITEM.ITEM_CD
		     , OB_ITEM.ITEM_SEQ
		     , OB_ITEM.ITEM_NM
		     , OB_ITEM.ITEM_PKGUNIT
		     , OB_ITEM.ITEM_PKGQTY
		     , OB_ITEM.ITEM_EA_QTY
		     , OB_ITEM.SAO_NO
		     , OB_ITEM.RGST_TIMESTAMP
		     , OB_ITEM.INBOUND_DT AS INBOUND_DT_OB
			 , OB_ITEM.LOT_NO AS LOT_NO_OB
			 , OB_ITEM.EXP_DT AS EXP_DT_OB
			 , OB_ITEM.LOT_04 AS LOT_04_OB
			 , OB_ITEM.LOT_05 AS LOT_05_OB
			 , OB_ITEM.FIX_LOT_ID
			 , OB_ITEM.CURR_CD
			 , OB_ITEM.UNIT_PRICE
			 , dbo.TL_GET_WH_LOC_NM(OB.WH_CD, ISNULL(ALLC_ITEM.WH_LOC_CD, OB_ITEM.FIX_LOC_CD)) AS WH_LOC_NM
		
		
		     , ALLC_ITEM.WALC_NO
		     , ALLC_ITEM.WIB_BK_NO
		     , ALLC_ITEM.PO_SYS_NO
		     , ALLC_ITEM.LOT_ID
		     , ALLC_ITEM.WH_LOC_CD 
		     , ALLC_ITEM.PO_NO    
		     , ISNULL(ALLC.PICKD_FLG, 'N') AS PICKD_FLG
		     , CASE WHEN (SELECT COUNT (1)
		          	        FROM TL_WH_LOAD_PLAN LP
		                       , TL_WH_LOAD_PLAN_ITEM LPI
		                   WHERE LP.LP_NO = LPI.LP_NO		                                     
		                     AND OB.WOB_BK_NO = LPI.WOB_BK_NO
		                     AND LP.LP_STS_CD = 'L') > 0 THEN 'X'			             
		            WHEN (SELECT COUNT (1)
		          	        FROM TL_WH_ISSU ISSU
		                       , TL_WH_ISSU_ITEM ISSUI
		                   WHERE ISSU.WOB_OUT_NO = ISSUI.WOB_OUT_NO		                                     
		                     AND ALLC.WALC_NO = ISSU.WALC_NO) > 0 THEN 'BK'			                      
		            WHEN ALLC.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG = 'Y' THEN 'P'
		            WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'
		            ELSE OB.BK_STS_CD END AS BK_STS_CD     
		     , ISNULL(ALLC_ITEM.PICK_ITEM_EA_QTY, 0) AS PICK_ITEM_EA_QTY
		     , CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN ISNULL(ALLC_ITEM.PICKD_ITEM_EA_QTY, 0) ELSE 0 END AS PICKD_ITEM_EA_QTY     
		     
		 	 , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_CBM
			        WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_CBM 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_CBM ELSE ALLC_ITEM.PICK_ITEM_CBM END)
		            ELSE OB_ITEM.ITEM_CBM END AS ITEM_CBM
		     , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_CBF 
		            WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_CBF 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_CBF ELSE ALLC_ITEM.PICK_ITEM_CBF END)
		            ELSE OB_ITEM.ITEM_CBF END AS ITEM_CBF
		     , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_GRS_KGS 
		            WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_GRS_KGS 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_GRS_KGS ELSE ALLC_ITEM.PICK_ITEM_GRS_KGS END)
		            ELSE OB_ITEM.ITEM_GRS_KGS END AS ITEM_GRS_KGS
		     , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_GRS_LBS 
		            WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_GRS_LBS 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_GRS_LBS ELSE ALLC_ITEM.PICK_ITEM_GRS_LBS END)
		            ELSE OB_ITEM.ITEM_GRS_LBS END AS ITEM_GRS_LBS
		     , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_NET_KGS
		            WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_NET_KGS 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_NET_KGS ELSE ALLC_ITEM.PICK_ITEM_NET_KGS END)
		            ELSE OB_ITEM.ITEM_NET_KGS END AS ITEM_NET_KGS             	                    
		     , CASE WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_NET_LBS 
		            WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_NET_LBS 
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN (CASE WHEN ALLC.PICKD_FLG = 'Y' THEN ALLC_ITEM.PICKD_ITEM_NET_LBS ELSE ALLC_ITEM.PICK_ITEM_NET_LBS END)
		            ELSE OB_ITEM.ITEM_NET_LBS END AS ITEM_NET_LBS      
		     
		     , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_TPSZ_CD 
		            WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.EQ_TPSZ_CD
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN ALLC_ITEM.EQ_TPSZ_CD
		            ELSE OB.EQ_TPSZ_CD END AS EQ_TPSZ_CD                  
		     , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_NO 
		            WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.EQ_NO
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN ALLC_ITEM.EQ_NO
		            ELSE OB.EQ_NO END AS EQ_NO
		     , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.SEAL_NO 
		            WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.SEAL_NO
		            WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN ALLC_ITEM.SEAL_NO
		            ELSE OB.SEAL_NO END AS SEAL_NO   
		     , CASE WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_EA_QTY
		            WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_EA_QTY
		            ELSE 0 END AS SHIP_ITEM_EA_QTY  
		     , LP_ITEM.LP_NO
		     , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.OUTBOUND_DT 
		            WHEN ISSU.WOB_OUT_NO IS NOT NULL THEN ISSU.OUTBOUND_DT
		            ELSE NULL END AS OUTBOUND_DT	
		     , ISNULL(R_ITEM.ITEM_SER_NO,OB_ITEM.ITEM_SER_NO) AS ITEM_SER_NO
		     , ISNULL(R_ITEM.LIC_PLAT_NO,OB_ITEM.LIC_PLAT_NO) AS LIC_PLAT_NO
		     
		     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
			 ,OB.RGST_ID
			 ,OB.RGST_LOC_DT
			 ,OB.TRUCKER_CD
			 ,OB.TRUCKER_NM
			 ,OB.DLV_ORD_NO
			 ,OB.REF_NO
			 ,OB.COMMC_INV_NO
			 ,OB.RMK

	         <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
	          ,  CASE WHEN OB.DLVR_FLG = 'Y' THEN 'Yes' ELSE 'No' END AS DLVR_FLG
	          
		  FROM TL_WH_OB OB 
		   	 INNER JOIN TL_WH_OB_ITEM OB_ITEM
		   	 		ON OB.WOB_BK_NO = OB_ITEM.WOB_BK_NO
			 LEFT JOIN TL_WH_ALLC ALLC
			 		ON OB.WOB_BK_NO = ALLC.WOB_BK_NO
			 LEFT JOIN TL_WH_ALLC_ITEM ALLC_ITEM
			 		ON OB_ITEM.WOB_BK_NO        = ALLC_ITEM.WOB_BK_NO
				   AND OB_ITEM.SAO_SYS_NO       = ALLC_ITEM.SAO_SYS_NO
				   AND OB_ITEM.ITEM_SYS_NO      = ALLC_ITEM.ITEM_SYS_NO
				   AND OB_ITEM.ITEM_SEQ         = ALLC_ITEM.ITEM_SEQ	
		     LEFT JOIN TL_WH_LOAD_PLAN_ITEM LP_ITEM
		     		ON ALLC_ITEM.WOB_BK_NO      = LP_ITEM.WOB_BK_NO
				   AND ALLC_ITEM.SAO_SYS_NO     = LP_ITEM.SAO_SYS_NO
				   AND ALLC_ITEM.WIB_BK_NO      = LP_ITEM.WIB_BK_NO
				   AND ALLC_ITEM.PO_SYS_NO      = LP_ITEM.PO_SYS_NO
				   AND ALLC_ITEM.ITEM_SYS_NO    = LP_ITEM.ITEM_SYS_NO
				   AND ALLC_ITEM.LOT_ID         = LP_ITEM.LOT_ID
				   AND ALLC_ITEM.WH_LOC_CD      = LP_ITEM.WH_LOC_CD
				   AND ALLC_ITEM.ITEM_SEQ       = LP_ITEM.ITEM_SEQ
				   AND ISNULL(ALLC_ITEM.PO_NO,'') = ISNULL(LP_ITEM.PO_NO,'')
				   AND ISNULL(ALLC_ITEM.LIC_PLAT_NO,'') = ISNULL(LP_ITEM.LIC_PLAT_NO,'')
				   AND ISNULL(ALLC_ITEM.ITEM_SER_NO,'') = ISNULL(LP_ITEM.ITEM_SER_NO,'')
			 LEFT JOIN TL_WH_LOAD_PLAN LP 
			 		ON LP_ITEM.LP_NO = LP.LP_NO     
			 LEFT JOIN TL_WH_ISSU_ITEM ISSU_ITEM
			 		ON ALLC_ITEM.WALC_NO        = ISSU_ITEM.WALC_NO
				   AND ALLC_ITEM.SAO_SYS_NO     = ISSU_ITEM.SAO_SYS_NO
				   AND ALLC_ITEM.WIB_BK_NO      = ISSU_ITEM.WIB_BK_NO
				   AND ALLC_ITEM.PO_SYS_NO      = ISSU_ITEM.PO_SYS_NO
				   AND ALLC_ITEM.ITEM_SYS_NO    = ISSU_ITEM.ITEM_SYS_NO
				   AND ALLC_ITEM.LOT_ID         = ISSU_ITEM.LOT_ID
				   AND ALLC_ITEM.WH_LOC_CD      = ISSU_ITEM.WH_LOC_CD
				   AND ALLC_ITEM.ITEM_SEQ       = ISSU_ITEM.ITEM_SEQ
			 LEFT JOIN TL_WH_ISSU ISSU      
				    ON ALLC_ITEM.WALC_NO        = ISSU.WALC_NO 
			 LEFT JOIN TL_WH_RCV_ITEM R_ITEM  
					ON ALLC_ITEM.WIB_BK_NO = R_ITEM.WIB_BK_NO 
					AND ALLC_ITEM.PO_SYS_NO = R_ITEM.PO_SYS_NO 
					AND ALLC_ITEM.ITEM_SYS_NO = R_ITEM.ITEM_SYS_NO 
					<!-- AND ALLC_ITEM.ITEM_SEQ = R_ITEM.ITEM_SEQ -->
					AND ISNULL(ALLC_ITEM.PO_NO,'') = ISNULL(R_ITEM.PO_NO,'')
				    AND ISNULL(ALLC_ITEM.LIC_PLAT_NO,'') = ISNULL(R_ITEM.LIC_PLAT_NO,'')
				    AND ISNULL(ALLC_ITEM.ITEM_SER_NO,'') = ISNULL(R_ITEM.ITEM_SER_NO,'')
		 WHERE 1 = 1
		   <!-- AND OB.BK_STS_CD != 'C' -->
		   AND OB.WH_CD = #wh_cd#
		<isNotEmpty property="ctrt_no">	    
		   AND OB.CTRT_NO = #ctrt_no#
		</isNotEmpty>
		<isNotEqual property="ord_tp_cd" compareValue="ALL">	
		   AND OB.ORD_TP_CD = #ord_tp_cd#
		</isNotEqual>
		<isNotEmpty property="cond_no">
			<isEqual property="cond_tp_no" compareValue="WOB_BK_NO">		    
		        <!-- #3597 [J&A] WMS Inbound List Order # like search -->
		        <!-- AND OB.WOB_BK_NO IN <iterate property="cond_no_in" conjunction="," open="(" close=")" >  #cond_no_in[]#  </iterate> -->
		        AND OB.WOB_BK_NO LIKE #cond_no# + '%'
		    </isEqual>
		    <isEqual property="cond_tp_no" compareValue="CUST_ORD_NO">	
		        <!-- #3597 [J&A] WMS Inbound List Order # like search -->
		        <!-- AND OB.CUST_ORD_NO IN <iterate property="cond_no_in" conjunction="," open="(" close=")" >  #cond_no_in[]#  </iterate> -->
		        AND OB.CUST_ORD_NO LIKE #cond_no# + '%'
		    </isEqual>
		    <isEqual property="cond_tp_no" compareValue="WAVE_NO">	
		        AND (EXISTS (SELECT 'X'
		                       FROM TL_WH_WAVE_OB WAVE_OB_CHK
		                       <!-- #3597 [J&A] WMS Inbound List Order # like search -->
		                       <!-- WHERE WAVE_OB_CHK.WAVE_NO IN <iterate property="cond_no_in" conjunction="," open="(" close=")">  #cond_no_in[]#  </iterate> -->
		                       WHERE WAVE_OB_CHK.WAVE_NO LIKE #cond_no# + '%'
		                        AND WAVE_OB_CHK.WOB_BK_NO = OB.WOB_BK_NO
		                    )       
		            ) 
		    </isEqual>
		</isNotEmpty>
		<isNotEmpty property="cond_fm_date">	    
			<isEqual property="cond_tp_date" compareValue="BK_DATE">	
				AND OB.BK_DATE BETWEEN REPLACE (#cond_fm_date#, '-', '') AND REPLACE (#cond_to_date#, '-', '') 
			</isEqual>
			<isEqual property="cond_tp_date" compareValue="EST_OUT_DT">	
				AND OB.EST_OUT_DT BETWEEN REPLACE (#cond_fm_date#, '-', '') AND REPLACE (#cond_to_date#, '-', '') 
			</isEqual>
			<isEqual property="cond_tp_date" compareValue="OUTBOUND_DT">	
				AND (EXISTS (SELECT 'X'
		                       FROM TL_WH_ISSU S
		                      WHERE S.WALC_NO = ALLC_ITEM.WALC_NO
		                        AND S.OUTBOUND_DT BETWEEN REPLACE (#cond_fm_date#, '-', '') AND REPLACE (#cond_to_date#, '-', '')          	                                    
		                    )
		          OR EXISTS (SELECT 'X'
		                       FROM TL_WH_LOAD_PLAN P,
		                            TL_WH_LOAD_PLAN_ITEM PI
		                      WHERE P.LP_NO = PI.LP_NO
		                        AND P.LP_STS_CD = 'L'
		                        AND PI.WOB_BK_NO = ALLC_ITEM.WOB_BK_NO
		                        AND P.OUTBOUND_DT BETWEEN REPLACE (#cond_fm_date#, '-', '') AND REPLACE (#cond_to_date#, '-', '')
		                    )
		            )
			</isEqual>
		</isNotEmpty>
		<isNotEmpty property="item_cd">	    
		 	AND OB_ITEM.ITEM_CD = #item_cd#
		</isNotEmpty>
		<isNotEmpty property="buyer_addr">	
			<isEqual property="ship_to_tp" compareValue="SHIP_TO_CODE">	
		   	AND OB.BUYER_CD = #buyer_cd#
		   	</isEqual>
		   	<isEqual property="ship_to_tp" compareValue="SHIP_TO_ADDR">	
		  	AND LTRIM(RTRIM(OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3+ ' ' + OB.BUYER_ADDR4+ ' ' + OB.BUYER_ADDR5)) LIKE '%' +  #buyer_addr# + '%'
		  	</isEqual>
		</isNotEmpty>
		<isNotEmpty property="buyer_cd">	
			<isEmpty property="buyer_addr">
				<isEqual property="ship_to_tp" compareValue="SHIP_TO_CODE">	
			   	AND OB.BUYER_CD = #buyer_cd#
			   	</isEqual>
			   	<isEqual property="ship_to_tp" compareValue="SHIP_TO_ADDR">	
			  	AND LTRIM(RTRIM(OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3+ ' ' + OB.BUYER_ADDR4+ ' ' + OB.BUYER_ADDR5)) LIKE '%' +  #buyer_addr# + '%'
			  	</isEqual>
		  	</isEmpty>
		</isNotEmpty>
		<!-- #4209 BUYER_NM 검색 조건 추가 -->
		<isEmpty property="buyer_cd">	
			<isNotEmpty property="buyer_nm">
				<isEqual property="ship_to_tp" compareValue="SHIP_TO_CODE">	
			   	AND OB.BUYER_NM LIKE #buyer_nm# + '%'
			   	</isEqual>
		  	</isNotEmpty>
		</isEmpty>		
		<isNotEmpty property="lot_no">	    
		   AND (
		            (ALLC_ITEM.WALC_NO IS NULL AND OB_ITEM.LOT_NO = #lot_no#) 
		         OR (ALLC_ITEM.WALC_NO IS NOT NULL AND EXISTS (
											         			SELECT 'X'
											         			  FROM TL_CTRT_CUST_ITEM_LOT LOT
											         			 WHERE LOT.CTRT_NO     = OB.CTRT_NO
											                       AND LOT.ITEM_SYS_NO = ALLC_ITEM.ITEM_SYS_NO
											                       AND LOT.LOT_ID      = ALLC_ITEM.LOT_ID
											                       AND LOT.LOT_ATTRIB_02 = #lot_no#
											                   )
		            )
		       )  
		</isNotEmpty> 
		<isNotEmpty property="ref_no">	    
		   <isEqual property="ref_tp" compareValue="REF_NO">	
		   AND OB.REF_NO = #ref_no#
		   </isEqual>               
		   <isEqual property="ref_tp" compareValue="MBL_NO">	
		   AND OB.MBL_NO = #ref_no#
		   </isEqual>
		   <isEqual property="ref_tp" compareValue="HBL_NO">	
		   AND OB.HBL_NO = #ref_no#
		   </isEqual> 
		   <isEqual property="ref_tp" compareValue="SAO_NO">	
		   AND OB_ITEM.SAO_NO = #ref_no#
		   </isEqual> 
		</isNotEmpty>
		    ) T
			LEFT JOIN TL_CTRT_CUST_ITEM CI
			       ON T.CTRT_NO     = CI.CTRT_NO
			      AND T.ITEM_SYS_NO = CI.ITEM_SYS_NO
			LEFT JOIN TL_CTRT_CUST_ITEM_LOT D	
			       ON T.CTRT_NO     = D.CTRT_NO 
			      AND T.ITEM_SYS_NO = D.ITEM_SYS_NO
				  AND T.LOT_ID      = D.LOT_ID
			<!-- LEFT JOIN TL_WH_WAVE_OB WAVE_OB
				   ON T.WOB_BK_NO     = WAVE_OB.WOB_BK_NO
			LEFT JOIN TL_WH_WAVE WAVE      
			       ON WAVE_OB.WAVE_NO = WAVE.WAVE_NO -->
			<!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST (S) -->
            <!-- LEFT OUTER JOIN TL_CTRT_CUST_FRT CFRT
                    ON T.WOB_BK_NO = CFRT.WOB_BK_NO AND CFRT.DELT_FLG='N' -->  
            <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST (E) -->
            
            <!-- #4471 테스트 중 발견된 #3558로 인한 버그 수정 -->
            <!-- Multi Location Allocation - List Qty Mismatch -->
            LEFT OUTER JOIN 
            ( SELECT 
	             ROW_NUMBER() OVER ( PARTITION  BY WOB_BK_NO ORDER BY ITEM_CD ) FRT_RN 
	             , FT.*  
	             FROM TL_CTRT_CUST_FRT FT 
	             WHERE FT.WOB_BK_NO = WOB_BK_NO 
	             AND DELT_FLG='N'  
             ) CFRT
                ON T.WOB_BK_NO = CFRT.WOB_BK_NO 
           		AND CFRT.DELT_FLG='N'                  
		   		AND CFRT.FRT_RN= 1 
		WHERE 1=1
		<isEqual prepend="AND" property="bk_sts_cd" compareValue="ALL" >
		  		T.BK_STS_CD != 'C'
		  </isEqual>
		  <isEqual prepend="AND" property="bk_sts_cd" compareValue="C" >
		  		T.BK_STS_CD = 'C'
		  </isEqual>
		  <isNotEqual property="bk_sts_cd" compareValue="ALL" >	
		  	<isNotEqual  property="bk_sts_cd" compareValue="C" >	
		    	AND (CASE WHEN T.BK_STS_CD = 'BK' OR T.BK_STS_CD = 'LP' THEN 'X' ELSE T.BK_STS_CD END) = #bk_sts_cd#
		  	</isNotEqual>
		  </isNotEqual>
		)
	</sql>	
	<select id="searchWHOutListPerLoc" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerLoc */
		<include refid="searchWHOutListWith" />
		SELECT  WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(TRUCKER_CD) AS TRUCKER_CD
			     , MAX(TRUCKER_NM) AS TRUCKER_NM
			     , MAX(RMK) AS RMK
			     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
			     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO
			     , ITEM_SYS_NO
			     , MAX(ITEM_CD) ITEM_CD
			     , MAX(ITEM_NM) ITEM_NM
			     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
			     , SUM(ITEM_PKGQTY) AS ITEM_PKGQTY
			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , MAX(INBOUND_DT_OB) AS INBOUND_DT_OB
			     , MAX(LOT_NO_OB) AS LOT_NO_OB
			     , MAX(EXP_DT_OB) AS EXP_DT_OB
			     , MAX(LOT_04_OB) AS LOT_04_OB
			     , MAX(LOT_05_OB) AS LOT_05_OB
			     , WH_LOC_NM
			     , WALC_NO
			     , MAX(WIB_BK_NO) WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT
			     , MAX(LOT_NO) AS LOT_NO
			     , MAX(EXP_DT) AS EXP_DT
			     , MAX(LOT_04) AS LOT_04
			     , MAX(LOT_05) AS LOT_05
			     , MAX(LOT_ID) AS LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(INV_STS_NM) AS INV_STS_NM    <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
			     
			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   			     

				 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 , MAX(DLVR_FLG) AS DLVR_FLG   			     
		  FROM (
				SELECT WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(TRUCKER_CD) AS TRUCKER_CD
				     , MAX(TRUCKER_NM) AS TRUCKER_NM
				     , MAX(RMK) AS RMK
				     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
				     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) ITEM_CD
				     , MAX(ITEM_NM) ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , MAX(INBOUND_DT_OB) AS INBOUND_DT_OB
				     , MAX(LOT_NO_OB) AS LOT_NO_OB
				     , MAX(EXP_DT_OB) AS EXP_DT_OB
				     , MAX(LOT_04_OB) AS LOT_04_OB
				     , MAX(LOT_05_OB) AS LOT_05_OB
				     , WH_LOC_NM
				     , WALC_NO
				     , MAX(WIB_BK_NO) WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT) AS INBOUND_DT
				     , MAX(LOT_NO) AS LOT_NO
				     , MAX(EXP_DT) AS EXP_DT
				     , MAX(LOT_04) AS LOT_04
				     , MAX(LOT_05) AS LOT_05
				     , MAX(LOT_ID) AS LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , MAX(INV_STS_NM) AS INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
				     
					 <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 	 ,MAX(RGST_ID) AS RGST_ID
				 	 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
				 	 
				 	 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   			     
				  FROM TAB WHERE 1=1
				  GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO,ITEM_SEQ, WH_LOC_NM
	      ) LAST_TAB
	     GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO, WH_LOC_NM
		  <isEqual property="search_tp" compareValue="LOC">	
		ORDER BY MODI_SYS_DT DESC, WAVE_NO ASC, WOB_BK_NO ASC, ITEM_SYS_NO ASC, INBOUND_DT ASC, LOT_NO ASC, WH_LOC_NM ASC
		</isEqual>
		</select> 
		
		<select id="searchWHOutListPerLocByOrder" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerLocByOrder */
		<include refid="searchWHOutListWith" />
			SELECT  WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO
			    
			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , MAX(INBOUND_DT_OB) AS INBOUND_DT_OB

			     , MAX(WH_LOC_NM) AS WH_LOC_NM
			     , MAX(WALC_NO) AS WALC_NO
			     , MAX(WIB_BK_NO) WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT

			     , MAX(LOT_ID) AS LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(INV_STS_NM) AS INV_STS_NM    <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
			     
			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT
				 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
				 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
				 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
				 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
			     ,MAX(RMK) AS RMK  			     
			     
			     <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 , MAX(DLVR_FLG) AS DLVR_FLG   			       			     
		  FROM (
				SELECT WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) ITEM_CD
				     , MAX(ITEM_NM) ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , MAX(INBOUND_DT_OB) AS INBOUND_DT_OB
				     , MAX(LOT_NO_OB) AS LOT_NO_OB
				     , MAX(EXP_DT_OB) AS EXP_DT_OB
				     , MAX(LOT_04_OB) AS LOT_04_OB
				     , MAX(LOT_05_OB) AS LOT_05_OB
				     , WH_LOC_NM
				     , WALC_NO
				     , MAX(WIB_BK_NO) WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT) AS INBOUND_DT
				     , MAX(LOT_NO) AS LOT_NO
				     , MAX(EXP_DT) AS EXP_DT
				     , MAX(LOT_04) AS LOT_04
				     , MAX(LOT_05) AS LOT_05
				     , MAX(LOT_ID) AS LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , MAX(INV_STS_NM) AS INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
				     
					 <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 	 ,MAX(RGST_ID) AS RGST_ID
				 	 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
					 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
					 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
					 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
					 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
					 ,MAX(RMK) AS RMK
					 
					 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   			     
				  FROM TAB WHERE 1=1
				  GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO,ITEM_SEQ, WH_LOC_NM
	      ) LAST_TAB
	     GROUP BY WAVE_NO, WOB_BK_NO, SAO_SYS_NO
		  <isEqual property="search_tp" compareValue="LOC">	
		ORDER BY MODI_SYS_DT DESC, WAVE_NO ASC, WOB_BK_NO ASC, INBOUND_DT ASC, WH_LOC_NM ASC
		</isEqual>
		</select>
		  
		<select id="searchWHOutListPerLot" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerLot */
		<include refid="searchWHOutListWith" />
			SELECT MAX(DIV) AS DIV
			     , WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(TRUCKER_CD) AS TRUCKER_CD
			     , MAX(TRUCKER_NM) AS TRUCKER_NM
			     , MAX(RMK) AS RMK
			     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
			     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO
			     , ITEM_SYS_NO
			     , MAX(ITEM_CD) AS ITEM_CD
			     , MAX(ITEM_NM) AS ITEM_NM
			     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
			     , SUM(ITEM_PKGQTY) AS ITEM_PKGQTY
			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , WALC_NO
			     , MAX(WIB_BK_NO) WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT
			     , MAX(LOT_NO) AS LOT_NO
			     , MAX(EXP_DT) AS EXP_DT
			     , MAX(LOT_04) AS LOT_04
			     , MAX(LOT_05) AS LOT_05
			     , LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(RGST_TT) AS RGST_TT
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(INV_STS_NM) INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
			     
			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
				 
				 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 , MAX(DLVR_FLG) AS DLVR_FLG   			     
		  FROM (
				SELECT 0 AS DIV
				     , WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->				     
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(TRUCKER_CD) AS TRUCKER_CD
				     , MAX(TRUCKER_NM) AS TRUCKER_NM
				     , MAX(RMK) AS RMK
				     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
				     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) AS ITEM_CD
				     , MAX(ITEM_NM) AS ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , WALC_NO
				     , MAX(WIB_BK_NO) WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT) AS INBOUND_DT
				     , MAX(LOT_NO) AS LOT_NO
				     , MAX(EXP_DT) AS EXP_DT
				     , MAX(LOT_04) AS LOT_04
				     , MAX(LOT_05) AS LOT_05
				     , LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , MAX(RGST_TIMESTAMP) AS RGST_TT
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(INV_STS_NM) INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
				     
				     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
					 ,MAX(RGST_ID) AS RGST_ID
					 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT       

					 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   			        
				  FROM TAB WHERE 1=1
				 GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO, LOT_ID, ITEM_SEQ<!-- , WIB_BK_NO, PO_SYS_NO, ITEM_SER_NO, LIC_PLAT_NO -->
		      ) LAST_TAB
		      GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO, LOT_ID<!-- , ITEM_SEQ, WIB_BK_NO, PO_SYS_NO, ITEM_SER_NO, LIC_PLAT_NO -->
		  ORDER BY DIV, MODI_SYS_DT DESC, LTRIM(RTRIM(WAVE_NO)) ASC, WOB_BK_NO ASC, RGST_TT ASC, ITEM_SYS_NO ASC, ITEM_SEQ ASC, INBOUND_DT ASC, LOT_NO ASC
			</select> 
		<select id="searchWHOutListPerLotByOrder" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerLotByOrder */
		<include refid="searchWHOutListWith" />
			SELECT MAX(DIV) AS DIV
			     , WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO

			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , MAX(WALC_NO) AS WALC_NO
			     , MAX(WIB_BK_NO) WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT

			     , MAX(LOT_ID) AS LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(RGST_TT) AS RGST_TT
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(INV_STS_NM) INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
			     
			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
				 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
				 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
				 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
				 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
			     ,MAX(RMK) AS RMK
			     
			     <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 , MAX(DLVR_FLG) AS DLVR_FLG   	
		  FROM (
				SELECT 0 AS DIV
				     , WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->				     
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) AS ITEM_CD
				     , MAX(ITEM_NM) AS ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , WALC_NO
				     , MAX(WIB_BK_NO) WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT) AS INBOUND_DT
				     , MAX(LOT_NO) AS LOT_NO
				     , MAX(EXP_DT) AS EXP_DT
				     , MAX(LOT_04) AS LOT_04
				     , MAX(LOT_05) AS LOT_05
				     , LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , MAX(RGST_TIMESTAMP) AS RGST_TT
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(INV_STS_NM) INV_STS_NM  <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->
				     
				     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
					 ,MAX(RGST_ID) AS RGST_ID
					 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT     
					 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
					 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
					 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
					 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
					 ,MAX(RMK) AS RMK
				
					 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   	
				  FROM TAB WHERE 1=1
				 GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO, LOT_ID, ITEM_SEQ<!-- , WIB_BK_NO, PO_SYS_NO, ITEM_SER_NO, LIC_PLAT_NO -->
		      ) LAST_TAB
		      GROUP BY WAVE_NO, WOB_BK_NO, SAO_SYS_NO <!-- , ITEM_SEQ, WIB_BK_NO, PO_SYS_NO, ITEM_SER_NO, LIC_PLAT_NO -->
		  ORDER BY DIV, MODI_SYS_DT DESC, LTRIM(RTRIM(WAVE_NO)) ASC, WOB_BK_NO ASC, RGST_TT ASC, INBOUND_DT ASC
		</select> 
		<select id="searchWHOutListPerSku" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerSku */
		<include refid="searchWHOutListWith" />
			SELECT MAX(DIV) DIV
			     , WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(TRUCKER_CD) AS TRUCKER_CD
			     , MAX(TRUCKER_NM) AS TRUCKER_NM
			     , MAX(RMK) AS RMK
			     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
			     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO
			     , ITEM_SYS_NO
			     , MAX(ITEM_CD) AS ITEM_CD
			     , MAX(ITEM_NM) AS ITEM_NM
			     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
			     , SUM(ITEM_PKGQTY) AS ITEM_PKGQTY
			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , WALC_NO
			     , '' AS WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT
			     , MAX(LOT_NO) AS LOT_NO
			     , MAX(EXP_DT) AS EXP_DT
			     , MAX(LOT_04) AS LOT_04
			     , MAX(LOT_05) AS LOT_05
			     , MAX(LOT_ID) AS LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(RGST_TT) AS RGST_TT
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(INV_STS_NM) INV_STS_NM   <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->

			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   			     
				 
				 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 , MAX(DLVR_FLG) AS DLVR_FLG   	
		  FROM (
				SELECT 0 AS DIV
				     , WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->				     
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(TRUCKER_CD) AS TRUCKER_CD
				     , MAX(TRUCKER_NM) AS TRUCKER_NM
				     , MAX(RMK) AS RMK
				     , MAX(DLV_ORD_NO) AS DLV_ORD_NO
				     , MAX(COMMC_INV_NO) AS COMMC_INV_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) AS ITEM_CD
				     , MAX(ITEM_NM) AS ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , WALC_NO
				     , '' AS WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT_OB) AS INBOUND_DT
				     , MAX(LOT_NO_OB) AS LOT_NO
				     , MAX(EXP_DT_OB) AS EXP_DT
				     , MAX(LOT_04_OB) AS LOT_04
				     , MAX(LOT_05_OB) AS LOT_05
				     , MAX(FIX_LOT_ID) AS LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , MAX(RGST_TIMESTAMP) AS RGST_TT
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(INV_STS_NM) INV_STS_NM   <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->

			     	 <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 	 ,MAX(RGST_ID) AS RGST_ID
				 	 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   				     

				 	 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   					     
				  FROM TAB WHERE 1=1
				 GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO ,ITEM_SEQ <!-- , ITEM_SER_NO, LIC_PLAT_NO -->
		      ) LAST_TAB
		      GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO
		  ORDER BY DIV, MODI_SYS_DT DESC, LTRIM(RTRIM(WAVE_NO)) ASC, WOB_BK_NO ASC, RGST_TT ASC, ITEM_SYS_NO ASC, ITEM_SEQ ASC
	</select>
	<select id="searchWHOutListPerSkuByOrder" resultClass="WHOutMgmtListSearchVO">
		/* WHOutbk.searchWHOutListPerSkuByOrder */
		<include refid="searchWHOutListWith" />
			SELECT MAX(DIV) DIV
			     , WOB_BK_NO
			     , MAX(WH_CD) AS WH_CD
			     , MAX(WH_NM) AS WH_NM
			     , MAX(CTRT_NM) AS CTRT_NM
			     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
			     , MAX(ORD_TP_CD) AS ORD_TP_CD
			     , MAX(ORD_TP_NM) AS ORD_TP_NM
			     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
			     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     , MAX(MBL_NO) AS MBL_NO
			     , MAX(HBL_NO) AS HBL_NO
			     , MAX(REF_NO) AS REF_NO
			     , MAX(EST_OUT_DT) AS EST_OUT_DT
			     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
			     , SAO_SYS_NO
			     <!--, ITEM_SYS_NO -->
			     
			     , SUM(ITEM_EA_QTY) AS ITEM_EA_QTY
			     , MAX(PKG_INFO) AS PKG_INFO
			     , MAX(SAO_NO) AS SAO_NO
			     , MAX(WALC_NO) AS WALC_NO
			     , '' AS WIB_BK_NO
			     , MAX(PO_NO) AS PO_NO     
			     , MAX(PICKD_FLG) AS PICKD_FLG
			     , MAX(BK_STS_CD) AS BK_STS_CD
			     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
			     , SUM(ITEM_CBM) AS ITEM_CBM
			     , SUM(ITEM_CBF) AS ITEM_CBF
			     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
			     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
			     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
			     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
			     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
			     , MAX(EQ_NO) AS EQ_NO
			     , MAX(SEAL_NO) AS SEAL_NO
			     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
			     , MAX(INBOUND_DT) AS INBOUND_DT
			    
			     , MAX(LOT_ID) AS LOT_ID
			     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
			     , WAVE_NO
			     , MAX(BK_STS_NM) AS BK_STS_NM
			     , MAX(CURR_CD) AS CURR_CD
			     , MAX(UNIT_PRICE) AS UNIT_PRICE
			     , MAX(RGST_TT) AS RGST_TT
			     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
			     , MAX(ITEM_SEQ) ITEM_SEQ
			     , MAX(ITEM_SER_NO) ITEM_SER_NO
			     , MIN(LIC_PLAT_NO) + CASE WHEN (ISNULL(MIN(LIC_PLAT_NO),'') != '' OR COUNT(LIC_PLAT_NO) - 1 = 0) THEN '' ELSE ' + ' + CONVERT(VARCHAR(20), COUNT(LIC_PLAT_NO) - 1) END LIC_PLAT_NO
			     , MAX(INV_STS_NM) INV_STS_NM   <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->

			     <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 ,MAX(RGST_ID) AS RGST_ID
				 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
				 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
				 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
				 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
				 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
			     ,MAX(RMK) AS RMK
			     
			 	 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
			 	 , MAX(DLVR_FLG) AS DLVR_FLG   	
		  FROM (
				SELECT 0 AS DIV
				     , WOB_BK_NO
				     , MAX(WH_CD) AS WH_CD
				     , MAX(WH_NM) AS WH_NM
				     , MAX(CTRT_NM) AS CTRT_NM
				     , MAX(CUST_ORD_NO) AS CUST_ORD_NO
				     , MAX(ORD_TP_CD) AS ORD_TP_CD
				     , MAX(ORD_TP_NM) AS ORD_TP_NM
				     <!-- , MAX(SHIP_TO) AS SHIP_TO -->
				     , MAX(SHIP_TO_NM) AS SHIP_TO_NM     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			         , MAX(SHIP_TO_ADDR) AS SHIP_TO_ADDR <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->				     
				     , MAX(MBL_NO) AS MBL_NO
				     , MAX(HBL_NO) AS HBL_NO
				     , MAX(REF_NO) AS REF_NO
				     , MAX(EST_OUT_DT) AS EST_OUT_DT
				     , MAX(OUTBOUND_DT) AS OUTBOUND_DT
				     , SAO_SYS_NO
				     , ITEM_SYS_NO
				     , MAX(ITEM_CD) AS ITEM_CD
				     , MAX(ITEM_NM) AS ITEM_NM
				     , MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT
				     , MAX(ITEM_PKGQTY) AS ITEM_PKGQTY
				     , MAX(ITEM_EA_QTY) AS ITEM_EA_QTY
				     , MAX(PKG_INFO) AS PKG_INFO
				     , MAX(SAO_NO) AS SAO_NO
				     , WALC_NO
				     , '' AS WIB_BK_NO
				     , MAX(PO_NO) AS PO_NO     
				     , MAX(PICKD_FLG) AS PICKD_FLG
				     , MAX(BK_STS_CD) AS BK_STS_CD
				     , SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
				     , SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY
				     , SUM(ITEM_CBM) AS ITEM_CBM
				     , SUM(ITEM_CBF) AS ITEM_CBF
				     , SUM(ITEM_GRS_KGS) AS ITEM_GRS_KGS
				     , SUM(ITEM_GRS_LBS) AS ITEM_GRS_LBS
				     , SUM(ITEM_NET_KGS) AS ITEM_NET_KGS
				     , SUM(ITEM_NET_LBS) AS ITEM_NET_LBS
				     , MAX(EQ_TPSZ_CD) AS EQ_TPSZ_CD
				     , MAX(EQ_NO) AS EQ_NO
				     , MAX(SEAL_NO) AS SEAL_NO
				     , SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY
				     , MAX(INBOUND_DT_OB) AS INBOUND_DT
				     , MAX(LOT_NO_OB) AS LOT_NO
				     , MAX(EXP_DT_OB) AS EXP_DT
				     , MAX(LOT_04_OB) AS LOT_04
				     , MAX(LOT_05_OB) AS LOT_05
				     , MAX(FIX_LOT_ID) AS LOT_ID
				     , MAX(SMP_WAVE_FLG) AS SMP_WAVE_FLG
				     , WAVE_NO
				     , MAX(BK_STS_NM) AS BK_STS_NM
				     , MAX(CURR_CD) AS CURR_CD
				     , MAX(UNIT_PRICE) AS UNIT_PRICE
				     , MAX(RGST_TIMESTAMP) AS RGST_TT
				     , MAX(MODI_SYS_DT) AS MODI_SYS_DT
				     , ITEM_SEQ
				     , MAX(ITEM_SER_NO) ITEM_SER_NO
				     , MAX(LIC_PLAT_NO) LIC_PLAT_NO
				     , MAX(INV_STS_NM) INV_STS_NM   <!-- #2321 [WMS4.0] INVOICE PAID STATUS TO BE ADDED TO IN/OUTBOUND LIST -->

			     	 <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
				 	 ,MAX(RGST_ID) AS RGST_ID
				 	 ,MAX(RGST_LOC_DT) AS RGST_LOC_DT   
					 ,MAX(TRUCKER_CD) AS TRUCKER_CD 
					 ,MAX(TRUCKER_NM) AS TRUCKER_NM   
					 ,MAX(DLV_ORD_NO) AS DLV_ORD_NO
					 ,MAX(COMMC_INV_NO) AS COMMC_INV_NO   
					 ,MAX(RMK) AS RMK
				
					 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
				 	 , MAX(DLVR_FLG) AS DLVR_FLG   	
				  FROM TAB WHERE 1=1
				 GROUP BY WAVE_NO, WALC_NO, WOB_BK_NO, SAO_SYS_NO, ITEM_SYS_NO ,ITEM_SEQ <!-- , ITEM_SER_NO, LIC_PLAT_NO -->
		      ) LAST_TAB
		      GROUP BY WAVE_NO, WOB_BK_NO, SAO_SYS_NO

		  ORDER BY DIV, MODI_SYS_DT DESC, LTRIM(RTRIM(WAVE_NO)) ASC, WOB_BK_NO ASC, RGST_TT ASC
	</select> 	
	<!-- WHOutList (E) -->
	<select id="searchWHOutMgmtList" resultClass="grd01WHOutMgmtVO">
		/*WHOutMgmt.searchWHOutMgmtList */
		SELECT T.*
		     , CASE WHEN T.BK_STS_CD_ORG = 'BK' OR T.BK_STS_CD_ORG = 'LP' THEN 'X' 
		            ELSE T.BK_STS_CD_ORG END AS BK_STS_CD
		  FROM (
		SELECT OB.WOB_BK_NO
		     , OB.SO_NO     
		     , OB.WH_CD
		     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM     
		     , OB.BK_DATE
		     , CASE WHEN OB.BK_STS_CD = 'N' OR OB.BK_STS_CD = 'C' THEN OB.BK_STS_CD            	  
		            WHEN OB.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'BK'
		            WHEN OB.BK_STS_CD ='I' AND (SELECT COUNT (1)
		                      	                  FROM TL_WH_LOAD_PLAN LP
				                                     , TL_WH_LOAD_PLAN_ITEM LPI
				                                 WHERE LP.LP_NO = LPI.LP_NO		                                     
				                                   AND OB.WOB_BK_NO = LPI.WOB_BK_NO
				                                   AND LP.LP_STS_CD = 'L') > 0 THEN 'LP'            
		            WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL( ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'            
		            WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'            
		            WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'
		            ELSE '' END AS BK_STS_CD_ORG
		     , ISNULL(LTRIM(RTRIM(OB.CUST_ORD_NO)), ' ') AS CUST_ORD_NO
		     , OB.ORD_TP_CD
		     , OB.EST_OUT_DT
		     , OB.EST_OUT_HM
		     , OB.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
		     , OB.RTP_NO
		     , OB.EQ_TP_CD
			   , OB.EQ_TPSZ_CD
			   , OB.EQ_NO
			   , OB.SEAL_NO
			   , OB.TRO_FLG
			   , OB.TLO_FLG
		     , OB.DLV_ORD_NO
		     , OB.LOAD_TP_CD
				 , OB.TRADE_TP_CD
		     , OB.MBL_NO
		     , OB.HBL_NO
		     , OB.REF_NO
		     , OB.COMMC_INV_NO
		     , OB.RMK
		     , OB.OWNER_CD
		     , dbo.TL_GET_CUST_NM (OB.OWNER_CD) OWNER_NM
		     , OB.OWNER_ADDR1
		     , OB.OWNER_ADDR2
		     , OB.OWNER_ADDR3
		     , OB.OWNER_ADDR4
		     , OB.OWNER_ADDR5
		     , OB.BUYER_CD
		     , dbo.TL_GET_CUST_NM (OB.BUYER_CD) BUYER_NM
		     , ISNULL(OB.BUYER_ADDR1, ' ') AS BUYER_ADDR1
		     , OB.BUYER_ADDR2
		     , OB.BUYER_ADDR3
		     , OB.BUYER_ADDR4
		     , OB.BUYER_ADDR5
		     , OB.VSL_CD
		     , OB.VSL_NM
		     , OB.VOY
		     , OB.CARRIER_CD
		     , dbo.TL_GET_CUST_NM (OB.CARRIER_CD) CARRIER_NM
		     , OB.POL
		     , dbo.TL_GET_LOC_NM (OB.POL) AS POL_NM
		     , OB.POD
		     , dbo.TL_GET_LOC_NM (OB.POD) AS POD_NM
		     , OB.DEL
		     , dbo.TL_GET_LOC_NM (OB.DEL) AS DEL_NM
		     , OB.ETD
		     , OB.ETA
		     , CASE WHEN LTRIM(RTRIM( OB.SUPV_NM)) IS NULL OR LTRIM(RTRIM( OB.SUPV_NM)) = '' THEN 'N' 
		            ELSE 'Y' END AS WORK_SHT_YN
		     , '+' AS ROW_ADD
		     , '' AS ROW_DEL
		     , OB.RGST_SYS_DT
		     , WV_OB.WAVE_NO
		     , (SELECT ISNULL( SMP_WAVE_FLG, 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG   
		  FROM TL_WH_OB OB     
	 LEFT JOIN TL_WH_ALLC ALLC 
			ON OB.WOB_BK_NO = ALLC.WOB_BK_NO  
 	 LEFT JOIN TL_WH_ISSU ISSU
			ON ALLC.WALC_NO = ISSU.WALC_NO
 	 LEFT JOIN TL_WH_WAVE_OB WV_OB 
			ON OB.WOB_BK_NO = WV_OB.WOB_BK_NO
		 WHERE 1 = 1
		 /*OB.BK_STS_CD != 'C' CANCEL, Initial상태는 제외한 모든것*/
		<isNotEmpty prepend="AND" property="list_wh_cd">	   
		  	   OB.WH_CD = #list_wh_cd#
		</isNotEmpty>	
		<isNotEmpty prepend="AND" property="list_ctrt_no">	
		   	   OB.CTRT_NO = #list_ctrt_no#
   	    </isNotEmpty>
		<isNotEmpty prepend="AND" property="list_in_no">
			<isEqual  property="list_in_search_tp" compareValue="WOB_BK_NO">	  	   
		   		OB.WOB_BK_NO = #list_in_no#
			</isEqual>
			<isEqual  property="list_in_search_tp" compareValue="CUST_ORD_NO">
		   		OB.CUST_ORD_NO = #list_in_no#
			</isEqual>
		</isNotEmpty>
		<isNotEmpty prepend="AND" property="list_fm_date">	
			<isEqual  property="list_in_date_tp" compareValue="BK_DATE">
		   		OB.BK_DATE BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
			</isEqual>
			<isEqual  property="list_in_date_tp" compareValue="EST_OUT_DT">
		   		OB.EST_OUT_DT BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
			</isEqual>
			<isEqual  property="list_in_date_tp" compareValue="RGST_LOC_DT">
				CONVERT(VARCHAR(8), OB.RGST_LOC_DT, 'YYYYMMDD') BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
			</isEqual>
		</isNotEmpty>
		<isNotEqual prepend="AND" property="list_ord_tp_cd" compareValue="ALL" >	
		   		OB.ORD_TP_CD = #list_ord_tp_cd#
		</isNotEqual>
		     ) T 
		  WHERE 1=1
		  <isEqual prepend="AND" property="list_bk_sts_cd" compareValue="ALL" >
		  		T.BK_STS_CD_ORG != 'C'
		  </isEqual>
		  <isEqual prepend="AND" property="list_bk_sts_cd" compareValue="C" >
		  		T.BK_STS_CD_ORG = 'C'
		  </isEqual>
		  <isNotEqual prepend="AND" property="list_bk_sts_cd" compareValue="ALL" >	
		  	<isNotEqual  property="list_bk_sts_cd" compareValue="C" >	
		    	(CASE WHEN T.BK_STS_CD_ORG = 'BK' OR T.BK_STS_CD_ORG = 'LP' THEN 'X' ELSE T.BK_STS_CD_ORG END)= #list_bk_sts_cd#
		  	</isNotEqual>
		  </isNotEqual>
		  ORDER BY T.RGST_SYS_DT ASC, T.WH_CD ASC, T.CUST_ORD_NO ASC, T.EST_OUT_DT ASC
	</select>
	<select id="searchWHOutMgmtFormInfo" resultClass="grd00WHOutMgmtVO">
	/* WHOutMgmt.searchWHOutMgmtFormInfo */	
		SELECT TOP 1 T.* 
		     , CASE WHEN T.BK_STS_CD_ORG = 'BK' OR T.BK_STS_CD_ORG = 'LP' THEN 'X' 
		            ELSE T.BK_STS_CD_ORG END AS BK_STS_CD
		     , dbo.TL_GET_COMM_NM('WB6',CASE WHEN T.BK_STS_CD_ORG = 'BK' OR T.BK_STS_CD_ORG = 'LP' THEN 'X' 
		           			 			 ELSE T.BK_STS_CD_ORG END) AS BK_STS_NM 
		     , CASE WHEN T.OUT_DT IS NULL OR T.OUT_DT = '' THEN '' ELSE (SUBSTRING(T.OUT_DT,5,2)+'-'+SUBSTRING(T.OUT_DT,7,2)+'-'+SUBSTRING(T.OUT_DT,0,5)) END AS OUTBOUND_DT            
		  FROM (
			SELECT OB.WH_CD
			     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM 
			     , OB.CTRT_NO
			     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
			     , OB.RTP_NO
			     , OB.OWNER_CD
			     , dbo.TL_GET_CUST_NM (OB.OWNER_CD) OWNER_NM
			     , OB.OWNER_ADDR1
			     , OB.OWNER_ADDR2
			     , OB.OWNER_ADDR3
			     , OB.OWNER_ADDR4
			     , OB.OWNER_ADDR5
			     , ISNULL(LTRIM(RTRIM(OB.CUST_ORD_NO)), ' ') AS CUST_ORD_NO
			     , OB.WOB_BK_NO
			     , CASE WHEN OB.BK_STS_CD = 'N' OR OB.BK_STS_CD = 'C' THEN OB.BK_STS_CD      
			            WHEN OB.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'BK'
			            WHEN OB.BK_STS_CD ='I' AND (SELECT COUNT (1)
		                      	                      FROM TL_WH_LOAD_PLAN LP
				                                         , TL_WH_LOAD_PLAN_ITEM LPI
				                                     WHERE LP.LP_NO = LPI.LP_NO		                                     
				                                       AND OB.WOB_BK_NO = LPI.WOB_BK_NO
				                                       AND LP.LP_STS_CD = 'L') > 0 THEN 'LP'
		                WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'	            
		                WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'   
		                WHEN OB.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'         
		                ELSE '' END AS BK_STS_CD_ORG
			     , OB.ORD_TP_CD
			     , OB.BK_DATE
			     , OB.LOAD_TP_CD  
			     , OB.EST_OUT_DT
			     ,(CASE OB.EST_OUT_HM WHEN '' THEN  '' ELSE  (SUBSTRING(OB.EST_OUT_HM, 1, 2) + ':' + SUBSTRING(OB.EST_OUT_HM, 3, 2)) END) AS EST_OUT_HM 
			     , OB.TRADE_TP_CD	     
				 , OB.FWD_TP_CD
				 , OB.TRUCKER_CD
			     , dbo.TL_GET_CUST_NM (OB.TRUCKER_CD) TRUCKER_NM     
			     , OB.EQ_TPSZ_CD
				 , OB.EQ_NO
				 , OB.EQ_TP_CD
				 , OB.SEAL_NO
			     , OB.DLV_ORD_NO   
			     , OB.BUYER_CD  
			     
			     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
			     <!-- , dbo.TL_GET_CUST_NM (OB.BUYER_CD) BUYER_NM
			     , ISNULL(OB.BUYER_ADDR1, ' ') AS BUYER_ADDR1 -->
			 	 , ISNULL(OB.BUYER_NM, ' ') AS BUYER_NM
			     , ISNULL(OB.BUYER_ADDR1, ' ') AS BUYER_ADDR1
			     
			     , OB.BUYER_ADDR2
			     , OB.BUYER_ADDR3
			     , OB.BUYER_ADDR4
			     , OB.BUYER_ADDR5
			     , OB.REF_NO
			     , OB.COMMC_INV_NO
			     , OB.MBL_NO
			     , OB.HBL_NO
			     , OB.VSL_CD
			     , OB.VSL_NM
			     , OB.VOY 
			     , OB.CARRIER_CD
			     , dbo.TL_GET_CUST_NM (OB.CARRIER_CD) CARRIER_NM
			     , OB.POL
			     , dbo.TL_GET_LOC_NM (OB.POL) AS POL_NM
			     , OB.POD
			     , dbo.TL_GET_LOC_NM (OB.POD) AS POD_NM
			     , OB.DEL
			     , dbo.TL_GET_LOC_NM (OB.DEL) AS DEL_NM
			     , OB.ETD 
			     , OB.ETA 
			     , CASE WHEN LTRIM(RTRIM(OB.SUPV_NM )) IS NULL OR LTRIM(RTRIM(OB.SUPV_NM )) = '' THEN 'N' 
		                ELSE 'Y' END AS WORK_SHT_YN
			     , OB.RMK
			     , WV_OB.WAVE_NO
			     , (SELECT ISNULL(SMP_WAVE_FLG, 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG  
			     , ISNULL(WV.OUTBOUND_DT,ISSU.OUTBOUND_DT) AS OUT_DT			     

			     <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
		   		 , OB.DLVR_FLG
			     , OB.DLVR_DT
		  FROM TL_WH_OB OB
			LEFT JOIN TL_WH_ALLC ALLC 
					ON OB.WOB_BK_NO = ALLC.WOB_BK_NO  
		 	LEFT JOIN TL_WH_ISSU ISSU
					ON ALLC.WALC_NO = ISSU.WALC_NO
		 	LEFT JOIN TL_WH_WAVE_OB WV_OB 
					ON OB.WOB_BK_NO = WV_OB.WOB_BK_NO
			LEFT JOIN TL_WH_WAVE WV ON WV.WAVE_NO = WV_OB.WAVE_NO
		 WHERE  1= 1
		   AND OB.BK_STS_CD != 'C' 
		   <isNotEmpty property="wob_bk_no">   
			   AND OB.WOB_BK_NO = #wob_bk_no#
			</isNotEmpty>
			<isEmpty property="wob_bk_no">
			 	 <isNotEmpty property="cust_ord_no">   
				   AND OB.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
				 </isNotEmpty>
			</isEmpty>
	   	) T
	   	ORDER BY T.OUT_DT DESC
	</select>
	
	<select id="searchWHOutItemList" resultClass="grd02WHOutMgmtVO">
		/* WHOutMgmt.searchWHOutItemList */	
		  SELECT B.WH_CD,
	             dbo.TL_GET_LOC_NM(B.WH_CD) AS WH_NM, 
	             B.CTRT_NO,
	             dbo.TL_GET_CTRT_NM(B.CTRT_NO) AS CTRT_NM,
	             B.WOB_BK_NO,
		         I.SAO_SYS_NO,
		         I.ITEM_SYS_NO,
		         I.ITEM_SEQ,
		         I.ITEM_CD,
		         I.ITEM_NM,
		         I.LOT_NO,
		         I.ITEM_EA_QTY,
		         I.ITEM_PKGUNIT,
		         I.ITEM_PKGQTY,
		         (SELECT ISNULL (SUM (ISNULL (V.IN_QTY, 0) - ISNULL (V.ALLC_QTY, 0) - ISNULL (V.HOLD_QTY, 0) - ISNULL (V.DMG_QTY, 0) ), 0) 
		            FROM TL_WH_INV_ITEM V
		           WHERE V.CTRT_NO = B.CTRT_NO
		             AND V.ITEM_SYS_NO = I.ITEM_SYS_NO
		             AND NOT EXISTS
		                    (SELECT 'X'
		                       FROM TL_WH_ALLC AL
		                      WHERE AL.WOB_BK_NO = B.WOB_BK_NO)) AS STOCK_QTY,
		         I.ITEM_CBM,
		         I.ITEM_CBF,
		         I.ITEM_GRS_KGS,
		         I.ITEM_GRS_LBS,
		         I.ITEM_NET_KGS,
		         I.ITEM_NET_LBS,
		         I.INBOUND_DT,
		         I.EXP_DT,
		         I.LOT_04,
		         I.LOT_05,
		         I.FIX_LOT_ID,
		         I.SAO_NO,
		         I.CURR_CD,
		         I.UNIT_PRICE,
		         I.FIX_LOC_CD,
		         I.EQ_TPSZ_CD,
		         I.EQ_NO,
		         I.SEAL_NO,
		         dbo.TL_GET_WH_LOC_NM(B.WH_CD,I.FIX_LOC_CD) AS FIX_LOC_NM,
	             ISNULL(CI.PKG_LV1_QTY, 0)     AS PKG_LV1_QTY, 	     
                 CI.PKG_LV1_UNIT_CD AS PKG_LV1_UNIT_CD,	
                 dbo.TL_GET_PKG_NM(CI.PKG_LV1_UNIT_CD)	AS PKG_LV1_UNIT_NM,
                 ISNULL(CI.ITEM_PKGBASEQTY, 0) AS PKG_LV2_QTY,
                 CI.ITEM_PKGUNIT    AS PKG_LV2_UNIT_CD,
                 dbo.TL_GET_PKG_NM(CI.ITEM_PKGUNIT)	AS PKG_LV2_UNIT_NM, 
                 ISNULL(CI.PKG_LV3_QTY, 0)     AS PKG_LV3_QTY,
                 CI.PKG_LV3_UNIT_CD AS PKG_LV3_UNIT_CD,
                 (SELECT	lic_plat_desc FROM	TL_WH_LIC_PLAT_UT_CD PKG WHERE	PKG.lic_plat_ut_cd = ISNULL(CI.PKG_LV3_UNIT_CD, '')) AS PKG_LV3_UNIT_NM,
                 ISNULL(CI.PKG_LV4_QTY, 0)     AS PKG_LV4_QTY,
                 CI.PKG_LV4_UNIT_CD AS PKG_LV4_UNIT_CD,		         
		         ISNULL (CI.LV1_CBM, 0) AS LV1_CBM,
		         ISNULL (CI.LV1_CBF, 0) AS LV1_CBF,
		         ISNULL (CI.LV1_GRS_KGS, 0) AS LV1_GRS_KGS,
		         ISNULL (CI.LV1_GRS_LBS, 0) AS LV1_GRS_LBS,
		         ISNULL (CI.LV1_NET_KGS, 0) AS LV1_NET_KGS,
		         ISNULL (CI.LV1_NET_LBS, 0) AS LV1_NET_LBS,
		         dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
                                       , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD) AS PKG_INFO,
                 I.INVALID_YN,
                 '+' AS ROW_ADD,
                 CASE WHEN  B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN '-' ELSE ''END AS ROW_DEL,
                 1 AS ROW_ADD_QTY,
                 CASE WHEN B.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'X'
                      WHEN B.BK_STS_CD ='I' AND (SELECT COUNT (1)
                      	                          FROM TL_WH_LOAD_PLAN LP
		                                             , TL_WH_LOAD_PLAN_ITEM LPI
		                                          WHERE LP.LP_NO = LPI.LP_NO		                                     
		                                            AND B.WOB_BK_NO = LPI.WOB_BK_NO) > 0 THEN 'X'
                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'
                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') != 'Y' THEN 'A'            
                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'
                      ELSE B.BK_STS_CD END AS BK_STS_CD,
                      WV_OB.WAVE_NO,
                      (SELECT ISNULL(SMP_WAVE_FLG, 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG,
                      CI.UNIT_PRICE AS ITEM_UNIT_PRICE 
                  ,I.LIC_PLAT_NO, I.ITEM_SER_NO, I.PO_NO                        
		    FROM TL_WH_OB_ITEM I, TL_CTRT_CUST_ITEM CI, TL_WH_OB B
	   LEFT JOIN TL_WH_ALLC ALLC
	          ON B.WOB_BK_NO = ALLC.WOB_BK_NO
       LEFT JOIN TL_WH_ISSU ISSU
              ON ALLC.WALC_NO = ISSU.WALC_NO
       LEFT JOIN TL_WH_WAVE_OB  WV_OB
              ON B.WOB_BK_NO = WV_OB.WOB_BK_NO
		   WHERE B.WOB_BK_NO = I.WOB_BK_NO
		     AND B.CTRT_NO = CI.CTRT_NO
		     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
		     <isNotEmpty property="wob_bk_no">   
			   AND B.WOB_BK_NO = #wob_bk_no#
			</isNotEmpty>
			<isEmpty property="wob_bk_no">
			 	 <isNotEmpty property="cust_ord_no">   
				   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
				 </isNotEmpty>
			</isEmpty>
		     AND B.BK_STS_CD != 'C'
		ORDER BY I.RGST_TIMESTAMP, I.ITEM_CD, I.ITEM_SEQ, I.LOT_NO
	</select>
	<select id="searchWHOutItemListComplete" resultClass="grd02WHOutMgmtVO">
		/* WHOutMgmt.searchWHOutItemListComplete */	
		SELECT T.WH_CD, T.WH_NM,  T.CTRT_NO, T.CTRT_NM, T.WOB_BK_NO,  T.SAO_SYS_NO,
		     T.ITEM_SYS_NO,  T.ITEM_SEQ,  T.ITEM_CD,  T.ITEM_NM, T.LOT_NO,
		     T.ITEM_EA_QTY, T.ITEM_PKGUNIT,  T.ITEM_PKGQTY,  T.STOCK_QTY
		     , SUM(T.ITEM_CBM) AS ITEM_CBM
		     , SUM(T.ITEM_CBF) AS ITEM_CBF
		     , SUM(T.ITEM_GRS_KGS) AS ITEM_GRS_KGS
		     , SUM(T.ITEM_GRS_LBS) AS ITEM_GRS_LBS
		     , SUM(T.ITEM_NET_KGS) AS ITEM_NET_KGS
		     , SUM(T.ITEM_NET_LBS) AS ITEM_NET_LBS,   
		     T.INBOUND_DT,  T.EXP_DT, T.LOT_04, T.LOT_05, T.FIX_LOT_ID, T.LIC_PLAT_NO, T.SAO_NO,
		     T.CURR_CD, T.UNIT_PRICE, T.FIX_LOC_CD, T.FIX_LOC_NM, T.PKG_LV1_QTY, 	     
		     T.PKG_LV1_UNIT_CD,	 T.PKG_LV1_UNIT_NM, T.PKG_LV2_QTY, T.PKG_LV2_UNIT_CD,
		     T.PKG_LV2_UNIT_NM,  T.PKG_LV3_QTY, T.PKG_LV3_UNIT_CD, T.PKG_LV3_UNIT_NM,
		     T.PKG_LV4_QTY, T.PKG_LV4_UNIT_CD, T.LV1_CBM, T.LV1_CBF, T.LV1_GRS_KGS,
		     T.LV1_GRS_LBS, T.LV1_NET_KGS, T.LV1_NET_LBS, T.PKG_INFO, T.INVALID_YN,
		     T.ROW_ADD, T.ROW_DEL, T.ROW_ADD_QTY, T.BK_STS_CD, MAX(T.WAVE_NO) AS WAVE_NO, T.SMP_WAVE_FLG, T.ITEM_UNIT_PRICE      
		    , SUM(T.SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY       
			, SUM(T.INR_QTY) AS INR_QTY, T.PO_NO, T.ITEM_SER_NO
			, T.WH_LOC_CD, T.WH_LOC_CD_NM,
			T.EQ_TPSZ_CD,
	         T.EQ_NO,
	         T.SEAL_NO
		FROM (	
			SELECT B.WH_CD,
			             dbo.TL_GET_LOC_NM(B.WH_CD) AS WH_NM, 
			             B.CTRT_NO,
			             dbo.TL_GET_CTRT_NM(B.CTRT_NO) AS CTRT_NM,
			             B.WOB_BK_NO,
				         I.SAO_SYS_NO,
				         I.ITEM_SYS_NO,
				         I.ITEM_SEQ,
				         I.ITEM_CD,
				         I.ITEM_NM,
				         I.LOT_NO,
				         I.ITEM_EA_QTY,
				         I.ITEM_PKGUNIT,
				         I.ITEM_PKGQTY,
				         (SELECT ISNULL (SUM (ISNULL (V.IN_QTY, 0) - ISNULL (V.ALLC_QTY, 0) - ISNULL (V.HOLD_QTY, 0) - ISNULL (V.DMG_QTY, 0) ), 0) 
				            FROM TL_WH_INV_ITEM V
				           WHERE V.CTRT_NO = B.CTRT_NO
				             AND V.ITEM_SYS_NO = I.ITEM_SYS_NO
				             AND NOT EXISTS
				                    (SELECT 'X'
				                       FROM TL_WH_ALLC AL
				                      WHERE AL.WOB_BK_NO = B.WOB_BK_NO)) AS STOCK_QTY
				         , ISNULL(ALLC_ITM.PICK_ITEM_CBM, I.ITEM_CBM) AS ITEM_CBM
			             , ISNULL(ALLC_ITM.PICK_ITEM_CBF, I.ITEM_CBF) AS ITEM_CBF
			             , ISNULL(ALLC_ITM.PICK_ITEM_GRS_KGS, I.ITEM_GRS_KGS) AS ITEM_GRS_KGS
			             , ISNULL(ALLC_ITM.PICK_ITEM_GRS_LBS, I.ITEM_GRS_LBS) AS ITEM_GRS_LBS
			             , ISNULL(ALLC_ITM.PICK_ITEM_NET_KGS, I.ITEM_NET_KGS) AS ITEM_NET_KGS
			             , ISNULL(ALLC_ITM.PICK_ITEM_NET_LBS, I.ITEM_NET_LBS) AS ITEM_NET_LBS,   
				         CASE WHEN I.INBOUND_DT = '' THEN LOT.LOT_ATTRIB_01 ELSE I.INBOUND_DT END AS INBOUND_DT,
				         I.EXP_DT,
				         I.LOT_04,
				         I.LOT_05,
				         I.FIX_LOT_ID,
				         ALLC_ITM.LIC_PLAT_NO,
				         I.SAO_NO,
				         I.CURR_CD,
				         I.UNIT_PRICE,
				         I.FIX_LOC_CD,
				         I.EQ_TPSZ_CD,
				         I.EQ_NO,
				         I.SEAL_NO,
				         dbo.TL_GET_WH_LOC_NM(B.WH_CD,I.FIX_LOC_CD) AS FIX_LOC_NM,
			             ISNULL(CI.PKG_LV1_QTY, 0)     AS PKG_LV1_QTY, 	     
		                 CI.PKG_LV1_UNIT_CD AS PKG_LV1_UNIT_CD,	
		                 dbo.TL_GET_PKG_NM(CI.PKG_LV1_UNIT_CD)	AS PKG_LV1_UNIT_NM,
		                 ISNULL(CI.ITEM_PKGBASEQTY, 0) AS PKG_LV2_QTY,
		                 CI.ITEM_PKGUNIT    AS PKG_LV2_UNIT_CD,
		                 dbo.TL_GET_PKG_NM(CI.ITEM_PKGUNIT)	AS PKG_LV2_UNIT_NM, 
		                 ISNULL(CI.PKG_LV3_QTY, 0)     AS PKG_LV3_QTY,
		                 CI.PKG_LV3_UNIT_CD AS PKG_LV3_UNIT_CD,
		                 (SELECT	lic_plat_desc FROM	TL_WH_LIC_PLAT_UT_CD PKG WHERE	PKG.lic_plat_ut_cd = ISNULL(CI.PKG_LV3_UNIT_CD, '')) AS PKG_LV3_UNIT_NM,
		                 ISNULL(CI.PKG_LV4_QTY, 0)     AS PKG_LV4_QTY,
		                 CI.PKG_LV4_UNIT_CD AS PKG_LV4_UNIT_CD,		         
				         ISNULL (CI.LV1_CBM, 0) AS LV1_CBM,
				         ISNULL (CI.LV1_CBF, 0) AS LV1_CBF,
				         ISNULL (CI.LV1_GRS_KGS, 0) AS LV1_GRS_KGS,
				         ISNULL (CI.LV1_GRS_LBS, 0) AS LV1_GRS_LBS,
				         ISNULL (CI.LV1_NET_KGS, 0) AS LV1_NET_KGS,
				         ISNULL (CI.LV1_NET_LBS, 0) AS LV1_NET_LBS,
				         dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
		                                       , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD) AS PKG_INFO,
		                 I.INVALID_YN,
		                 '+' AS ROW_ADD,
		                 CASE WHEN  B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN '-' ELSE ''END AS ROW_DEL,
		                 1 AS ROW_ADD_QTY,
		                 CASE WHEN B.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'X'
		                      WHEN B.BK_STS_CD ='I' AND (SELECT COUNT (1)
		                      	                          FROM TL_WH_LOAD_PLAN LP
				                                             , TL_WH_LOAD_PLAN_ITEM LPI
				                                          WHERE LP.LP_NO = LPI.LP_NO		                                     
				                                            AND B.WOB_BK_NO = LPI.WOB_BK_NO) > 0 THEN 'X'
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') != 'Y' THEN 'A'            
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'
		                      ELSE B.BK_STS_CD END AS BK_STS_CD,
		                      WV_OB.WAVE_NO,
		                      (SELECT ISNULL(SMP_WAVE_FLG, 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG,
		                      CI.UNIT_PRICE AS ITEM_UNIT_PRICE      
		                , CASE WHEN ISSU_ITEM.ISSU_ITEM_EA_QTY > 0 THEN ISSU_ITEM.ISSU_ITEM_EA_QTY 
		                  WHEN LP.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
						  WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LOAD_ITEM_EA_QTY
						  ELSE 0 END AS SHIP_ITEM_EA_QTY       
						, CASE WHEN ISSU_ITEM.ISSU_ITEM_EA_QTY > 0 THEN ISSU_ITEM.ISSU_ITEM_EA_QTY
						  WHEN LP.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
						  WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LOAD_ITEM_EA_QTY
						  ELSE 0 END AS INR_QTY 
						, ALLC_ITM.PO_NO
						, ALLC_ITM.ITEM_SER_NO
						<!-- , (SELECT ITEM_SER_NO FROM TL_WH_RCV_ITEM RCV_ITEM 
								WHERE RCV_ITEM.WIB_BK_NO = ALLC_ITM.WIB_BK_NO 
									AND RCV_ITEM.PO_SYS_NO = ALLC_ITM.PO_SYS_NO
									AND RCV_ITEM.ITEM_SYS_NO = ALLC_ITM.ITEM_SYS_NO
									AND RCV_ITEM.ITEM_SEQ = ALLC_ITM.ITEM_SEQ
							) AS ITEM_SER_NO -->
						, ALLC_ITM.WH_LOC_CD
						, dbo.TL_GET_WH_LOC_NM(B.WH_CD, ALLC_ITM.WH_LOC_CD) AS  WH_LOC_CD_NM
						, ISSU_ITEM.ISSU_ITEM_EA_QTY
				    FROM TL_WH_OB B JOIN TL_WH_OB_ITEM I ON B.WOB_BK_NO = I.WOB_BK_NO
					   JOIN TL_CTRT_CUST_ITEM CI ON B.CTRT_NO = CI.CTRT_NO AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
					   LEFT JOIN TL_WH_ALLC ALLC
							  ON B.WOB_BK_NO = ALLC.WOB_BK_NO
					   LEFT JOIN TL_WH_ALLC_ITEM ALLC_ITM 
							ON ALLC.WALC_NO = ALLC_ITM.WALC_NO
							AND ALLC_ITM.SAO_SYS_NO = I.SAO_SYS_NO
							AND ALLC_ITM.ITEM_SYS_NO = I.ITEM_SYS_NO
							AND ALLC_ITM.ITEM_SEQ = I.ITEM_SEQ
					   LEFT JOIN TL_WH_PSUDO_LP_SHIP SHIP
							ON (ALLC_ITM.WOB_BK_NO   = SHIP.WOB_BK_NO
				           		AND ALLC_ITM.SAO_SYS_NO  = SHIP.SAO_SYS_NO
				           		AND ALLC_ITM.WIB_BK_NO   = SHIP.WIB_BK_NO
				           		AND ALLC_ITM.PO_SYS_NO   = SHIP.PO_SYS_NO
				           		AND ALLC_ITM.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
				           		AND ALLC_ITM.LOT_ID      = SHIP.LOT_ID
				           		AND ALLC_ITM.WH_LOC_CD   = SHIP.WH_LOC_CD
				           		AND ALLC_ITM.ITEM_SEQ    = SHIP.ITEM_SEQ
				           		AND 'G' 		  = SHIP.LP_STATUS 
				           		AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
					           	AND ISNULL(ALLC_ITM.PO_NO,'')		  = ISNULL(SHIP.PO_NO,'')
					           	AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,''))
				       LEFT JOIN TL_WH_LOAD_PLAN LP ON (SHIP.CONSOL_NO = LP.CONSOL_NO AND SHIP.LP_ID = LP.LP_ID AND SHIP.LP_SEQ = LP.LP_SEQ)
					   LEFT JOIN TL_WH_LOAD_PLAN_ITEM LP_I  
					        	ON (
					        	 	 	LP.LP_NO       = LP_I.LP_NO
							        AND B.WOB_BK_NO   = LP_I.WOB_BK_NO
								    AND I.SAO_SYS_NO  = LP_I.SAO_SYS_NO
								    AND ALLC_ITM.WIB_BK_NO   = LP_I.WIB_BK_NO
								    AND ALLC_ITM.PO_SYS_NO   = LP_I.PO_SYS_NO
								    AND I.ITEM_SYS_NO = LP_I.ITEM_SYS_NO
								    AND ALLC_ITM.LOT_ID      = LP_I.LOT_ID
								    AND ALLC_ITM.WH_LOC_CD   = LP_I.WH_LOC_CD
								    AND I.ITEM_SEQ    = LP_I.ITEM_SEQ
								    AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(LP_I.LIC_PLAT_NO,'')
									AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(LP_I.ITEM_SER_NO,'')
									AND ISNULL(ALLC_ITM.PO_NO,'')	  = ISNULL(LP_I.PO_NO,''))
					   LEFT JOIN TL_WH_ISSU ISSU ON ALLC.WALC_NO = ISSU.WALC_NO
					   LEFT JOIN TL_WH_WAVE_OB  WV_OB ON B.WOB_BK_NO = WV_OB.WOB_BK_NO
					   LEFT JOIN TL_CTRT_CUST_ITEM_LOT LOT ON B.CTRT_NO = LOT.CTRT_NO AND ALLC_ITM.ITEM_SYS_NO = LOT.ITEM_SYS_NO AND ALLC_ITM.LOT_ID = LOT.LOT_ID
					   LEFT JOIN TL_WH_ISSU_ITEM ISSU_ITEM ON ISSU_ITEM.WOB_BK_NO = B.WOB_BK_NO
							AND ISSU_ITEM.WALC_NO = ALLC_ITM.WALC_NO
						   AND ISSU_ITEM.WOB_BK_NO = ALLC_ITM.WOB_BK_NO
						   AND ISSU_ITEM.SAO_SYS_NO = ALLC_ITM.SAO_SYS_NO
						   AND ISSU_ITEM.WIB_BK_NO = ALLC_ITM.WIB_BK_NO
						   AND ISSU_ITEM.PO_SYS_NO = ALLC_ITM.PO_SYS_NO
						   AND ISSU_ITEM.ITEM_SYS_NO = ALLC_ITM.ITEM_SYS_NO
						   AND ISSU_ITEM.LOT_ID = ALLC_ITM.LOT_ID
						   AND ISSU_ITEM.WH_LOC_CD = ALLC_ITM.WH_LOC_CD
						   AND ISSU_ITEM.ITEM_SEQ = ALLC_ITM.ITEM_SEQ
						   
						   AND ISSU_ITEM.WOB_BK_NO = I.WOB_BK_NO
						   AND ISSU_ITEM.SAO_SYS_NO = I.SAO_SYS_NO
						   AND ISSU_ITEM.ITEM_SYS_NO = I.ITEM_SYS_NO
						   AND ISSU_ITEM.ITEM_SEQ = I.ITEM_SEQ
				   WHERE 1 = 1
		 
					   <isNotEmpty property="wob_bk_no">   
						   AND B.WOB_BK_NO = #wob_bk_no#
						</isNotEmpty>
						<isEmpty property="wob_bk_no">
					 		 <isNotEmpty property="cust_ord_no">   
							   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
							 </isNotEmpty>
						</isEmpty>
		
				       AND B.BK_STS_CD != 'C'
			) T
			GROUP BY T.WH_CD, T.WH_NM,  T.CTRT_NO, T.CTRT_NM, T.WOB_BK_NO, T.SAO_SYS_NO, T.ITEM_SYS_NO, T.ITEM_SEQ, T.ITEM_CD, T.ITEM_NM,
			     T.LOT_NO, T.ITEM_EA_QTY, T.ITEM_PKGUNIT, T.ITEM_PKGQTY, T.STOCK_QTY, T.INBOUND_DT, T.EXP_DT, T.LOT_04, T.LOT_05, T.FIX_LOT_ID, T.LIC_PLAT_NO,
			     T.SAO_NO,  T.CURR_CD, T.UNIT_PRICE, T.FIX_LOC_CD, T.FIX_LOC_NM, T.PKG_LV1_QTY,  T.PKG_LV1_UNIT_CD,	 T.PKG_LV1_UNIT_NM,
			     T.PKG_LV2_QTY,  T.PKG_LV2_UNIT_CD, T.PKG_LV2_UNIT_NM,  T.PKG_LV3_QTY, T.PKG_LV3_UNIT_CD, T.PKG_LV3_UNIT_NM, T.PKG_LV4_QTY,
			     T.PKG_LV4_UNIT_CD, T.LV1_CBM, T.LV1_CBF, T.LV1_GRS_KGS, T.LV1_GRS_LBS, T.LV1_NET_KGS, T.LV1_NET_LBS, T.PKG_INFO,
			     T.INVALID_YN, T.ROW_ADD, T.ROW_DEL, T.ROW_ADD_QTY,  T.BK_STS_CD, T.SMP_WAVE_FLG, T.ITEM_UNIT_PRICE, T.PO_NO
			     ,T.ITEM_SER_NO, T.WH_LOC_CD, T.WH_LOC_CD_NM, T.EQ_TPSZ_CD, T.EQ_NO, T.SEAL_NO
			ORDER BY T.ITEM_CD, T.ITEM_SEQ, T.LOT_NO
	</select>
	<select id="searchWHOutDocList" resultClass="WHOutbkDocVO">
		/* WHOutMgmt.searchWHOutDocList */
		SELECT 
		 FIELD_NAME, FIELD_VAL, DOC_TYPE
		,RGST_ID, RGST_LOC_DT, RGST_SYS_DT <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS --> 
          FROM (
          		 SELECT DISTINCT 'Outbound Booking' AS FIELD_NAME,
                               	 B.WOB_BK_NO AS FIELD_VAL,
                                'BK' AS DOC_TYPE,
                                '1' AS DISP
                                ,B.RGST_ID, B.RGST_LOC_DT, B.RGST_SYS_DT  <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
                  FROM TL_WH_OB B
                 <isNotEmpty property="wob_bk_no">   
				  WHERE  B.WOB_BK_NO = #wob_bk_no#
				</isNotEmpty>
				<isEmpty property="wob_bk_no">
				 	 <isNotEmpty property="cust_ord_no">   
					   WHERE B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
					 </isNotEmpty>
				</isEmpty>
                 AND B.BK_STS_CD != 'C'
                 
                 UNION
                 
                 SELECT DISTINCT 'Allocation' AS FIELD_NAME,
                                A.WALC_NO AS FIELD_VAL,
                                'AL' AS DOC_TYPE,
                                '2' AS DISP
                                ,A.RGST_ID, A.RGST_LOC_DT, A.RGST_SYS_DT <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
                 FROM TL_WH_OB B, TL_WH_ALLC A
                 WHERE 
                 	B.WOB_BK_NO = A.WOB_BK_NO
                    <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C'
                                  
                 UNION
                 
				 SELECT
		            DISTINCT 'Picking' AS FIELD_NAME,
		            A.WALC_NO AS FIELD_VAL,
		            'PC' AS DOC_TYPE,
		            '3' AS DISP
				 	,A.MODI_ID AS RGST_ID, A.MODI_LOC_DT AS RGST_LOC_DT, A.MODI_SYS_DT AS RGST_SYS_DT <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->
		         FROM
		            TL_WH_OB B,
		            TL_WH_ALLC A                  
		         WHERE
		            B.WOB_BK_NO = A.WOB_BK_NO                                 
					<isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>                             
		            AND B.BK_STS_CD != 'C' 
				 	AND A.PICKD_FLG = 'Y'                              
		         
		         UNION
		        
		         SELECT
		            DISTINCT 'Shipped' AS FIELD_NAME,
		            LP.LP_NO AS FIELD_VAL,
		            'SH' AS DOC_TYPE,
		            '4' AS DISP   
					,LP.MODI_ID AS RGST_ID, LP.MODI_LOC_DT AS RGST_LOC_DT, LP.MODI_SYS_DT AS RGST_SYS_DT       <!-- #3890 [BNX WMS] MOBILE REQUIREMENTS -->               
                 
                 <!-- Wave 관련 조건 주석처리 -->
                 <!-- AND NOT EXISTS /* 기존 WAVE에 속한건 제외*/
	                 ( SELECT 'X'
	                     FROM TL_WH_WAVE_OB WV
	                    WHERE WV.WOB_BK_NO = A.WOB_BK_NO
	                  ) 
                 UNION -->
                 
                <!-- Wave/Outbound Complete by Booking/Load Plan 관련 로직 주석 처리 -->
                <!-- SELECT DISTINCT 'Wave' AS FIELD_NAME,
                                A.WAVE_NO AS FIELD_VAL,
                                'WV' AS DOC_TYPE,
                                '2' AS DISP
                  FROM TL_WH_OB B, TL_WH_WAVE_OB A, TL_WH_WAVE C
                 WHERE B.WOB_BK_NO = A.WOB_BK_NO
                   AND A.WAVE_NO = C.WAVE_NO
                   AND A.WOB_BK_NO = #wob_bk_no#
                    <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C'
                   AND ISNULL( C.SMP_WAVE_FLG, 'N') = 'N'
                 UNION 
                SELECT DISTINCT 'Wave' AS FIELD_NAME,
                                A.WAVE_NO AS FIELD_VAL,
                                'WV_SMP' AS DOC_TYPE,
                                '2' AS DISP
                  FROM TL_WH_OB B, TL_WH_WAVE_OB A, TL_WH_WAVE C
                 WHERE B.WOB_BK_NO = A.WOB_BK_NO
                   AND A.WAVE_NO = C.WAVE_NO
                   AND A.WOB_BK_NO = #wob_bk_no#
                    <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C'
                   AND ISNULL(C.SMP_WAVE_FLG, 'N') = 'Y'
                 UNION  
                SELECT DISTINCT 'Outbound Complete by Booking' AS FIELD_NAME,
                                S.WOB_OUT_NO AS FIELD_VAL,
                                'OCBK' AS DOC_TYPE,
                                '3' AS DISP
                  FROM TL_WH_OB B, TL_WH_ALLC A, TL_WH_ISSU S
                 WHERE B.WOB_BK_NO = A.WOB_BK_NO
                   AND A.WALC_NO = S.WALC_NO
                    <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C'
                   AND NOT EXISTS (SELECT 'X' 
                                     FROM TL_WH_WAVE_OB WV_OB, TL_WH_WAVE WV
                                    WHERE WV_OB.WAVE_NO = WV.WAVE_NO
                                      AND B.WOB_BK_NO = WV_OB.WOB_BK_NO
                                      AND ISNULL(WV.SMP_WAVE_FLG, 'N') = 'Y'
                                  )
                UNION
                SELECT DISTINCT 'Load Plan' AS FIELD_NAME,
                                LPS.CONSOL_NO AS FIELD_VAL,
                                'LP' AS DOC_TYPE,
                                '4' AS DISP
                  FROM TL_WH_OB B, TL_WH_ALLC A, TL_WH_ALLC_ITEM AI, TL_WH_PSUDO_LP_SHIP LPS
                 WHERE B.WOB_BK_NO = A.WOB_BK_NO
                   AND A.WALC_NO = AI.WALC_NO
                   AND AI.WOB_BK_NO = LPS.WOB_BK_NO
                   AND AI.SAO_SYS_NO = LPS.SAO_SYS_NO
                   AND AI.PO_SYS_NO = LPS.PO_SYS_NO
                   AND AI.ITEM_SYS_NO = LPS.ITEM_SYS_NO
                   AND AI.LOT_ID = LPS.LOT_ID
                   AND AI.WH_LOC_CD = LPS.WH_LOC_CD
                   AND AI.ITEM_SEQ = LPS.ITEM_SEQ
                    <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C' -->
                   
                   <!-- Wave 관련 조건 주석처리 -->
                   <!-- AND NOT EXISTS (SELECT 'X' 
                                     FROM TL_WH_WAVE_OB WV_OB, TL_WH_WAVE WV
                                    WHERE WV_OB.WAVE_NO = WV.WAVE_NO
                                      AND B.WOB_BK_NO = WV_OB.WOB_BK_NO
                                      AND ISNULL(WV.SMP_WAVE_FLG, 'N') = 'Y'
                                  ) -->
                                  
                <!-- Wave/Outbound Complete by Booking/Load Plan 관련 로직 주석 처리 -->                                  
                <!-- UNION
                SELECT DISTINCT 'Outbound Complete by Load Plan' AS FIELD_NAME,
                                LP.LP_NO AS FIELD_VAL,
                                'OCLP' AS DOC_TYPE,
                                '5' AS DISP-->
                  FROM TL_WH_OB B, TL_WH_ALLC A, TL_WH_ALLC_ITEM AI, TL_WH_LOAD_PLAN LP, TL_WH_LOAD_PLAN_ITEM LPI
                 WHERE B.WOB_BK_NO = A.WOB_BK_NO
                   AND A.WALC_NO = AI.WALC_NO
                   AND LP.LP_NO = LPI.LP_NO
                   <!-- AND LP.LP_STS_CD IN ('P','L') --> <!-- P(Load Plan), L(Completed) -->
                   AND LP.LP_STS_CD = 'L'
                   AND AI.WOB_BK_NO = LPI.WOB_BK_NO
                   AND AI.SAO_SYS_NO = LPI.SAO_SYS_NO
                   AND AI.PO_SYS_NO = LPI.PO_SYS_NO
                   AND AI.ITEM_SYS_NO = LPI.ITEM_SYS_NO
                   AND AI.LOT_ID = LPI.LOT_ID
                   AND AI.WH_LOC_CD = LPI.WH_LOC_CD
                   AND AI.ITEM_SEQ = LPI.ITEM_SEQ
	                  <isNotEmpty property="wob_bk_no">   
					   AND B.WOB_BK_NO = #wob_bk_no#
					</isNotEmpty>
					<isEmpty property="wob_bk_no">
					 	 <isNotEmpty property="cust_ord_no">   
						   AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
						 </isNotEmpty>
					</isEmpty>
                   AND B.BK_STS_CD != 'C'
                   
                   <!-- Wave 관련 조건 주석처리 -->
                   <!-- AND NOT EXISTS (SELECT 'X' 
                                     FROM TL_WH_WAVE_OB WV_OB, TL_WH_WAVE WV
                                    WHERE WV_OB.WAVE_NO = WV.WAVE_NO
                                      AND B.WOB_BK_NO = WV_OB.WOB_BK_NO
                                      AND ISNULL( WV.SMP_WAVE_FLG, 'N') = 'Y'
                                  ) --> 
                                  
                   <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) - Delivered Status 추가 -->
                   UNION
                   
				   SELECT
			            DISTINCT 'Delivered' AS FIELD_NAME,
			            B.WOB_BK_NO AS FIELD_VAL,
			            'DV' AS DOC_TYPE,
			            '5' AS DISP,
			            B.MODI_ID AS RGST_ID,
						CONVERT(DATETIME, STUFF(STUFF( B.DLVR_DT, 9, 0, ' '), 12, 0, ':') ) AS RGST_LOC_DT,
			            B.RGST_SYS_DT AS RGST_SYS_DT                     
			       FROM
			       		TL_WH_OB B                            
			       WHERE 1=1
				   <isNotEmpty property="wob_bk_no">   
				     	AND B.WOB_BK_NO = #wob_bk_no#
				   </isNotEmpty>
				   
				   <isEmpty property="wob_bk_no">
					   <isNotEmpty property="cust_ord_no">   
					        AND B.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
					   </isNotEmpty>
				   </isEmpty>
                   AND B.BK_STS_CD != 'C'
                   AND B.DLVR_FLG   = 'Y'                         
               ) T
         ORDER BY DISP, FIELD_VAL		
	</select>
	
	<select id="searchWHOutFileList" resultClass="grd04WHOutMgmtVO">
		/* WHOutMgmt.searchWHOutFileList */
		SELECT R.DOC_NO
		      ,R.FILE_ORG_NM
		      ,R.FILE_PATH
		      ,R.FILE_SYS_NM
		      ,R.FILE_SIZE
		      ,CONVERT (VARCHAR(8),R.RGST_SYS_DT, 112) AS UPLOAD_DATE
		  FROM TL_FILE_REP R
		 WHERE 1 = 1
		   AND R.DOC_REF_NO = (SELECT T.WOB_BK_NO
		                         FROM TL_WH_OB T
		                        <isNotEmpty property="wob_bk_no">   
								 WHERE  T.WOB_BK_NO = #wob_bk_no#
								</isNotEmpty>
								<isEmpty property="wob_bk_no">
								 	 <isNotEmpty property="cust_ord_no">   
									WHERE   T.WOB_BK_NO = (select Max(WOB_BK_NO) from TL_WH_OB where CUST_ORD_NO = #cust_ord_no#)
									 </isNotEmpty>
								</isEmpty>
		                        AND T.BK_STS_CD != 'C')
		   AND R.DOC_REF_TP_CD = 'WOB'
		   AND R.SVC_TP_CD = 'WB'
		   AND R.DOC_TP_CD = 'WOB'
	</select>
	
	<insert id="addWHOutMgmtInfo">
	/* WHOutMgmt.addWHOutMgmtInfo */
		INSERT INTO TL_WH_OB
		(
		    WOB_BK_NO
		   ,SO_NO
		   ,CTRT_NO
		   ,RTP_NO
		   ,WH_CD
		   ,BK_DATE
		   ,BK_STS_CD
		   ,EST_OUT_DT
		   ,EST_OUT_HM
		   ,ORD_TP_CD
		   ,LOAD_TP_CD
		   ,FWD_DIR 
		   ,ORDER_REL
		   ,OWNER_CD
		  
		   ,OWNER_ADDR1
		   ,OWNER_ADDR2
		   ,OWNER_ADDR3
		   ,OWNER_ADDR4
		   ,OWNER_ADDR5
		   ,BUYER_CD
		   <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
		   ,BUYER_NM
		   ,BUYER_ADDR1
		   ,BUYER_ADDR2
		   ,BUYER_ADDR3
		   ,BUYER_ADDR4
		   ,BUYER_ADDR5
		   ,CUST_ORD_NO
		   ,COMMC_INV_NO
		   ,DLV_ORD_NO
		   ,RMK
		   ,VSL_CD
		   ,VSL_NM
		   ,VOY
		   ,CARRIER_CD
		   ,HBL_NO
		   ,MBL_NO
		   ,POL
		   ,POD
		   ,DEL
		   ,ETD
		   ,ETA
		   ,SRC_CD/*NULL DEFAULT-N*/
		   ,REF_NO
		   ,TRUCKER_CD
		   ,TRUCKER_NM
		   ,EQ_TP_CD
		   ,EQ_TPSZ_CD
		   ,EQ_NO
		   ,SEAL_NO
		   ,TRADE_TP_CD
		   ,FWD_TP_CD
		   ,RGST_ID
		   ,RGST_OFC_CD
		   ,RGST_SYS_DT
		   ,RGST_LOC_DT
		   ,MODI_ID
		   ,MODI_OFC_CD
		   ,MODI_SYS_DT
		   ,MODI_LOC_DT
		   
		   <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
		   ,DLVR_FLG
		   ,DLVR_DT
		)
		VALUES
		(
		    #wob_bk_no#
		   ,#so_no#
		   ,#ctrt_no#
		   ,#rtp_no#
		   ,#wh_cd#
		   ,REPLACE (#bk_date#, '-', '')
		   ,'I'
		   ,REPLACE (#est_out_dt#, '-', '')
		   ,REPLACE (#est_out_hm#, ':', '')
		   ,#ord_tp_cd#
		   ,#load_tp_cd#
		   ,CASE WHEN #trade_tp_cd# = 'IMP' AND #fwd_tp_cd# = 'OWN' THEN 'I'
                        WHEN #trade_tp_cd# = 'EXP' AND #fwd_tp_cd# = 'OWN' THEN 'E'
                        ELSE 'G'
                   END
		   ,'P' /* Domestic Only */
		   ,#owner_cd#
		   ,#owner_addr1#
		   ,#owner_addr2#
		   ,#owner_addr3#
		   ,#owner_addr4#
		   ,#owner_addr5# 
		   ,#buyer_cd#
		   ,#buyer_nm#
		   ,#buyer_addr1#
		   ,#buyer_addr2#
		   ,#buyer_addr3#
		   ,#buyer_addr4#
		   ,#buyer_addr5#		   
		   ,#cust_ord_no#
		   ,#commc_inv_no#
		   ,#dlv_ord_no#
		   ,#rmk#
		   ,#vsl_cd#
		   ,#vsl_nm#
		   ,#voy#
		   ,#carrier_cd#
		   ,#hbl_no#
		   ,#mbl_no#
		   ,#pol#
		   ,#pod#
		   ,#del#
		   ,REPLACE (#etd#, '-', '')
		   ,REPLACE (#eta#, '-', '')
		   ,'M'
		   ,#ref_no#
		   ,#trucker_cd#
		   ,#trucker_nm#
		   ,#eq_tp_cd#
		   ,#eq_tpsz_cd#
		   ,#eq_no#
		   ,#seal_no#
		   ,#trade_tp_cd#
		   ,#fwd_tp_cd#
		   ,#rgst_id#
	       ,#rgst_ofc_cd#
	       ,GETDATE()
	       ,CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
	       ,#rgst_id#
	       ,#rgst_ofc_cd#
	       ,GETDATE()
	       ,CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
	       
	       <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
		   ,CASE WHEN #dlvr_flg# = '' THEN 'N' ELSE #dlvr_flg# END	       
	       ,#full_dlvr_dttm#
		)	
	</insert>
	
	<select id="selectSaoSysNoCnt" resultClass="saoSysNoDto">
	/* WHOutMgmt.selectSaoSysNoCnt */
	SELECT MAX(SAO_SYS_NO) SAO_SYS_NO
	     , COUNT(*) AS SAO_SYS_CNT
	  FROM TL_WH_OB_ITEM
	 WHERE WOB_BK_NO =  #wob_bk_no#	
	   AND SAO_NO = #sao_no#
	</select>
	
	<select id="searhSaoSysNo" resultClass="String">
	/* WHOutMgmt.searhSaoSysNo */
		 SELECT 'SAO' + CONVERT(VARCHAR(6),GETDATE(), 12) + dbo.LPAD ((SELECT SEQ + 1 FROM TB_MJR_NO_SEQ WHERE NO_TP_CD = 'SAO' ), 6, '0')  AS SAO_SYS_NO
	</select>
	
	<select id="searhItemSeq" resultClass="String">
	/* WHOutMgmt.searhItemSeq */
	 SELECT ISNULL(MAX(ITEM_SEQ),0)+1
	      FROM TL_WH_OB_ITEM
	     WHERE WOB_BK_NO = #wob_bk_no#
	       AND SAO_SYS_NO = #sao_sys_no#
	       AND ITEM_SYS_NO = #item_sys_no#
	</select>
	
	<insert id="saveWHOutMgmForObItem">
	/* WHOutMgmt.saveWHOutMgmForObItem */
	INSERT INTO TL_WH_OB_ITEM
                  (WOB_BK_NO
                  ,SAO_SYS_NO
                  ,ITEM_SYS_NO
                  ,ITEM_SEQ
                  ,SAO_NO
                  ,ITEM_CD
                  ,ITEM_NM
                  ,ITEM_EA_QTY
                  ,ITEM_PKGQTY
                  ,ITEM_PKGUNIT
                  ,ITEM_CBM
                  ,ITEM_CBF
                  ,ITEM_GRS_KGS
                  ,ITEM_GRS_LBS
                  ,ITEM_NET_KGS
                  ,ITEM_NET_LBS
                  ,INBOUND_DT
                  ,LOT_NO
                  ,EXP_DT
                  ,LOT_04
                  ,LOT_05
                  ,FIX_LOT_ID
                  ,CURR_CD
                  ,UNIT_PRICE
                  ,FIX_LOC_CD
                  ,RGST_ID
                  ,RGST_OFC_CD
                  ,RGST_SYS_DT
                  ,RGST_LOC_DT
                  ,MODI_ID
                  ,MODI_OFC_CD
                  ,MODI_SYS_DT
                  ,MODI_LOC_DT
                  ,RGST_TIMESTAMP
                  ,LIC_PLAT_NO
                  ,ITEM_SER_NO
                  ,EQ_TPSZ_CD
                  ,EQ_NO
                  ,SEAL_NO
                  ,PO_NO)
                VALUES
                  ( #wob_bk_no#
                  , #sao_sys_no#
                  , #item_sys_no#
	              , #item_seq#
	              , #sao_no#
                  , #item_cd#
                  , #item_nm#
                  , #item_ea_qty#
			      , #item_pkgqty#
			      , #item_pkgunit#
                  , #item_cbm#
			      , #item_cbf#
			      , #item_grs_kgs#
			      , #item_grs_lbs#
			      , #item_net_kgs#
			      , #item_net_lbs#
                  , REPLACE (#inbound_dt#, '-', '')
                  , #lot_no#
                  , REPLACE (#exp_dt#, '-', '')
			      , #lot_04#
			      , #lot_05#
			      , #fix_lot_id#
                  , #curr_cd#
                  , #unit_price#
                  , #fix_loc_cd#
                  , #rgst_id#
                  , #rgst_ofc_cd#
                  , GETDATE()
                  , CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
                  , #rgst_id#
	     		  , #rgst_ofc_cd#
                  , GETDATE()
                  , CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
                  , CONVERT(VARCHAR, GETDATE(), 110)
                  , #lic_plat_no#,#item_ser_no#, #eq_tpsz_cd#, #eq_no#, #seal_no#, #po_no#)
	</insert>
	
	<update id="modifyWHOutMgmtInfo">
	/* WHOutMgmt.modifyWHOutMgmtInfo */	
		UPDATE TL_WH_OB
		   SET CUST_ORD_NO  = #cust_ord_no#
		     , BK_DATE      = REPLACE (#bk_date#, '-', '')
		     , EST_OUT_HM    = REPLACE (#est_out_hm#, ':', '')
		     , BK_STS_CD    = (CASE WHEN BK_STS_CD = 'N' THEN 'I' ELSE BK_STS_CD END)
		<isEqual property="bk_sts_cd" compareValue="N">				     	      
		     , EST_OUT_DT   = REPLACE (#est_out_dt#, '-', '')
		     , ORD_TP_CD   = #ord_tp_cd#
		     , LOAD_TP_CD  = #load_tp_cd#
		     , TRADE_TP_CD = #trade_tp_cd#
		     , FWD_TP_CD   = #fwd_tp_cd#
		     , FWD_DIR = (CASE WHEN #trade_tp_cd# = 'IMP' AND #fwd_tp_cd# = 'OWN' THEN 'I'
                               WHEN #trade_tp_cd# = 'EXP' AND #fwd_tp_cd# = 'OWN' THEN 'E'
                               ELSE 'G'
                          END)
		</isEqual>
		<isEqual property="bk_sts_cd" compareValue="I">
             , EST_OUT_DT   = REPLACE (#est_out_dt#, '-', '')	     		     	      
		     , ORD_TP_CD   = #ord_tp_cd#
		     , LOAD_TP_CD  = #load_tp_cd#
		</isEqual>	     
		     , OWNER_ADDR1   = #owner_addr1#
		     , OWNER_ADDR2   = #owner_addr2#
		     , OWNER_ADDR3   = #owner_addr3#
		     , OWNER_ADDR4   = #owner_addr4#
		     , OWNER_ADDR5   = #owner_addr5#
		     , BUYER_CD      = #buyer_cd#
		     <!-- #4209 [BNX WMS4.0] Outbound Management Ship To BUYER_NM column add -->
		     , BUYER_NM      = #buyer_nm#
		     , BUYER_ADDR1   = #buyer_addr1#
		     , BUYER_ADDR2   = #buyer_addr2#
		     , BUYER_ADDR3   = #buyer_addr3#
		     , BUYER_ADDR4   = #buyer_addr4#
		     , BUYER_ADDR5   = #buyer_addr5# 
		     , COMMC_INV_NO  = #commc_inv_no#
		     , DLV_ORD_NO    = #dlv_ord_no#	
		     , RMK           = #rmk#
		<isEqual property="sel_tab" compareValue="02">	     		     	      
		     , TRUCKER_CD = #trucker_cd#
		     , TRUCKER_NM = #trucker_nm#
		</isEqual>

		     , EQ_TP_CD        = #eq_tp_cd#
		     , EQ_TPSZ_CD      = #eq_tpsz_cd#
		     , EQ_NO           = #eq_no#
		     , SEAL_NO         = #seal_no#
		     , VSL_CD          = #vsl_cd#
		     <!-- , VSL_NM          = #vsl_nm# -->
		     , VOY             = #voy#
		     , CARRIER_CD      = #carrier_cd#
		     , HBL_NO          = #hbl_no#
		     , MBL_NO          = #mbl_no#
		     , POL             = #pol#
		     , POD             = #pod#
		     , DEL             = #del#
		     , ETD             = REPLACE (#etd#, '-', '')
		     , ETA             = REPLACE (#eta#, '-', '')     
		     , MODI_ID         = #modi_id#
		     , MODI_OFC_CD     = #modi_ofc_cd#
		     , MODI_SYS_DT     = GETDATE()
		     , MODI_LOC_DT     = CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
		     , REF_NO          = #ref_no#
		
			 <!-- #4562 [Korex] WMS Outbound Delivery Status (v461.14) -->
		   	 , DLVR_FLG 	   = CASE WHEN #dlvr_flg# = '' THEN 'N' ELSE #dlvr_flg# END
			 , DLVR_DT         = #full_dlvr_dttm#
		
		 WHERE WOB_BK_NO       = #wob_bk_no#	
	</update>
	
	<update id="modifyWhObItemFixLocCd">
	/*WHOutMgmt.modifyWhObItemFixLocCd */
	UPDATE TL_WH_OB_ITEM
	   SET FIX_LOC_CD = #fix_loc_cd#
	     , MODI_ID        = #modi_id#
	     , MODI_OFC_CD    = #modi_ofc_cd#
	     , MODI_SYS_DT    = GETDATE()
	     , MODI_LOC_DT    = CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
	 WHERE WOB_BK_NO = #wob_bk_no#
	   AND SAO_SYS_NO = #sao_sys_no#
	   AND ITEM_SYS_NO = #item_sys_no#
	   AND ITEM_SEQ = #item_seq#
	</update>
	<update id="modifyWHObBkStsCd" >
	/*WHOutMgmt.modifyWHObBkStsCd*/
	UPDATE TL_WH_OB
	   SET BK_STS_CD = #bk_sts_cd#
	     , MODI_ID = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = CONVERT(VARCHAR(20),dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD),120)
	 WHERE WOB_BK_NO =  #wob_bk_no#
	</update>
	
	<select id="searchWHOutMgmtExcelList" resultClass="grd05WHOutMgmtVO">
	/*WHOutMgmt.searchWHOutMgmtExcelList*/
		SELECT B.WOB_BK_NO
		     , B.WH_CD
		     , dbo.TL_GET_LOC_NM(B.WH_CD) AS WH_NM     
		     , CONVERT(VARCHAR(10),CAST(B.BK_DATE AS DATE), 110) AS BK_DATE
		     , ISNULL(LTRIM(RTRIM(B.CUST_ORD_NO)), ' ') AS CUST_ORD_NO
		     , ISNULL(dbo.TL_GET_COMM_NM('WB3',B.ORD_TP_CD), ' ') AS ORD_TP_CD
		     , CONVERT(VARCHAR(10),CAST(B.EST_OUT_DT AS  DATE),110 ) AS EST_OUT_DT
		     , (CASE B.EST_OUT_HM WHEN '' THEN  '' ELSE  (SUBSTRING(B.EST_OUT_HM, 1, 2) + ':' + SUBSTRING(B.EST_OUT_HM, 3, 2)) END) AS EST_OUT_HM 
		     , B.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(B.CTRT_NO) AS CTRT_NM
		     , B.RTP_NO
		     , ISNULL(B.EQ_TP_CD, ' ') AS EQ_TP_CD
		     , ISNULL(B.EQ_TPSZ_CD, ' ') AS EQ_TPSZ_CD
		     , ISNULL(B.EQ_NO, ' ') AS EQ_NO
		     , ISNULL(B.SEAL_NO, ' ') AS SEAL_NO
		     , ISNULL(B.DLV_ORD_NO, ' ') AS DLV_ORD_NO
		     , ISNULL(dbo.TL_GET_COMM_NM('WB4',B.LOAD_TP_CD), ' ') AS  LOAD_TP_CD
             , ISNULL(dbo.TL_GET_COMM_NM('TL3',B.TRADE_TP_CD), ' ') AS TRADE_TP_CD
             , ISNULL(dbo.TL_GET_COMM_NM('TL4',B.FWD_TP_CD), ' ') AS FWD_TP_CD
		     , ISNULL(B.MBL_NO, ' ') AS MBL_NO
		     , ISNULL(B.HBL_NO, ' ') AS HBL_NO
		     , ISNULL(B.REF_NO, ' ') AS REF_NO
		     , ISNULL(B.COMMC_INV_NO, ' ') AS COMMC_INV_NO
		     , ISNULL(B.RMK, ' ') AS RMK
		     , ISNULL(B.OWNER_CD, ' ') AS OWNER_CD
		     , ISNULL(B.OWNER_ADDR1, ' ') AS OWNER_ADDR1
		     , ISNULL(B.OWNER_ADDR2, ' ') AS OWNER_ADDR2
		     , ISNULL(B.OWNER_ADDR3, ' ') AS OWNER_ADDR3
		     , ISNULL(B.OWNER_ADDR4, ' ') AS OWNER_ADDR4
		     , ISNULL(B.OWNER_ADDR5, ' ') AS OWNER_ADDR5
		     , ISNULL(B.BUYER_ADDR1, ' ') AS BUYER_ADDR1
		     , ISNULL(B.BUYER_ADDR2, ' ') AS BUYER_ADDR2
		     , ISNULL(B.BUYER_ADDR3, ' ') AS BUYER_ADDR3
		     , ISNULL(B.BUYER_ADDR4, ' ') AS BUYER_ADDR4
		     , ISNULL(B.BUYER_ADDR5, ' ') AS BUYER_ADDR5
		     , ISNULL(B.VSL_CD, ' ') AS VSL_CD
             , ISNULL(B.VSL_NM, ' ') AS VSL_NM
             , ISNULL(B.VOY, ' ') AS VOY
             , ISNULL(B.CARRIER_CD, ' ') AS CARRIER_CD
             , ISNULL(dbo.TL_GET_CUST_NM (B.CARRIER_CD), ' ') AS CARRIER_NM
             , ISNULL(B.POL, ' ') AS POL
             , ISNULL(B.POD, ' ') AS POD
             , ISNULL(B.DEL, ' ') AS DEL
             , ISNULL(CONVERT(VARCHAR(10), CAST(B.ETD AS DATE),110), ' ') AS ETD
             , ISNULL(CONVERT(VARCHAR(10), CAST(B.ETA AS DATE),110), ' ') AS ETA
		     , CASE WHEN B.BK_STS_CD = 'N' OR B.BK_STS_CD = 'C' THEN B.BK_STS_CD 
		            WHEN B.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'X'
                    WHEN B.BK_STS_CD ='I' AND (SELECT COUNT (1)
                    	                         FROM TL_WH_LOAD_PLAN LP
		                                            , TL_WH_LOAD_PLAN_ITEM LPI
		                                         WHERE LP.LP_NO = LPI.LP_NO		                                     
		                                           AND B.WOB_BK_NO = LPI.WOB_BK_NO) > 0 THEN 'X'
                    
                    WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL( ALLC.PICKD_FLG,'N') != 'Y' THEN 'A'   
					WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'
					WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'        
                    ELSE ' ' END AS BK_STS_CD,
		         I.ITEM_CD,
		         I.ITEM_NM,
		         I.LOT_NO,
		         I.ITEM_EA_QTY,
		         I.ITEM_PKGUNIT,
		         I.ITEM_PKGQTY,
		         (SELECT ISNULL (SUM (ISNULL (V.IN_QTY, 0) - ISNULL (V.ALLC_QTY, 0) - ISNULL (V.HOLD_QTY, 0) - ISNULL (V.DMG_QTY, 0) ), 0) 
		            FROM TL_WH_INV_ITEM V
		           WHERE V.CTRT_NO = B.CTRT_NO
		             AND V.ITEM_SYS_NO = I.ITEM_SYS_NO
		             AND NOT EXISTS
		                    (SELECT 'X'
		                       FROM TL_WH_ALLC AL
		                      WHERE AL.WOB_BK_NO = B.WOB_BK_NO)) AS STOCK_QTY,
		         I.ITEM_CBM,
		         I.ITEM_CBF,
		         I.ITEM_GRS_KGS,
		         I.ITEM_GRS_LBS,
		         I.ITEM_NET_KGS,
		         I.ITEM_NET_LBS,
		         I.INBOUND_DT ,
		         I.EXP_DT,
		         I.LOT_04,
		         I.LOT_05,
		         I.FIX_LOT_ID,
		         I.SAO_NO,
		         I.CURR_CD,
		         I.UNIT_PRICE,
		         I.FIX_LOC_CD,
		         dbo.TL_GET_WH_LOC_NM(B.WH_CD, I.FIX_LOC_CD) AS FIX_LOC_NM,	             
		         dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
                                       , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD) AS PKG_INFO      
               , ROW_NUMBER() OVER (ORDER BY  B.WOB_BK_NO) AS SEQ
               , B.WOB_BK_NO AS MERGE_KEY       
               , WV_OB.WAVE_NO
               , (SELECT ISNULL(SMP_WAVE_FLG , 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG  
		    FROM TL_WH_OB B
	   LEFT JOIN TL_WH_ALLC ALLC
	   		  ON B.WOB_BK_NO = ALLC.WOB_BK_NO
	   LEFT JOIN TL_WH_ISSU ISSU
	   		  ON ALLC.WALC_NO = ISSU.WALC_NO
  	   LEFT JOIN TL_WH_WAVE_OB WV_OB
  	   		  ON B.WOB_BK_NO = WV_OB.WOB_BK_NO
		    	 ,TL_WH_OB_ITEM I, TL_CTRT_CUST_ITEM CI 
		   WHERE B.WOB_BK_NO = I.WOB_BK_NO
		     AND B.CTRT_NO = CI.CTRT_NO
		     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
		      <isNotEmpty property="sel_wob_bk_no_in">
		    	AND B.WOB_BK_NO IN (
		     					<iterate property="sel_wob_bk_no_in" conjunction=",">  #sel_wob_bk_no_in[]#  </iterate>	
		                        )
		     </isNotEmpty>
		     <isEmpty property="sel_wob_bk_no_in">
			            	<isNotEmpty property="list_wh_cd">
							   AND B.WH_CD = #list_wh_cd#
							</isNotEmpty>
							<isNotEmpty property="list_ctrt_no">
							   AND B.CTRT_NO = #list_ctrt_no#
							</isNotEmpty>
							
							<isEqual property="list_bk_sts_cd" compareValue="ALL">
							   
							</isEqual>
							<isNotEqual property="list_bk_sts_cd" compareValue="ALL">
								<isNotEqual property="list_bk_sts_cd" compareValue="C">
				           			B.BK_STS_CD = #list_bk_sts_cd#
								</isNotEqual>
							</isNotEqual>
							
							<isNotEmpty property="list_in_no">
								<isEqual property="list_in_search_tp" compareValue="WOB_BK_NO">
							   		AND B.WOB_BK_NO = #list_in_no#
								</isEqual>
								<isEqual property="list_in_search_tp" compareValue="CUST_ORD_NO">
							   		AND B.CUST_ORD_NO = #list_in_no#
								</isEqual>
							</isNotEmpty>
							
							<isNotEmpty property="list_fm_date">
								<isEqual property="list_in_date_tp" compareValue="BK_DATE">
							   		AND B.BK_DATE BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
								</isEqual>
								<isEqual property="list_in_date_tp" compareValue="EST_OUT_DT">
							   		AND B.EST_OUT_DT BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
								</isEqual>
								<isEqual property="list_in_date_tp" compareValue="RGST_LOC_DT">
							   		AND TO_CHAR(B.RGST_LOC_DT, 'YYYYMMDD') BETWEEN REPLACE(#list_fm_date#, '-', '')  AND REPLACE(#list_to_date#, '-','')
								</isEqual>
							</isNotEmpty>
							<isNotEqual property="list_ord_tp_cd" compareValue="ALL">
							   AND B.ORD_TP_CD = #list_ord_tp_cd#
							</isNotEqual>
			            </isEmpty>
		ORDER BY B.RGST_SYS_DT ASC, B.WH_CD ASC, B.CUST_ORD_NO ASC, B.EST_OUT_DT ASC, I.RGST_TIMESTAMP, I.ITEM_CD, I.ITEM_SEQ, I.LOT_NO
	</select>
	
	<typeAlias type="java.lang.String" alias="String"/>
	<typeAlias type="java.util.HashMap" alias="HashMap"/>
	<!-- WaveSmpMgmt (S) -->
	<select id="searchWaveSimpleMgmtList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd01WaveSmpMgmtVO">
	SELECT T.*
     , ROW_NUMBER() OVER(ORDER BY T.WAVE_NO ASC) AS SEQ
     , dbo.TL_GET_COMM_NM('WB6',T.BK_STS_CD) AS BK_STS_NM
	FROM (
	SELECT WAVE.WAVE_NO
	     , CONVERT(VARCHAR(8), WAVE.RGST_LOC_DT, 112) AS WAVE_DT
	     , OB.WOB_BK_NO
	     , OB.CUST_ORD_NO
	     , OB.WH_CD
	     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM  
	     , CASE WHEN (SELECT COUNT (1)
	                    FROM TL_WH_LOAD_PLAN LP
			               , TL_WH_LOAD_PLAN_ITEM LPI
			            WHERE LP.LP_NO = LPI.LP_NO		                                     
			              AND OB.WOB_BK_NO = LPI.WOB_BK_NO
			              AND LP.LP_STS_CD = 'L') > 0 THEN 'X'
			    WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'
	            WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') != 'Y' THEN 'A'
	            WHEN ALLC.WALC_NO IS NULL THEN 'I'
	            ELSE '' END AS BK_STS_CD   
	    , ISNULL(dbo.TL_GET_COMM_NM('WB3',OB.ORD_TP_CD), ' ') AS ORD_TP_CD
	    , OB.EST_OUT_DT
	    , WAVE.PICK_DT
	    , WAVE.OUTBOUND_DT
	    , RTRIM(LTRIM(ISNULL(OB.BUYER_ADDR1, '') + ' ' + ISNULL(OB.BUYER_ADDR2, '') + ' ' + ISNULL(OB.BUYER_ADDR3, '')+ ' ' + ISNULL(OB.BUYER_ADDR4, '')+ ' ' + ISNULL(OB.BUYER_ADDR5, ''))) AS SHIP_TO
	    , OB.CTRT_NO
		, dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
		, dbo.TL_GET_COMM_NM('TL3',OB.TRADE_TP_CD) AS TRADE_TP_CD
	    , dbo.TL_GET_COMM_NM('TL4',OB.FWD_TP_CD) AS FWD_TP_CD
	    , OB.MBL_NO
	    , OB.HBL_NO
	    , OB.REF_NO
	    , OB.COMMC_INV_NO
	FROM TL_WH_WAVE WAVE
	    , TL_WH_WAVE_OB WAVE_OB LEFT JOIN TL_WH_ALLC ALLC ON WAVE_OB.WOB_BK_NO = ALLC.WOB_BK_NO 
								LEFT JOIN TL_WH_PICK_SHT SHT ON ALLC.WALC_NO = SHT.WALC_NO
	    , TL_WH_OB OB
	WHERE WAVE.WAVE_NO = WAVE_OB.WAVE_NO
	  AND WAVE_OB.WOB_BK_NO = OB.WOB_BK_NO
	  AND OB.BK_STS_CD = 'I'
	  AND ISNULL(WAVE.SMP_WAVE_FLG, 'N') = 'Y'
	<isNotNull property="list_wh_cd">
		<isNotEmpty property="list_wh_cd">
			AND OB.WH_CD = #list_wh_cd#
		</isNotEmpty> 
	</isNotNull>
	<isNotNull property="list_ctrt_no">
		<isNotEmpty property="list_ctrt_no">
			AND OB.CTRT_NO = #list_ctrt_no#
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="list_in_no">
		<isNotEmpty property="list_in_no">
			<isEqual property="list_in_search_tp" compareValue="WAVE_NO">
				AND WAVE.WAVE_NO = #list_in_no#
			</isEqual>
			<isEqual property="list_in_search_tp" compareValue="WOB_BK_NO">
				AND OB.WOB_BK_NO = #list_in_no#
			</isEqual>
			<isEqual property="list_in_search_tp" compareValue="CUST_ORD_NO">
				AND OB.CUST_ORD_NO = #list_in_no#
			</isEqual>
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="list_fm_date">
		<isNotEmpty property="list_fm_date">
			<isEqual property="list_in_date_tp" compareValue="BK_DATE">
				AND OB.BK_DATE BETWEEN CONVERT(VARCHAR(8),CAST(#list_fm_date# as datetime),112) AND CONVERT(VARCHAR(8),CAST(#list_to_date# as datetime),112)
			</isEqual>
			<isEqual property="list_in_date_tp" compareValue="EST_OUT_DT">
				AND OB.EST_OUT_DT BETWEEN CONVERT(VARCHAR(8),CAST(#list_fm_date# as datetime),112) AND CONVERT(VARCHAR(8),CAST(#list_to_date# as datetime),112)
			</isEqual>
			<isEqual property="list_in_date_tp" compareValue="WAVE_DT">
				AND CONVERT(VARCHAR(8), WAVE.RGST_LOC_DT, 112) BETWEEN CONVERT(VARCHAR(8),CAST(#list_fm_date# as datetime),112) AND CONVERT(VARCHAR(8),CAST(#list_to_date# as datetime),112)
			</isEqual>
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="list_ship_to">
		<isNotEmpty property="list_ship_to">
			AND RTRIM(LTRIM(ISNULL(OB.BUYER_ADDR1, '') + ' ' + ISNULL(OB.BUYER_ADDR2, '') + ' ' + ISNULL(OB.BUYER_ADDR3, '') + ' ' + ISNULL(OB.BUYER_ADDR4, '')+ ' ' + ISNULL(OB.BUYER_ADDR5, ''))) LIKE '%' +  #list_ship_to# + '%'
		</isNotEmpty>
	</isNotNull>
	) T
	<isNotNull property="list_bk_sts_cd">
		<isNotEqual property="list_bk_sts_cd" compareValue="ALL">
			WHERE T.BK_STS_CD = #list_bk_sts_cd#
		</isNotEqual>
	</isNotNull>
	ORDER BY T.WAVE_NO ASC, ISNULL(T.CUST_ORD_NO, ' ') ASC, T.EST_OUT_DT ASC, T.WOB_BK_NO ASC
	</select>
	
	<select id="searchWaveSimpleNewOrderList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd02WaveSmpMgmtVO">
	/*WHOutWaveSimple.searchWaveSimpleNewOrderList*/
		SELECT OB.WOB_BK_NO
		     , OB.CUST_ORD_NO
		     , OB.BK_DATE
		     , OB.BK_STS_CD
		     , dbo.TL_GET_COMM_NM('WB6', 'I') AS BK_STS_NM
		     , OB.EST_OUT_DT
		     , LTRIM(OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3 + ' ' + OB.BUYER_ADDR4 + ' ' + OB.BUYER_ADDR5) AS SHIP_TO
		     , OB.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
		     , OB.WH_CD	 
		     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM 
		 FROM TL_WH_OB OB
		 WHERE OB.BK_STS_CD = 'I'
		<isNotNull property="wave_wh_cd">
		 	<isNotEmpty property="wave_wh_cd">
		 		AND OB.WH_CD = #wave_wh_cd#
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="wave_ctrt_no">
			<isNotEmpty property="wave_ctrt_no">
		 		AND OB.CTRT_NO = #wave_ctrt_no#
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="wave_fm_date">
			<isNotEmpty property="wave_fm_date">
				<isEqual property="wave_in_date_tp" compareValue="BK_DATE">
					AND OB.BK_DATE BETWEEN CONVERT(VARCHAR(8),CAST(#wave_fm_date# as datetime),112) AND CONVERT(VARCHAR(8),CAST(#wave_to_date# as datetime),112)
				</isEqual>
				<isEqual property="wave_in_date_tp" compareValue="EST_OUT_DT">
					AND OB.EST_OUT_DT BETWEEN CONVERT(VARCHAR(8),CAST(#wave_fm_date# as datetime),112) AND CONVERT(VARCHAR(8),CAST(#wave_to_date# as datetime),112)
				</isEqual>
			</isNotEmpty>
		</isNotNull>
		<isNotNull property="wave_in_no">
			<isNotEmpty property="wave_in_no">
				<isEqual property="wave_in_search_tp" compareValue="WOB_BK_NO">
					AND OB.WOB_BK_NO IN ($in_no$)
				</isEqual>
				<isEqual property="wave_in_search_tp" compareValue="CUST_ORD_NO">
					AND OB.CUST_ORD_NO IN ($in_no$)
				</isEqual>
			</isNotEmpty>
		</isNotNull>
		<isNotEmpty property="wave_ord_tp_cd" >
			<isNotEqual property="wave_ord_tp_cd" compareValue="ALL" >
		 		AND OB.ORD_TP_CD = #wave_ord_tp_cd#
			</isNotEqual>
		</isNotEmpty>
		   AND NOT EXISTS /* 기존할당건 제외 */
		                 ( SELECT 'X'
		                     FROM TL_WH_ALLC AC
		                    WHERE AC.WOB_BK_NO = OB.WOB_BK_NO
		                  )
		   AND NOT EXISTS /* 기존 WAVE에 속한건 제외*/
		                 ( SELECT 'X'
		                     FROM TL_WH_WAVE_OB WV
		                    WHERE WV.WOB_BK_NO = OB.WOB_BK_NO
		                  )   
		 ORDER BY ISNULL(OB.CUST_ORD_NO, ' ') ASC, OB.EST_OUT_DT ASC, OB.WOB_BK_NO ASC         
	</select>
	<delete id="removeWhPsudoLpGrpHeaderForWaveSimpleNoUsed">
	/*WHOutWaveSimple.removeWhPsudoLpGrpHeaderForWaveSimpleNoUsed*/              				
    DELETE FROM TL_WH_PSUDO_LP_GRP
    WHERE CONSOL_NO = #consol_no#
    AND NOT EXISTS (SELECT 'X'
       				FROM TL_WH_PSUDO_LP_SHIP SH
       				WHERE SH.CONSOL_NO 	= TL_WH_PSUDO_LP_GRP.CONSOL_NO
       				  AND SH.LP_ID 		= TL_WH_PSUDO_LP_GRP.LP_ID
       				  AND SH.LP_SEQ 	= TL_WH_PSUDO_LP_GRP.LP_SEQ)
	</delete>
	
	<parameterMap class="com.clt.apps.fis.wms.outboundmanagement.dto.ProcWaveSimpleAllcVO" id="callMAKE_TL_WH_PICK_PT_CANCEL_PRC_Param">
	 <parameter property="walc_no" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="wob_bk_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="sao_sys_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="wib_bk_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="po_sys_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="item_sys_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="lot_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="wh_loc_cd" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="item_seq" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="org_cd"  		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="user_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="rtncd"   		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtnmsg"  		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callMAKE_TL_WH_PICK_PT_CANCEL_PRC"  parameterMap="callMAKE_TL_WH_PICK_PT_CANCEL_PRC_Param">
		{ CALL dbo.MAKE_TL_WH_PICK_PT_CANCEL_PRC (	?,
												  	?,
												  	?,
												  	?,
												  	?,
												  	?,
												  	?,
												  	?,
												  	?,
												  	?,
													?,
													?,
													?) 
		}
	</procedure>
	
	<parameterMap class="com.clt.apps.fis.wms.outboundmanagement.dto.ProcWaveSimpleAllcVO" id="callMAKE_TL_WH_PICK_PT_PRC_Param">
	 <parameter property="walc_no" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="sao_sys_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="item_sys_no" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="item_seq" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="org_cd"  		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="user_id" 		javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="rtncd"   		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtnmsg"  		javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callMAKE_TL_WH_PICK_PT_PRC"  parameterMap="callMAKE_TL_WH_PICK_PT_PRC_Param">
		{ CALL dbo.MAKE_TL_WH_PICK_PT_PRC 		(	?,
												  	?,
												  	?,
												  	?,
												  	?,
													?,
													?,
													?) 
		}
	</procedure>
	
	<parameterMap class="com.clt.apps.fis.wms.outboundmanagement.dto.ProcWaveSimpleAllcVO" id="callMAKE_TL_WH_PICK_PRC_Param">
	 <parameter property="walc_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="org_cd"  javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="rtncd"   javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtnmsg"  javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callMAKE_TL_WH_PICK_PRC"  parameterMap="callMAKE_TL_WH_PICK_PRC_Param">
		{ CALL dbo.MAKE_TL_WH_PICK_PRC (?,
										?,
										?,
										?,
										?) 
		}
	</procedure>
	<procedure id="callMAKE_TL_WH_PICK_CANCEL_PRC"  parameterMap="callMAKE_TL_WH_PICK_PRC_Param">
		{ CALL dbo.MAKE_TL_WH_PICK_CANCEL_PRC (	?,
												?,
												?,
												?,
												?) 
		}
	</procedure>
	
	<parameterMap class="com.clt.apps.fis.wms.outboundmanagement.dto.ProcWaveSimpleAllcVO" id="callSMPLPPTCANCELPRC_Param">
	 <parameter property="wob_bk_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="org_cd"  	 javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="user_id" 	 javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="rtncd"     javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtnmsg"    javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callSMP_LP_PT_CANCEL_PRC"  parameterMap="callSMPLPPTCANCELPRC_Param">
		{ CALL dbo.SMP_LP_PT_CANCEL_PRC (	?,
											?,
											?,
											?,
											?) 
		}
	</procedure>
	
	<parameterMap class="com.clt.apps.fis.wms.common.dto.DocKeyVO" id="callDocKeyNoProc_Param">
	 <parameter property="doc_tp_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="wh_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	 <parameter property="doc_key_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	 <parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callDocKeyNoProc"  parameterMap="callDocKeyNoProc_Param">
		{ CALL dbo.PKG_MAKE_TL_WH_DOC_KEY_NO_PRC (?,
										        	?,
										        	?,
										        	?,
										        	?,
										          	?,
										          	?) }
	</procedure>
	
	<parameterMap class="com.clt.apps.fis.wms.whoutallcation.dto.ProcWHOutAllcationMakeAllcCancelVO" id="callWHOutAllcationMakeAllcCancelProc_Map">
		<parameter property="walc_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callWHOutAllcationMakeAllcCancelProc" parameterMap="callWHOutAllcationMakeAllcCancelProc_Map" >
		 { CALL PKG_MAKE_TL_WH_ALLC_CANCEL_PRC (?, ?, ?, ?, ?) } 
	</procedure>
	
    <parameterMap class="com.clt.apps.fis.wms.whoutallcation.dto.ProcWHOutAllcationMakeAllcPtCancelVO" id="callWHOutAllcationMakeAllcPtCancelProc_Map">
		<parameter property="walc_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="wob_bk_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="sao_sys_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="wib_bk_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="po_sys_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="item_sys_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="lot_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="wh_loc_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="item_seq" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callWHOutAllcationMakeAllcPtCancelProc" parameterMap="callWHOutAllcationMakeAllcPtCancelProc_Map">
		 {  CALL PKG_MAKE_TL_WH_ALLC_PT_CANCEL_PRC ( 
	                                             ?
	                                            ,?
	                                            ,?
	                                            ,?
	                                            ,?
	                                            ,?
	                                            ,?
	                                            ,?
	                                            ,?
												,?
												,?
                                                ,?
                                                ,?
        ) } 
	</procedure>
	<parameterMap id="CallWHOutAllcationMakeAllcProc_Param" class="com.clt.apps.fis.wms.whoutwave.dto.ProcWHOutAllcationMakeAllcVO">
     <parameter property="walc_no"  javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="sao_sys_no"   javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="item_sys_no"   javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="item_seq"  javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="org_cd"   javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="user_id"   javaType="java.lang.String" jdbcType="VARCHAR" mode="IN" />
     <parameter property="rtncd"   javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
     <parameter property="rtnmsg"   javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT" />
 	</parameterMap>  
    <procedure id="callWHOutAllcationMakeAllcProc" parameterMap="CallWHOutAllcationMakeAllcProc_Param">
      <![CDATA[{ call PKG_MAKE_TL_WH_ALLC_PRC(?, ?, ?, ?, ?, ?, ?, ?) }]]>
    </procedure>
    
	<parameterMap class="com.clt.apps.fis.wms.whoutboundcomplete.dto.ProcWHOCMakeLpVO" id="callMap4">
	<parameter property="lp_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callWHOCMakeLpProc" parameterMap="callMap4">
     	 { CALL PKG_MAKE_TL_WH_LP_PRC(?, ?, ?, ?, ?) }
    </procedure>
    
	<insert id="saveWhWave">
	/*WHOutWaveSimple.saveWhWave*/
		INSERT INTO TL_WH_WAVE
		     ( WAVE_NO
		     , RMK
		     , SMP_WAVE_FLG
		     , RGST_ID
		     , RGST_OFC_CD
		     , RGST_SYS_DT
		     , RGST_LOC_DT
		     , MODI_ID
		     , MODI_OFC_CD
		     , MODI_SYS_DT
		     , MODI_LOC_DT
		     )
		VALUES
		     ( #wave_no#
		     , #rmk#
		     , 'Y'
		     , #usr_id#
		     , #org_cd#
		     , GETDATE()
		     , GETDATE()
		     , #usr_id#
		     , #org_cd#
		     , GETDATE()
		     , GETDATE()
		     )
	</insert>
	<update id="modifyWhWave" >
	/*WHOutWaveSimple.modifyWhWave*/
		UPDATE TL_WH_WAVE
		   SET RMK            = #rmk#
		     , MODI_ID        = #usr_id#
		     , MODI_OFC_CD    = #org_cd#
		     , MODI_SYS_DT    = GETDATE()
		     , MODI_LOC_DT    = GETDATE()
		 WHERE WAVE_NO        = #wave_no#
	</update>	
	<insert id="saveWhWaveOb">
	/*WHOutWaveSimple.saveWhWaveOb*/
	INSERT INTO TL_WH_WAVE_OB
	     ( WAVE_NO
	     , WAVE_SEQ
	     , WOB_BK_NO
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	VALUES
	     ( #wave_no#
	     , (SELECT ISNULL(MAX(WAVE_SEQ), 0) + 1
	        FROM TL_WH_WAVE_OB
	        WHERE WAVE_NO = #wave_no#
	       )
	     , #wob_bk_no#
	     , #usr_id#
	     , #org_cd#
	     , GETDATE()
	     , GETDATE()
	     , #usr_id#
	     , #org_cd#
	     , GETDATE()
	     , GETDATE()
	     )
	</insert>	
	<delete id="deleteWhWaveOb">
	/*WHOutWaveSimple.deleteWhWaveOb*/
		DELETE FROM TL_WH_WAVE_OB
		WHERE WAVE_NO     = #wave_no#
			AND WOB_BK_NO = #wob_bk_no#
	</delete>
	<select id="searchWaveMgmtInfo" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.DocinWaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchWaveMgmtInfo*/
		SELECT WV.WAVE_NO
		     , OB.WH_CD
		     , CONVERT(VARCHAR,WV.RGST_LOC_DT,110 ) AS WAVE_RGST_DT
		     , WV.RMK
		     , CASE WHEN WV.PICK_DT IS NULL OR WV.PICK_DT = '' THEN '' ELSE (SUBSTRING(WV.PICK_DT,5,2)+'-'+SUBSTRING(WV.PICK_DT,7,2)+'-'+SUBSTRING(WV.PICK_DT,0,5)) END AS PICK_DT
		     , CASE WHEN WV.PICK_HM_FR IS NULL OR  WV.PICK_HM_FR = '' THEN '' ELSE SUBSTRING( WV.PICK_HM_FR, 0, 3) + ':' + SUBSTRING( WV.PICK_HM_FR, 3, 4)  END AS PICK_HM_FR
	         , CASE WHEN WV.PICK_HM_TO IS NULL OR  WV.PICK_HM_TO = '' THEN '' ELSE SUBSTRING( WV.PICK_HM_TO, 0, 3) + ':' + SUBSTRING( WV.PICK_HM_TO, 3, 4)  END AS PICK_HM_TO
	         , CASE WHEN WV.OUTBOUND_DT IS NULL OR WV.OUTBOUND_DT = '' THEN '' ELSE (SUBSTRING(WV.OUTBOUND_DT,5,2)+'-'+SUBSTRING(WV.OUTBOUND_DT,7,2)+'-'+SUBSTRING(WV.OUTBOUND_DT,0,5)) END AS OUTBOUND_DT 
	         , CASE WHEN WV.OUTBOUND_HM_FR IS NULL OR  WV.OUTBOUND_HM_FR = '' THEN '' ELSE SUBSTRING(WV.OUTBOUND_HM_FR, 0, 3) + ':' + SUBSTRING(WV.OUTBOUND_HM_FR, 3, 4)  END AS OUTBOUND_HM_FR
	         , CASE WHEN WV.OUTBOUND_HM_TO IS NULL OR  WV.OUTBOUND_HM_TO = '' THEN '' ELSE SUBSTRING(WV.OUTBOUND_HM_TO, 0, 3) + ':' + SUBSTRING(WV.OUTBOUND_HM_TO, 3, 4)  END AS OUTBOUND_HM_TO
	         , (SELECT DISTINCT(MAX(CONSOL_NO)) 
	              FROM TL_WH_PSUDO_LP_SHIP
	             WHERE WOB_BK_NO IN (SELECT WOB_BK_NO
	                                  FROM TL_WH_WAVE_OB
	                                 WHERE WAVE_NO = #wave_no#
	                                )
	           ) AS CONSOL_NO
	         , CASE WHEN SHT.WALC_NO IS NULL THEN 'N' ELSE 'Y' END AS PICK_SHT_YN
	         , (SELECT MIN(DLV_ORD_NO)
	              FROM TL_WH_WAVE_OB A
	                 , TL_WH_OB B 
	             WHERE A.WOB_BK_NO = B.WOB_BK_NO 
	               AND A.WAVE_NO = #wave_no#
	               AND B.DLV_ORD_NO IS NOT NULL 
	               AND B.TRO_FLG = 'Y'            
	           ) AS TRO_NO
	         , CASE WHEN (  SELECT COUNT(1)
	                          FROM TL_WH_WAVE_OB A
	                             , TL_WH_OB B 
	                         WHERE A.WOB_BK_NO = B.WOB_BK_NO 
	                           AND A.WAVE_NO = #wave_no#
	                           AND B.SRC_CD = 'E'
	                      ) > 0 THEN 'E' ELSE '' END AS SRC_CD  
		  FROM TL_WH_WAVE WV
		     , (SELECT W_O.WAVE_NO, MIN(W_O.WOB_BK_NO) AS WOB_BK_NO
		          FROM TL_WH_WAVE_OB W_O
		             , TL_WH_OB O
		         WHERE W_O.WAVE_NO = #wave_no#
		           AND W_O.WOB_BK_NO = O.WOB_BK_NO
		           AND O.BK_STS_CD = 'I'
		         GROUP BY W_O.WAVE_NO
		       ) WV_BK LEFT JOIN (TL_WH_ALLC ALLC LEFT JOIN TL_WH_PICK_SHT SHT ON ALLC.WALC_NO = SHT.WALC_NO) ON WV_BK.WOB_BK_NO = ALLC.WOB_BK_NO
		     , TL_WH_OB OB 
		 WHERE WV.WAVE_NO = WV_BK.WAVE_NO
		   AND WV_BK.WOB_BK_NO = OB.WOB_BK_NO
		   AND OB.BK_STS_CD = 'I'
		   AND ISNULL(WV.SMP_WAVE_FLG, 'N') = 'Y'
		   AND WV.WAVE_NO = #wave_no#
	</select>	
	<select id="searchWaveOrderList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd02WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchWaveOrderList*/
		SELECT
			T.*,
			ROW_NUMBER () OVER (ORDER BY T.CUST_ORD_NO ASC) AS SEQ,
			T.BK_STS_CD_ORG AS BK_STS_CD,
			dbo.TL_GET_COMM_NM ('WB6',CASE 
			WHEN T.BK_STS_CD_ORG = 'LP' THEN 'X'
			WHEN T.BK_STS_CD_ORG = 'PL' AND T.PICKD_FLG = 'Y' THEN 'P'
			WHEN T.BK_STS_CD_ORG = 'PL' AND T.PICKD_FLG = 'N' THEN 'A'
			WHEN T.BK_STS_CD_ORG = 'P' THEN 'P'
			WHEN T.BK_STS_CD_ORG = 'A' THEN 'A'
			WHEN T.BK_STS_CD_ORG = 'I' THEN 'I'
			ELSE '' END) AS BK_STS_NM
		FROM
			(
				SELECT
					OB.WOB_BK_NO,
					ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO,
					OB.BK_DATE,
					CASE
				WHEN (
					SELECT
						COUNT (1)
					FROM
						TL_WH_LOAD_PLAN LP,
						TL_WH_LOAD_PLAN_ITEM LPI
					WHERE
						LP.LP_NO = LPI.LP_NO
					AND OB.WOB_BK_NO = LPI.WOB_BK_NO
					AND LP.LP_STS_CD = 'L'
				) > 0 THEN
					'LP' /* BY LOADPLAN COMPLETE */
				WHEN (
					SELECT
						COUNT (1)
					FROM
						TL_WH_LOAD_PLAN LP,
						TL_WH_LOAD_PLAN_ITEM LPI
					WHERE
						LP.LP_NO = LPI.LP_NO
					AND OB.WOB_BK_NO = LPI.WOB_BK_NO
					AND LP.LP_STS_CD = 'P'
				) > 0 THEN
					'PL' /* BY LOADPLAN PLAN*/
				WHEN ALLC.WALC_NO IS NOT NULL
				AND ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN
					'P' /* PICKED */
				WHEN ALLC.WALC_NO IS NOT NULL
				AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN
					'A' /* ALLOC*/
				WHEN ALLC.WALC_NO IS NULL THEN
					'I' /* ISSU */
				ELSE
					''
				END AS BK_STS_CD_ORG,
				OB.EST_OUT_DT,
				LTRIM(
					RTRIM(
						(
							OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3 + ' ' + OB.BUYER_ADDR4 + ' ' + OB.BUYER_ADDR5
						)
					)
				) AS SHIP_TO,
				OB.BUYER_CD,
				OB.CTRT_NO,
				dbo.TL_GET_CTRT_NM (OB.CTRT_NO) AS CTRT_NM,
				OB.WH_CD,
				dbo.TL_GET_LOC_NM (OB.WH_CD) AS WH_NM,
				WV.WAVE_NO,
				ALLC.WALC_NO,
				(SELECT COUNT (1) FROM TL_WH_ISSU_ITEM ISSU WHERE ISSU.WALC_NO = ALLC.WALC_NO) AS ISSU_CNT /*issu된건 체크 */
				,(SELECT COUNT (1) FROM TL_WH_LOAD_PLAN LP,TL_WH_LOAD_PLAN_ITEM LPI
					WHERE
						LP.LP_NO = LPI.LP_NO
					AND LPI.WOB_BK_NO = WV_BK.WOB_BK_NO
					AND LP.LP_STS_CD IN ('L')) AS LP_CNT /*Load Plan된건 체크 */
				,(SELECT COUNT (1) FROM TL_WH_ALLC_ITEM A WHERE A.WALC_NO = ALLC.WALC_NO) AS ALLC_CNT,
				ISNULL(ALLC.PICKD_FLG, 'N') AS PICKD_FLG,
				CASE ISNULL(ALLC.PICKD_FLG, 'N') WHEN 'Y' THEN 1 ELSE 0
			END AS PICKD_CNT
			FROM
				TL_WH_WAVE WV,
				TL_WH_WAVE_OB WV_BK,
				TL_WH_OB OB LEFT JOIN TL_WH_ALLC ALLC ON OB.WOB_BK_NO = ALLC.WOB_BK_NO WHERE WV.WAVE_NO = WV_BK.WAVE_NO
			AND WV_BK.WOB_BK_NO = OB.WOB_BK_NO
			AND OB.BK_STS_CD = 'I'
			AND WV.WAVE_NO = #wave_no#
		) T
		ORDER BY
			T.CUST_ORD_NO ASC,
			T.EST_OUT_DT ASC,
			T.WOB_BK_NO ASC     
	</select>
	
	<select id="searchAllcMgmtItem" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd03WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchAllcMgmtItem*/
	SELECT TT.*     
	<![CDATA[ 
	, CASE WHEN TT.LP_NO IS NOT NULL THEN TT.OUT_PE_QTY_LP_I
	        WHEN TT.CONSOL_NO IS NOT NULL THEN TT.OUT_PE_QTY_SH
	        WHEN TT.WALC_NO IS NULL THEN 0
	        WHEN ISNULL(TT.SHIP_ITEM_EA_QTY,0) > 0 THEN ( CASE WHEN TT.PE_QTY < 0  THEN 1 WHEN TT.PE_QTY > TT.SHIP_ITEM_EA_QTY THEN 1 ELSE CEILING(TT.SHIP_ITEM_EA_QTY / TT.PE_QTY) END)
	        ELSE 0 END AS OUT_PE_QTY  ]]>
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        WHEN TT.PICKD_FLG = 'Y' THEN 'FALSE'
	        ELSE 'TRUE' END AS TD_PROP_EDIT_PICK_ITEM_EA_QTY 
	 , CASE WHEN TT.BK_STS_CD_GRP = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_CHK
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_SHIP_ITEM_EA_QTY
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_TRUCKER_CD
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_TRUCKER_NM
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_EQ_NO       
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_SEAL_NO
	 , CASE WHEN TT.TRO_FLG = 'Y' OR TT.TLO_FLG = 'Y' THEN 'FALSE'
	        WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_DLV_ORD_NO
	 , CASE WHEN TT.TRO_FLG = 'Y' THEN '1,0,255'
	        ELSE ''
	        END AS TD_PROP_COLOR_DLV_ORD_NO
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_OUTBOUND_DT
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        ELSE 'TRUE'
	        END AS TD_PROP_EDIT_OUT_PE_QTY
	 , CASE WHEN TT.BK_STS_CD = 'LP' THEN 'FALSE'
	        WHEN TT.LP_ID IS NOT NULL THEN 'FALSE'
	        ELSE 'TRUE' END AS TD_PROP_EDIT_EQ_TPSZ_CD 
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') = 'Y' THEN TT.DLV_ORD_NO_ORG + '(' + 
	   CAST( (CASE WHEN TT.TRO_CNT = 0 THEN 1 ELSE TT.TRO_CNT END) AS VARCHAR(100)) + ')' ELSE TT.DLV_ORD_NO_ORG END AS DLV_ORD_NO
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') = 'Y' AND TT.TRO_CNT = 1 THEN dbo.TL_GET_COMM_NM('TR0', TRO.TRO_STS_CD)  
	        WHEN ISNULL(TT.TRO_FLG, 'N') = 'Y' AND TT.TRO_CNT > 1 THEN 
	       (CASE WHEN 
       	   (	SELECT COUNT(DISTINCT(TRO.TRO_SEQ))
                FROM TL_TRO TRO
                 	,TL_TRO_ITEM TRO_ITEM
                WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
                	AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
                    AND TRO.TRO_NO = TT.DLV_ORD_NO_ORG
                    AND TRO.TRO_STS_CD != 'D'
                    AND TRO_ITEM.BK_NO = TT.WOB_BK_NO
                   	AND TRO_ITEM.SAO_SYS_NO = TT.SAO_SYS_NO
                    AND TRO_ITEM.ITEM_SYS_NO = TT.ITEM_SYS_NO
                    AND TRO_ITEM.ITEM_SEQ = TT.ITEM_SEQ		) = (
                SELECT COUNT(DISTINCT(TRO.TRO_SEQ))
                FROM TL_TRO TRO
                   , TL_TRO_ITEM TRO_ITEM
                WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
                AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
                AND TRO.TRO_NO = TT.DLV_ORD_NO_ORG
                AND TRO.TRO_STS_CD = 'C'
               	AND TRO_ITEM.BK_NO = TT.WOB_BK_NO
                AND TRO_ITEM.SAO_SYS_NO = TT.SAO_SYS_NO
                AND TRO_ITEM.ITEM_SYS_NO = TT.ITEM_SYS_NO
                AND TRO_ITEM.ITEM_SEQ = TT.ITEM_SEQ		) THEN dbo.TL_GET_COMM_NM('TR0', 'C') ELSE '' END ) ELSE '' END AS TRO_STS_NM
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.EQ_TPSZ_CD_ORG 	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN ISNULL(TRO.CNTR_TPSZ_CD, TRO.TRUCK_TPSZ_CD) ELSE TT.EQ_TPSZ_CD_ORG END) END AS EQ_TPSZ_CD
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.EQ_NO_ORG 		ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  ISNULL(TRO.CNTR_NO, TRO.TRUCK_NO) ELSE TT.EQ_NO_ORG END) END AS EQ_NO
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.SEAL_NO_ORG 	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.SEAL_NO ELSE TT.SEAL_NO_ORG END) END AS SEAL_NO
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.TRUCKER_CD_ORG	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.TRUCKER_CD ELSE TT.TRUCKER_CD_ORG END) END AS TRUCKER_CD
	 , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.TRUCKER_NM_ORG	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.TRUCKER_NM ELSE TT.TRUCKER_NM_ORG END) END AS TRUCKER_NM    
  FROM (
	SELECT T.*
		   , CASE WHEN ISNULL(T.TRO_FLG, 'N') = 'Y' THEN 
		    	(CASE WHEN T.DLV_ORD_SEQ IS NOT NULL THEN T.DLV_ORD_SEQ WHEN T.TRO_CNT = 1 THEN  
		    		(SELECT MAX(TRO.TRO_SEQ)
		             FROM TL_TRO TRO
		                 ,TL_TRO_ITEM TRO_ITEM
		             WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
		             AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
		             AND TRO.TRO_NO = T.DLV_ORD_NO_ORG
		             AND TRO.TRO_STS_CD != 'D'
		             AND TRO_ITEM.BK_NO = T.WOB_BK_NO
		             AND TRO_ITEM.SAO_SYS_NO = T.SAO_SYS_NO
		             AND TRO_ITEM.ITEM_SYS_NO = T.ITEM_SYS_NO
		             AND TRO_ITEM.ITEM_SEQ = T.ITEM_SEQ )
		          ELSE NULL END )ELSE NULL END AS TRO_SEQ
	     , ISNULL(D.LOT_ATTRIB_01, T.INBOUND_DT_OB) AS INBOUND_DT
	     , ISNULL(ISNULL(D.LOT_ATTRIB_02, T.LOT_NO_OB), ' ')  AS LOT_NO
	     , ISNULL(D.LOT_ATTRIB_03, T.EXP_DT_OB)     AS EXP_DT
	     , ISNULL(D.LOT_ATTRIB_04, T.LOT_04_OB)     AS LOT_04
	     , ISNULL(D.LOT_ATTRIB_05, T.LOT_05_OB)     AS LOT_05
	     , T.ITEM_EA_QTY - T.ALLC_SUM_EA_QTY AS UN_ALLOC_EA_QTY
	     , ' ' AS MANUAL_ALLOC_IMG /*화면 컨트롤용*/
	     , 0 AS ISSU_CNT
	     , CASE WHEN PS_S.LP_NO IS NOT NULL AND PS_S.LP_STS_CD = 'L' THEN 1 ELSE 0 END AS LP_CNT
	     , ISNULL(CI.PKG_LV1_QTY, 0) AS PKG_LV1_QTY   
	     , ISNULL(CI.LV1_CBM, 0) AS LV1_CBM
		 , ISNULL(CI.LV1_CBF, 0) AS LV1_CBF
		 , ISNULL(CI.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
		 , ISNULL(CI.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
		 , ISNULL(CI.LV1_NET_KGS, 0) AS LV1_NET_KGS
		 , ISNULL(CI.LV1_NET_LBS, 0) AS LV1_NET_LBS 
		 , (CASE WHEN CI.PKG_LV1_UNIT_CD = 'PE' THEN CI.PKG_LV1_QTY
		         WHEN CI.ITEM_PKGUNIT    = 'PE' THEN CI.ITEM_PKGBASEQTY
		         WHEN CI.PKG_LV3_UNIT_CD = 'PE' THEN CI.PKG_LV3_QTY
		         WHEN CI.PKG_LV4_UNIT_CD = 'PE' THEN CI.PKG_LV4_QTY
		         ELSE -1
		         END
		   ) AS PE_QTY
		 , CASE WHEN T.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
	            WHEN T.CONSOL_NO IS NOT NULL THEN T.LOAD_ITEM_EA_QTY_SH
	            ELSE 0 END AS SHIP_ITEM_EA_QTY  
	     , CASE WHEN T.LP_NO IS NOT NULL THEN LP_I.LP_ITEM_EA_QTY
	            WHEN T.CONSOL_NO IS NOT NULL THEN T.LP_ITEM_EA_QTY_SH
	            ELSE 0
	            END AS LOAD_PLAN_ITEM_EA_QTY /*loading plan item ea qty*/	      
	     , CASE WHEN T.PICKD_FLG = 'Y' THEN T.PICKD_ITEM_EA_QTY
	            ELSE 0
	            END AS PICK_ITEM_EA_QTY /*Picking*/
	     , ISNULL(T.SHIPNO_SEQ, 0) AS SHIPNO_SEQ_ORD /*SPLIT 건 정렬을 위하여*/
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_CBM_ORG ELSE LP_I.LOAD_ITEM_CBM END AS ITEM_CBM
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_CBF_ORG ELSE LP_I.LOAD_ITEM_CBF END AS ITEM_CBF
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_GRS_KGS_ORG ELSE LP_I.LOAD_ITEM_GRS_KGS END AS ITEM_GRS_KGS
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_GRS_LBS_ORG ELSE LP_I.LOAD_ITEM_GRS_LBS END AS ITEM_GRS_LBS
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_NET_KGS_ORG ELSE LP_I.LOAD_ITEM_NET_KGS END AS ITEM_NET_KGS
	     , CASE WHEN T.LP_NO IS NULL THEN T.ITEM_NET_LBS_ORG ELSE LP_I.LOAD_ITEM_NET_LBS END AS ITEM_NET_LBS
	     , LP_I.OUT_PE_QTY AS OUT_PE_QTY_LP_I
	     , dbo.TL_GET_COMM_NM('WB6', CASE T.BK_STS_CD_GRP WHEN 'LP' THEN 'X' ELSE T.BK_STS_CD_GRP END) AS BK_STS_NM
         , CASE WHEN T.LP_NO IS NOT NULL AND T.LP_STS_CD = 'L' THEN 'LP'
	            WHEN T.LP_NO IS NOT NULL AND T.LP_STS_CD = 'P' THEN 'PL'
	            WHEN T.WALC_NO IS NULL THEN 'I'
	            WHEN T.WALC_NO IS NOT NULL AND T.PICKD_FLG = 'Y' THEN 'P'
	            WHEN T.WALC_NO IS NOT NULL AND T.PICKD_FLG != 'Y' THEN 'A'
	            ELSE '' END AS BK_STS_CD
	     , CASE WHEN T.LP_NO IS NOT NULL THEN LP_I.RGST_TIMESTAMP
                ELSE 'ZZZZZ'
                END AS COMPLETE_TIMESTAMP 
	   FROM (
	        SELECT ROW_NUMBER() OVER(ORDER BY A.WOB_BK_NO) AS RN /*화면에서 SEQ한값을 INBOUND_DT앞에 넣어 MERGE효과를 중지시킨다*/
	             , B.RUM
	             , A.WOB_BK_NO
	             , A.WOB_BK_NO AS WOB_BK_NO_ORG
	             , ISNULL(A.CUST_ORD_NO, ' ') AS CUST_ORD_NO
	             , ISNULL(dbo.TL_GET_COMM_NM('WB3',A.ORD_TP_CD), ' ') AS ORD_TP_NM
	             , A.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(A.CTRT_NO) AS CTRT_NM
	             , A.WH_CD
	             , dbo.TL_GET_LOC_NM(A.WH_CD) AS WH_NM
	             , A.EST_OUT_DT
	             , B.SAO_SYS_NO 
	             , B.ITEM_SYS_NO
	             , B.ITEM_SEQ
	             , C.WALC_NO
	             , C.PO_SYS_NO
	             , C.LOT_ID
	             , C.WH_LOC_CD
	             , B.SAO_NO /* PO NO OUT*/
	             , C.WIB_BK_NO
	             , B.ITEM_CD
	             , B.CUST_ITEM_CD
	             , B.ITEM_NM
	             , B.ITEM_PKGQTY  /*ORDER PKGQTY*/
	             , B.ITEM_PKGUNIT /*ORDER PKGUNIT*/
	             , B.ITEM_EA_QTY  /*ORDER EA QTY*/
	             , ISNULL((SELECT SUM(ISNULL(Z.PICK_ITEM_EA_QTY,0)) FROM TL_WH_ALLC_ITEM Z WHERE Z.WOB_BK_NO = B.WOB_BK_NO AND Z.SAO_SYS_NO = B.SAO_SYS_NO AND Z.ITEM_SYS_NO =  B.ITEM_SYS_NO AND Z.ITEM_SEQ =  B.ITEM_SEQ),0) AS ALLC_SUM_EA_QTY /*ALLOC*/
	             , dbo.TL_GET_WH_LOC_NM(A.WH_CD, C.WH_LOC_CD) AS  WH_LOC_CD_NM
	             , ISNULL(C.PICK_ITEM_EA_QTY, 0) AS ALLC_ITEM_EA_QTY	             
	             
	            
	             , C.PO_NO AS PO_NO_IN
	             , B.INBOUND_DT AS INBOUND_DT_OB
	             , B.LOT_NO AS LOT_NO_OB
	             , B.EXP_DT AS EXP_DT_OB
	             , B.LOT_04 AS LOT_04_OB
	             , B.LOT_05 AS LOT_05_OB
	             , B.RGST_TIMESTAMP
	             
	             , ISNULL(ALLC.PICKD_FLG, 'N') AS PICKD_FLG	                          
   
	             , CASE WHEN (SELECT COUNT (1)
                      	        FROM TL_WH_LOAD_PLAN LP
		                           , TL_WH_LOAD_PLAN_ITEM LPI
		                       WHERE LP.LP_NO = LPI.LP_NO		                                     
		                         AND A.WOB_BK_NO = LPI.WOB_BK_NO
		                         AND LP.LP_STS_CD = 'L') > 0 THEN 'LP'			             
	                    WHEN ALLC.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG = 'Y' THEN 'P'
	                    WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'
	                    WHEN ALLC.WALC_NO IS NULL THEN 'I'     
	                    ELSE '' END AS BK_STS_CD_GRP
	             , C.WALC_NO+C.WOB_BK_NO+C.SAO_SYS_NO+C.WIB_BK_NO+C.PO_SYS_NO+C.ITEM_SYS_NO+C.LOT_ID+C.WH_LOC_CD+CAST(C.ITEM_SEQ AS VARCHAR) AS ALLC_MERGE_KEY
	             , C.PICKD_ITEM_EA_QTY
                 , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_CBM 
                        WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_CBM  ELSE C.PICK_ITEM_CBM END
	                    ELSE B.ITEM_CBM END AS ITEM_CBM_ORG
	             , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_CBF 
	                    WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_CBF  ELSE C.PICK_ITEM_CBF END
	                    ELSE B.ITEM_CBF END AS ITEM_CBF_ORG
	             , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_GRS_KGS 
	                    WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_GRS_KGS  ELSE C.PICK_ITEM_GRS_KGS END
	                    ELSE B.ITEM_GRS_KGS END AS ITEM_GRS_KGS_ORG    
	             , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_GRS_LBS 
	                    WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_GRS_LBS  ELSE C.PICK_ITEM_GRS_LBS END
	                    ELSE B.ITEM_GRS_LBS END AS ITEM_GRS_LBS_ORG 
                 , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_NET_KGS 
	                    WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_NET_KGS  ELSE C.PICK_ITEM_NET_KGS END
	                    ELSE B.ITEM_NET_KGS END AS ITEM_NET_KGS_ORG               	                    
	             , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LP_ITEM_NET_LBS 
	                    WHEN C.WALC_NO IS NOT NULL THEN CASE ALLC.PICKD_FLG  WHEN 'Y' THEN  C.PICKD_ITEM_NET_LBS  ELSE C.PICK_ITEM_NET_LBS END
	                    ELSE B.ITEM_NET_LBS END AS ITEM_NET_LBS_ORG   
	                    
	  
                 , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.TRUCKER_CD 
                        WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.TRUCKER_CD 
                        WHEN C.WALC_NO IS NOT NULL THEN C.TRUCKER_CD
	                    ELSE '' END AS TRUCKER_CD_ORG
	             , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.TRUCKER_NM 
	                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.TRUCKER_NM 
                        WHEN C.WALC_NO IS NOT NULL THEN C.TRUCKER_NM
	                    ELSE '' END AS TRUCKER_NM_ORG
	             , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_TPSZ_CD 
	                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.EQ_TPSZ_CD 
                        WHEN C.WALC_NO IS NOT NULL THEN C.EQ_TPSZ_CD
	                    ELSE '' END AS EQ_TPSZ_CD_ORG
	             , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_NO 
	                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.EQ_NO 
                        WHEN C.WALC_NO IS NOT NULL THEN C.EQ_NO
	                    ELSE '' END AS EQ_NO_ORG   
	             , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.SEAL_NO 
	                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.SEAL_NO 
                        WHEN C.WALC_NO IS NOT NULL THEN C.SEAL_NO
	                    ELSE '' END AS SEAL_NO_ORG      
	             , CASE WHEN ISNULL(A.TRO_FLG, 'N') = 'Y' THEN A.DLV_ORD_NO
	                    WHEN ISNULL(A.TLO_FLG, 'N') = 'Y' THEN A.DLV_ORD_NO
	                    WHEN LP.LP_NO IS NOT NULL THEN LP.DLV_ORD_NO 
	                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.DLV_ORD_NO 
                        WHEN C.WALC_NO IS NOT NULL THEN C.DLV_ORD_NO
	                    ELSE '' END AS DLV_ORD_NO_ORG
	            , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.DLV_ORD_SEQ
                       WHEN C.WALC_NO IS NOT NULL THEN C.DLV_ORD_SEQ
                       ELSE NULL END AS DLV_ORD_SEQ 
                , CASE WHEN ISNULL(A.TRO_FLG, 'N') = 'Y' THEN 
                  	(SELECT COUNT(DISTINCT(TRO.TRO_SEQ)) 
                     FROM TL_TRO TRO
                    	 ,TL_TRO_ITEM TRO_ITEM 
                     WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
                     AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
                     AND TRO.TRO_NO = A.DLV_ORD_NO 
                     AND TRO.TRO_STS_CD != 'D'
                     AND TRO_ITEM.BK_NO = B.WOB_BK_NO
                     AND TRO_ITEM.SAO_SYS_NO = B.SAO_SYS_NO
                     AND TRO_ITEM.ITEM_SYS_NO = B.ITEM_SYS_NO
                     AND TRO_ITEM.ITEM_SEQ = B.ITEM_SEQ) ELSE 0 END AS TRO_CNT
                 , SHIP.CONSOL_NO
                 , SHIP.LP_ID
                 , SHIP.LP_SEQ           
                 , SHIP.SHIPNO
                 , SHIP.SHIPNO_SEQ
                 , SHIP.LP_ITEM_EA_QTY AS LP_ITEM_EA_QTY_SH
                 , SHIP.LOAD_ITEM_EA_QTY AS LOAD_ITEM_EA_QTY_SH    
                 , SHIP.OUTBOUND_DT AS OUTBOUND_DT_SH
                 , SHIP.OUT_PE_QTY AS OUT_PE_QTY_SH
                 , LP.LP_NO
                 , LP.LP_STS_CD
                 , LP.OUTBOUND_DT
                 , ISNULL(A.TRO_FLG, 'N') AS TRO_FLG
                 , ISNULL(A.TLO_FLG, 'N') AS TLO_FLG
	          FROM TL_WH_OB A LEFT JOIN TL_WH_ALLC ALLC ON A.WOB_BK_NO = ALLC.WOB_BK_NO
	             , (           
	                 SELECT ROW_NUMBER() OVER(ORDER BY TT.CUST_ORD_NO ASC, TT.WOB_BK_NO ASC, TT.RGST_TIMESTAMP ASC, TT.SAO_SYS_NO ASC, TT.ITEM_SYS_NO ASC, TT.ITEM_SEQ ASC) AS RUM
			              , TT.*
			         FROM (SELECT OB_ITEM.*
			                      , AL.PICK_ITEM_EA_QTY
			                      , ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO
					       FROM TL_WH_OB_ITEM OB_ITEM
					            LEFT JOIN (	SELECT AI.WOB_BK_NO, 
								           			AI.SAO_SYS_NO, 
								           			AI.ITEM_SYS_NO, 
								           			AI.ITEM_SEQ, 
								           			SUM(AI.PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
			                                FROM TL_WH_ALLC_ITEM AI
			                                WHERE 1 = 1
			                                AND AI.WOB_BK_NO IN (SELECT WOB_BK_NO
			                                                     FROM TL_WH_WAVE_OB
			                                                     WHERE WAVE_NO =  #wave_no#)
			                                     GROUP BY AI.WOB_BK_NO, AI.SAO_SYS_NO, AI.ITEM_SYS_NO, AI.ITEM_SEQ) AL 
			                   ON (OB_ITEM.WOB_BK_NO = AL.WOB_BK_NO AND OB_ITEM.SAO_SYS_NO = AL.SAO_SYS_NO AND OB_ITEM.ITEM_SYS_NO = AL.ITEM_SYS_NO AND OB_ITEM.ITEM_SEQ = AL.ITEM_SEQ)
                              ,TL_WH_OB OB 
                           WHERE 1=1
                           AND OB_ITEM.WOB_BK_NO = OB.WOB_BK_NO
					       AND OB_ITEM.WOB_BK_NO IN (SELECT WOB_BK_NO
					                                 FROM TL_WH_WAVE_OB
					                                 WHERE WAVE_NO = #wave_no#)
					         ) TT
					    <isEqual property="cond_div" compareValue="UN">
					    	/* UnAllocated */	
					    	<![CDATA[WHERE ISNULL(TT.ITEM_EA_QTY,0) - ISNULL(TT.PICK_ITEM_EA_QTY,0) > 0]]>
					    </isEqual>
			       ) B LEFT JOIN TL_WH_ALLC_ITEM C LEFT JOIN (TL_WH_PSUDO_LP_SHIP SHIP LEFT JOIN TL_WH_LOAD_PLAN LP ON (SHIP.CONSOL_NO = LP.CONSOL_NO AND SHIP.LP_ID = LP.LP_ID AND SHIP.LP_SEQ = LP.LP_SEQ))
					                 	             ON (
					                 	             		C.WOB_BK_NO   = SHIP.WOB_BK_NO
											           	AND C.SAO_SYS_NO  = SHIP.SAO_SYS_NO
											           	AND C.WIB_BK_NO   = SHIP.WIB_BK_NO
											           	AND C.PO_SYS_NO   = SHIP.PO_SYS_NO
											           	AND C.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
											           	AND C.LOT_ID      = SHIP.LOT_ID
											           	AND C.WH_LOC_CD   = SHIP.WH_LOC_CD
											           	AND C.ITEM_SEQ    = SHIP.ITEM_SEQ
											           	AND 'G' 		  = SHIP.LP_STATUS )
					   ON (
					   		 	B.WOB_BK_NO   = C.WOB_BK_NO
	           				AND B.SAO_SYS_NO  = C.SAO_SYS_NO
	           				AND B.ITEM_SYS_NO = C.ITEM_SYS_NO
	           				AND B.ITEM_SEQ    = C.ITEM_SEQ )              	             
	         WHERE A.BK_STS_CD   = 'I'
	           AND A.WOB_BK_NO   = B.WOB_BK_NO
	           AND A.WOB_BK_NO IN (SELECT WOB_BK_NO FROM TL_WH_WAVE_OB WHERE WAVE_NO = #wave_no#)
	        ) T
	        LEFT JOIN TL_WH_LOAD_PLAN PS_S ON (T.CONSOL_NO = PS_S.CONSOL_NO AND T.LP_ID = PS_S.LP_ID AND T.LP_SEQ = PS_S.LP_SEQ AND T.LP_NO = PS_S.LP_NO)
	        LEFT JOIN TL_WH_LOAD_PLAN_ITEM LP_I 
	        	ON (
	        	 	 	T.LP_NO       = LP_I.LP_NO
			        AND T.WOB_BK_NO   = LP_I.WOB_BK_NO
				    AND T.SAO_SYS_NO  = LP_I.SAO_SYS_NO
				    AND T.WIB_BK_NO   = LP_I.WIB_BK_NO
				    AND T.PO_SYS_NO   = LP_I.PO_SYS_NO
				    AND T.ITEM_SYS_NO = LP_I.ITEM_SYS_NO
				    AND T.LOT_ID      = LP_I.LOT_ID
				    AND T.WH_LOC_CD   = LP_I.WH_LOC_CD
				    AND T.ITEM_SEQ    = LP_I.ITEM_SEQ)
	       	, TL_CTRT_CUST_ITEM CI
	        , TL_CTRT_CUST_ITEM_LOT D	       
	  WHERE 1=1
        AND T.CTRT_NO = CI.CTRT_NO AND T.ITEM_SYS_NO =  CI.ITEM_SYS_NO
        AND T.CTRT_NO = D.CTRT_NO  AND T.ITEM_SYS_NO = D.ITEM_SYS_NO AND T.LOT_ID = D.LOT_ID
        <isEqual property="cond_div" compareValue="ALLCED">
        	/* Allocated */	
        	AND T.WALC_NO  IS NOT NULL 
        </isEqual>
    ) TT LEFT JOIN TL_TRO TRO ON (TT.DLV_ORD_NO_ORG = TRO.TRO_NO AND TT.TRO_SEQ = TRO.TRO_SEQ)
    ORDER BY TT.RUM ASC, TT.CUST_ORD_NO, TT.WOB_BK_NO ASC, TT.RGST_TIMESTAMP ASC, TT.SAO_SYS_NO ASC, TT.INBOUND_DT ASC, TT.ITEM_SYS_NO ASC, TT.ITEM_SEQ ASC, TT.PO_SYS_NO ASC, TT.LOT_ID ASC, TT.WH_LOC_CD ASC, TT.COMPLETE_TIMESTAMP ASC, TT.SHIPNO_SEQ_ORD ASC
	</select>	
	
	<select id="searchAllcMgmtSkuList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd03WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchAllcMgmtSkuList*/
	SELECT TT.*
	     , CASE WHEN TT.LP_CNT > 0 THEN 'FALSE'
	            WHEN TT.PICKD_FLG = 'Y' THEN 'FALSE'
	            ELSE 'TRUE' END AS TD_PROP_EDIT_CHK
	     , '0' AS TD_PROP_IMAGE_MANUAL_ALLOC_IMG
	     <isEqual property="cond_div" compareValue="UN">
	     , (SELECT ISNULL(SUM(ISNULL(INV.IN_QTY, 0) - ISNULL(INV.ALLC_QTY, 0)), 0) 
		      FROM TL_WH_INV_LOC INV
		     WHERE INV.CTRT_NO = TT.CTRT_NO
		       AND INV.WH_CD = TT.WH_CD
		       AND INV.ITEM_SYS_NO = TT.ITEM_SYS_NO
			   AND EXISTS /*할당 가능한 LOCATION*/
	          (SELECT 'X'
	           FROM TL_WH_LOC WL, TL_WH_PROP WP
	           WHERE 	WL.LOC_CD = WP.LOC_CD
	           		AND WL.WH_LOC_CD = INV.WH_LOC_CD
	                AND WL.LOC_CD = INV.WH_CD
	                AND WL.USE_FLG = 'Y'
	                AND WL.PROP_CD = WP.PROP_CD	                                           
	                AND WP.ALLOC_FLG = 'Y'
	                AND WP.USE_FLG = 'Y'
	           )
	           AND ISNULL(INV.IN_QTY, 0) - ISNULL(INV.ALLC_QTY, 0) > 0 
         ) AS STOCK_QTY   
	     </isEqual>
	FROM (
	SELECT T.*
	     , ISNULL(D.LOT_ATTRIB_01, T.INBOUND_DT_OB) AS INBOUND_DT
	     , ISNULL(D.LOT_ATTRIB_02, T.LOT_NO_OB)     AS LOT_NO
	     , ISNULL(D.LOT_ATTRIB_03, T.EXP_DT_OB)     AS EXP_DT
	     , ISNULL(D.LOT_ATTRIB_04, T.LOT_04_OB)     AS LOT_04
	     , ISNULL(D.LOT_ATTRIB_05, T.LOT_05_OB)     AS LOT_05
	     , T.ITEM_EA_QTY - T.ALLC_SUM_EA_QTY AS UN_ALLOC_EA_QTY
	     , ' ' AS MANUAL_ALLOC_IMG /*화면 컨트롤용*/
	     , (SELECT COUNT(1) 
	          FROM TL_WH_LOAD_PLAN A
	             , TL_WH_LOAD_PLAN_ITEM B
	         WHERE A.LP_NO 			= B.LP_NO
	           AND B.WOB_BK_NO 		= T.WOB_BK_NO
	           AND B.SAO_SYS_NO 	= T.SAO_SYS_NO
	           AND B.WIB_BK_NO 		= T.WIB_BK_NO
	           AND B.PO_SYS_NO 		= T.PO_SYS_NO
	           AND B.ITEM_SYS_NO 	= T.ITEM_SYS_NO
	           AND B.LOT_ID 		= T.LOT_ID
	           AND B.WH_LOC_CD 		= T.WH_LOC_CD
	           AND B.ITEM_SEQ 		= T.ITEM_SEQ
	           AND A.LP_STS_CD IN ('L')) AS LP_CNT
	     , ISNULL((SELECT CI.STRG_SYS_NO 
	               FROM TL_CTRT_CUST_ITEM CI
	                  , TL_WH_ALLC_STRG STRG 
	               WHERE 	CI.CTRT_NO = T.CTRT_NO 
	                	AND CI.ITEM_SYS_NO = T.ITEM_SYS_NO 
	                	AND CI.STRG_SYS_NO = STRG.STRG_SYS_NO
                    	AND STRG.USE_FLG ='Y'), 
			       ISNULL((SELECT STRG.STRG_SYS_NO 
			               FROM (SELECT DENSE_RANK() OVER( ORDER BY S.STRG_CD ASC) RANK_SEQ
			                          , S.* 
			                     FROM TL_WH_ALLC_STRG S WHERE USE_FLG = 'Y'
		                        ) STRG
		                  WHERE STRG.RANK_SEQ = 1), ' ')) AS STRG_SYS_NO  
	FROM (
	        SELECT ROW_NUMBER() OVER(ORDER BY A.CUST_ORD_NO,B.ITEM_CD) AS RN /*화면에서 SEQ한값을 INBOUND_DT앞에 넣어 MERGE효과를 중지시킨다*/
	             , B.RUM
	             , A.WOB_BK_NO
	             , A.WOB_BK_NO AS WOB_BK_NO_ORG
	             , ISNULL(A.CUST_ORD_NO, ' ') AS CUST_ORD_NO
	             , A.CTRT_NO
	             , A.WH_CD
	             , B.SAO_SYS_NO 
	             , B.ITEM_SYS_NO
	             , B.ITEM_SEQ
	             , C.WALC_NO
	             , C.PO_SYS_NO
	             , C.LOT_ID
	             , C.WH_LOC_CD
	             , B.SAO_NO /* PO NO OUT*/
	             , C.WIB_BK_NO
	             , B.ITEM_CD
	             , B.CUST_ITEM_CD
	             , B.ITEM_NM
	             , B.ITEM_PKGQTY  /*ORDER PKGQTY*/
	             , B.ITEM_PKGUNIT /*ORDER PKGUNIT*/
	             , B.ITEM_EA_QTY  /*ORDER EA QTY*/
	             , SUM(ISNULL(C.PICK_ITEM_EA_QTY,0)) OVER ( PARTITION BY B.WOB_BK_NO, B.SAO_SYS_NO, B.ITEM_SYS_NO, B.ITEM_SEQ) AS ALLC_SUM_EA_QTY /*ALLOC*/
	             , dbo.TL_GET_WH_LOC_NM(A.WH_CD, C.WH_LOC_CD) AS  WH_LOC_CD_NM
	             , CAST(ISNULL(C.PICK_ITEM_EA_QTY, 0)as INTEGER) AS ALLC_ITEM_EA_QTY /*Picking*/
	             , ISNULL(C.PICK_ITEM_CBM, B.ITEM_CBM) AS ITEM_CBM
	             , ISNULL(C.PICK_ITEM_CBF, B.ITEM_CBF) AS ITEM_CBF
	             , ISNULL(C.PICK_ITEM_GRS_KGS, B.ITEM_GRS_KGS) AS ITEM_GRS_KGS
	             , ISNULL(C.PICK_ITEM_GRS_LBS, B.ITEM_GRS_LBS) AS ITEM_GRS_LBS
	             , ISNULL(C.PICK_ITEM_NET_KGS, B.ITEM_NET_KGS) AS ITEM_NET_KGS
	             , ISNULL(C.PICK_ITEM_NET_LBS, B.ITEM_NET_LBS) AS ITEM_NET_LBS             
	             , C.PO_NO AS PO_NO_IN
	             , B.INBOUND_DT AS INBOUND_DT_OB
	             , B.LOT_NO AS LOT_NO_OB
	             , B.EXP_DT AS EXP_DT_OB
	             , B.LOT_04 AS LOT_04_OB
	             , B.LOT_05 AS LOT_05_OB
	             , B.RGST_TIMESTAMP
	             , CASE WHEN ISSU_I.WOB_BK_NO IS NOT NULL THEN 'BK' 
	                    WHEN (SELECT COUNT (1)
                      	        FROM TL_WH_LOAD_PLAN LP
		                           , TL_WH_LOAD_PLAN_ITEM LPI
		                       WHERE LP.LP_NO = LPI.LP_NO		                                     
		                         AND A.WOB_BK_NO = LPI.WOB_BK_NO
		                         AND LP.LP_STS_CD = 'L') > 0 THEN 'LP'
			            WHEN (SELECT COUNT (1)
			                    FROM TL_WH_LOAD_PLAN LP
					               , TL_WH_LOAD_PLAN_ITEM LPI
					           WHERE LP.LP_NO = LPI.LP_NO		                                     
					             AND A.WOB_BK_NO = LPI.WOB_BK_NO
					             AND LP.LP_STS_CD = 'P') > 0 THEN 'PL'
					    WHEN ALLC.WALC_NO IS NULL THEN 'I'              
	                    WHEN ALLC.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG = 'Y' THEN 'P'
	                    WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'
	                    ELSE '' END AS BK_STS_CD
	             , ISNULL(ALLC.PICKD_FLG, 'N') AS PICKD_FLG
	          FROM TL_WH_OB A LEFT JOIN (TL_WH_ALLC ALLC LEFT JOIN TL_WH_ISSU ISSU ON ALLC.WALC_NO = ISSU.WALC_NO) ON (A.WOB_BK_NO = ALLC.WOB_BK_NO)
	             , (           
	                 SELECT ROW_NUMBER() OVER(ORDER BY TT.CUST_ORD_NO ASC, TT.WOB_BK_NO ASC, TT.RGST_TIMESTAMP ASC, TT.SAO_SYS_NO ASC, TT.ITEM_SYS_NO ASC, TT.ITEM_SEQ ASC) AS RUM
			              , TT.*
			         FROM (SELECT OB_ITEM.*
			              		 ,AL.PICK_ITEM_EA_QTY
			              		 ,ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO
					       FROM 
					       		TL_WH_OB_ITEM OB_ITEM 
					       		LEFT JOIN
					       			(SELECT AI.WOB_BK_NO, AI.SAO_SYS_NO, AI.ITEM_SYS_NO, AI.ITEM_SEQ
					                      , SUM(AI.PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
                            		 FROM TL_WH_ALLC_ITEM AI
                            		 WHERE 1 = 1                                   
                              		 AND AI.WOB_BK_NO IN (SELECT WOB_BK_NO
                                                     	  FROM TL_WH_WAVE_OB
                                                     	  WHERE WAVE_NO = #wave_no#)
                             		 GROUP BY AI.WOB_BK_NO, AI.SAO_SYS_NO, AI.ITEM_SYS_NO, AI.ITEM_SEQ) AL 
                             	ON( OB_ITEM.WOB_BK_NO = AL.WOB_BK_NO
                                AND OB_ITEM.SAO_SYS_NO = AL.SAO_SYS_NO
                                AND OB_ITEM.ITEM_SYS_NO = AL.ITEM_SYS_NO
                                AND OB_ITEM.ITEM_SEQ = AL.ITEM_SEQ) 
                              , TL_WH_OB OB
                              WHERE 1=1
                                AND OB_ITEM.WOB_BK_NO = OB.WOB_BK_NO
					            AND OB_ITEM.WOB_BK_NO IN (SELECT WOB_BK_NO
					                                      FROM TL_WH_WAVE_OB
					                                      WHERE WAVE_NO = #wave_no#)
					        ) TT
					    <isEqual property="cond_div" compareValue="UN">
					    	/* UnAllocated */	
					    	<![CDATA[ WHERE ISNULL(TT.ITEM_EA_QTY,0) - ISNULL(TT.PICK_ITEM_EA_QTY,0) > 0]]>
					    </isEqual>
			       ) B LEFT JOIN (TL_WH_ALLC_ITEM C LEFT JOIN TL_WH_ISSU_ITEM ISSU_I ON (
	             	       C.WALC_NO     = ISSU_I.WALC_NO
			           AND C.WOB_BK_NO   = ISSU_I.WOB_BK_NO
			           AND C.SAO_SYS_NO  = ISSU_I.SAO_SYS_NO
			           AND C.WIB_BK_NO   = ISSU_I.WIB_BK_NO
			           AND C.PO_SYS_NO   = ISSU_I.PO_SYS_NO
			           AND C.ITEM_SYS_NO = ISSU_I.ITEM_SYS_NO
			           AND C.LOT_ID      = ISSU_I.LOT_ID
			           AND C.WH_LOC_CD   = ISSU_I.WH_LOC_CD
			           AND C.ITEM_SEQ    = ISSU_I.ITEM_SEQ )) ON (
			           	       B.WOB_BK_NO   = C.WOB_BK_NO
				           AND B.SAO_SYS_NO  = C.SAO_SYS_NO
				           AND B.ITEM_SYS_NO = C.ITEM_SYS_NO
				           AND B.ITEM_SEQ    = C.ITEM_SEQ)
	         WHERE A.BK_STS_CD   = 'I'
	           AND A.WOB_BK_NO   = B.WOB_BK_NO
	           AND A.WOB_BK_NO IN (SELECT WOB_BK_NO
	                               FROM TL_WH_WAVE_OB
	                               WHERE WAVE_NO =  #wave_no#)
	        ) T LEFT JOIN TL_CTRT_CUST_ITEM_LOT D ON (T.CTRT_NO = D.CTRT_NO AND T.ITEM_SYS_NO = D.ITEM_SYS_NO AND T.LOT_ID = D.LOT_ID)
	  WHERE 1=1
	  <isEqual property="cond_div" compareValue="ALLCED">
	  	/* Allocated */	
        AND T.WALC_NO IS NOT NULL 
	  </isEqual>
	) TT
	</select>
	
	<select id="searchOutboundSummary" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd06WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchOutboundSummary*/
	SELECT OB.WOB_BK_NO
	     , OB.CUST_ORD_NO
	     , OB.WH_CD
	     , ISNULL(OB.OUTBOUND_PL_QTY,0) AS OUTBOUND_PL_QTY
	     , ISNULL(OB.OUTBOUND_BX_QTY,0) AS OUTBOUND_BX_QTY
	     , ISNULL(OB.OUTBOUND_EA_QTY,0) AS OUTBOUND_EA_QTY
	     , ISNULL(OB.OUTBOUND_SQFT,0) AS OUTBOUND_SQFT
	     , ISNULL(OB.OUTBOUND_CBM,0) AS OUTBOUND_CBM
	     , ISNULL(OB.OUTBOUND_CBF,0) AS OUTBOUND_CBF
	     , ISNULL(OB.OUTBOUND_GRS_KGS,0) AS OUTBOUND_GRS_KGS
	     , ISNULL(OB.OUTBOUND_GRS_LBS,0) AS OUTBOUND_GRS_LBS
	     , ISNULL(OB.OUTBOUND_NET_KGS,0) AS OUTBOUND_NET_KGS
	     , ISNULL(OB.OUTBOUND_NET_LBS,0) AS OUTBOUND_NET_LBS
	 FROM TL_WH_WAVE WV
	     , TL_WH_WAVE_OB WV_BK	     
	     , TL_WH_OB OB
	     , TL_WH_ALLC ALLC
	 WHERE WV.WAVE_NO = WV_BK.WAVE_NO
	   AND WV_BK.WOB_BK_NO = OB.WOB_BK_NO
	   AND OB.WOB_BK_NO = ALLC.WOB_BK_NO
	   AND OB.BK_STS_CD = 'I'
	   AND WV.WAVE_NO = #wave_no#
	 ORDER BY ISNULL(OB.CUST_ORD_NO, ' ') ASC, OB.WOB_BK_NO ASC
	</select>
	
	<select id="searchUnAllocList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.WaveSimpleMgmtUnAllocListVO">
	/*WHOutWaveSimple.searchUnAllocList*/
	SELECT T.*
	     , ISNULL(IT.LV1_CBM, 0) AS LV1_CBM
	     , ISNULL(IT.LV1_CBF, 0) AS LV1_CBF
	     , ISNULL(IT.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
	     , ISNULL(IT.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
	     , ISNULL(IT.LV1_NET_KGS, 0) AS LV1_NET_KGS
	     , ISNULL(IT.LV1_NET_LBS, 0) AS LV1_NET_LBS
	     , ISNULL(IT.PKG_LV1_QTY, 0) AS PKG_LV1_QTY
	     , ROW_NUMBER() OVER (PARTITION BY T.CUST_ORD_NO + T.WOB_BK_NO ORDER BY T.CUST_ORD_NO ASC, T.WOB_BK_NO ASC, T.RGST_TIMESTAMP ASC, T.SAO_SYS_NO ASC, T.ITEM_SYS_NO ASC, T.ITEM_SEQ ASC) AS RN
	  FROM (
			SELECT ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO		
			     , OB_I.WOB_BK_NO
			     , ALLC.WALC_NO
			     , OB_I.SAO_SYS_NO
			     , OB_I.ITEM_SYS_NO
			     , OB_I.ITEM_SEQ
			     , (OB_I.ITEM_EA_QTY - ISNULL(ALLC_I.EAQTY,0)) AS UN_ALLOC_EA_QTY
			     , OB_I.SAO_NO
			     , OB_I.ITEM_CD
			     , OB_I.CUST_ITEM_CD
			     , OB_I.ITEM_NM
			     , OB_I.INBOUND_DT
			     , OB_I.LOT_NO
			     , OB_I.EXP_DT
			     , OB_I.LOT_04
			     , OB_I.LOT_05
			     , OB_I.LIC_PLAT_NO
			     , OB_I.ITEM_SER_NO
			     , OB_I.PO_NO
			     , OB.CTRT_NO
			     , OB.WH_CD
			     , OB_I.FIX_LOT_ID
			     , OB_I.RGST_TIMESTAMP
			     , OB_I.FIX_LOC_CD
			     , OB.SRC_CD
			     , OB_I.REF_WIB_BK_NO
			     , OB_I.REF_PO_SYS_NO
			     , OB_I.REF_ITEM_SEQ
			  FROM TL_WH_OB OB
			     , TL_WH_OB_ITEM OB_I LEFT JOIN
			     	(SELECT A.WOB_BK_NO, A.SAO_SYS_NO, A.ITEM_SYS_NO, A.ITEM_SEQ
			        ,SUM(PICK_ITEM_EA_QTY) AS EAQTY
			         FROM TL_WH_ALLC_ITEM A
			         WHERE 1 = 1	
			         	AND A.WOB_BK_NO IN (SELECT WOB_BK_NO
			                             	FROM TL_WH_WAVE_OB
			                             	WHERE WAVE_NO =  #wave_no#)
			         GROUP BY A.WOB_BK_NO, A.SAO_SYS_NO, A.ITEM_SYS_NO, A.ITEM_SEQ
			       	) ALLC_I ON (OB_I.WOB_BK_NO = ALLC_I.WOB_BK_NO AND OB_I.SAO_SYS_NO = ALLC_I.SAO_SYS_NO AND OB_I.ITEM_SYS_NO = ALLC_I.ITEM_SYS_NO AND OB_I.ITEM_SEQ = ALLC_I.ITEM_SEQ )
			     LEFT JOIN TL_WH_ALLC ALLC ON (OB_I.WOB_BK_NO   = ALLC.WOB_BK_NO)
			 WHERE OB.WOB_BK_NO = OB_I.WOB_BK_NO
	           AND OB_I.WOB_BK_NO IN (SELECT WOB_BK_NO
	                                 FROM TL_WH_WAVE_OB
	                                 WHERE WAVE_NO =  #wave_no#)    
	           AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y'      
	           AND NOT EXISTS (SELECT 'X' FROM TL_WH_ISSU X WHERE X.WALC_NO = ALLC.WALC_NO )
			   AND NOT EXISTS (SELECT 'X' FROM TL_WH_LOAD_PLAN_ITEM X WHERE X.WOB_BK_NO = OB.WOB_BK_NO)
			   AND (OB_I.ITEM_EA_QTY - ISNULL(ALLC_I.EAQTY,0)) != 0
		   ) T LEFT JOIN TL_CTRT_CUST_ITEM IT ON (T.CTRT_NO = IT.CTRT_NO AND T.ITEM_SYS_NO = IT.ITEM_SYS_NO)
	 WHERE 1=1
	 ORDER BY T.CUST_ORD_NO ASC, T.WOB_BK_NO ASC, T.RGST_TIMESTAMP ASC, T.SAO_SYS_NO ASC, T.ITEM_SYS_NO ASC, T.ITEM_SEQ ASC
	</select>
	
	<select id="searchUnAllocListPartial" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.WaveSimpleMgmtUnAllocListVO">
	/*WHOutWaveSimple.searchUnAllocListPartial*/
	SELECT T.*
	     , ISNULL(IT.LV1_CBM, 0) AS LV1_CBM
	     , ISNULL(IT.LV1_CBF, 0) AS LV1_CBF
	     , ISNULL(IT.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
	     , ISNULL(IT.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
	     , ISNULL(IT.LV1_NET_KGS, 0) AS LV1_NET_KGS
	     , ISNULL(IT.LV1_NET_LBS, 0) AS LV1_NET_LBS
	     , ISNULL(IT.PKG_LV1_QTY, 0) AS PKG_LV1_QTY
	     , ROW_NUMBER() OVER (PARTITION BY T.CUST_ORD_NO + T.WOB_BK_NO ORDER BY T.CUST_ORD_NO ASC, T.WOB_BK_NO ASC, T.RGST_TIMESTAMP ASC, T.SAO_SYS_NO ASC, T.ITEM_SYS_NO ASC, T.ITEM_SEQ ASC) AS RN
	FROM (
			SELECT ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO		
			     , OB_I.WOB_BK_NO
			     , ALLC.WALC_NO
			     , OB_I.SAO_SYS_NO
			     , OB_I.ITEM_SYS_NO
			     , OB_I.ITEM_SEQ
			     , (OB_I.ITEM_EA_QTY - ISNULL(ALLC_I.EAQTY,0)) AS UN_ALLOC_EA_QTY
			     , OB_I.SAO_NO
			     , OB_I.ITEM_CD
			     , OB_I.CUST_ITEM_CD
			     , OB_I.ITEM_NM
			     , OB_I.INBOUND_DT
			     , OB_I.LOT_NO
			     , OB_I.EXP_DT
			     , OB_I.LOT_04
			     , OB_I.LOT_05
			     , OB_I.LIC_PLAT_NO
			     , OB_I.ITEM_SER_NO
			     , OB_I.PO_NO
			     , OB.CTRT_NO
			     , OB.WH_CD
			     , OB_I.FIX_LOT_ID
			     , OB_I.RGST_TIMESTAMP
			     , OB_I.FIX_LOC_CD
			     , OB.SRC_CD
			     , OB_I.REF_WIB_BK_NO
			     , OB_I.REF_PO_SYS_NO
			     , OB_I.REF_ITEM_SEQ
			  FROM TL_WH_OB OB
			     , TL_WH_OB_ITEM OB_I LEFT JOIN
			     	(SELECT A.WOB_BK_NO, A.SAO_SYS_NO, A.ITEM_SYS_NO, A.ITEM_SEQ
			             , SUM(PICK_ITEM_EA_QTY) AS EAQTY
			          FROM TL_WH_ALLC_ITEM A
			         WHERE A.WOB_BK_NO    = #wob_bk_no#
	                   AND A.SAO_SYS_NO   = #sao_sys_no#
	                   AND A.ITEM_SYS_NO  = #item_sys_no#
	                   AND A.ITEM_SEQ     = #item_seq#
			         GROUP BY A.WOB_BK_NO, A.SAO_SYS_NO, A.ITEM_SYS_NO, A.ITEM_SEQ
			       ) ALLC_I ON (OB_I.WOB_BK_NO = ALLC_I.WOB_BK_NO AND OB_I.SAO_SYS_NO = ALLC_I.SAO_SYS_NO AND OB_I.ITEM_SYS_NO = ALLC_I.ITEM_SYS_NO AND OB_I.ITEM_SEQ = ALLC_I.ITEM_SEQ)
			     LEFT JOIN TL_WH_ALLC ALLC ON (OB_I.WOB_BK_NO = ALLC.WOB_BK_NO)
			 WHERE OB.WOB_BK_NO = OB_I.WOB_BK_NO
	           AND OB_I.WOB_BK_NO    = #wob_bk_no#
	           AND OB_I.SAO_SYS_NO   = #sao_sys_no#
	           AND OB_I.ITEM_SYS_NO  = #item_sys_no#
	           AND OB_I.ITEM_SEQ     = #item_seq#
	           AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y'      
	           AND NOT EXISTS (SELECT 'X' FROM TL_WH_ISSU X WHERE X.WALC_NO = ALLC.WALC_NO )
			   AND NOT EXISTS (SELECT 'X' FROM TL_WH_LOAD_PLAN_ITEM X WHERE X.WOB_BK_NO = OB.WOB_BK_NO)
			   AND (OB_I.ITEM_EA_QTY - ISNULL(ALLC_I.EAQTY,0)) != 0
		   ) T LEFT JOIN TL_CTRT_CUST_ITEM IT ON (T.CTRT_NO = IT.CTRT_NO AND T.ITEM_SYS_NO = IT.ITEM_SYS_NO)
	WHERE 1=1
	ORDER BY T.CUST_ORD_NO ASC, T.WOB_BK_NO ASC, T.RGST_TIMESTAMP ASC, T.SAO_SYS_NO ASC, T.ITEM_SYS_NO ASC, T.ITEM_SEQ ASC
	</select>
	<select id="searchWHAllcStrgList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.WHAllcStrgVO">
	/*WHStrg.searchWHAllcStrgList*/
	SELECT STRG_SYS_NO
	     , STRG_CD
	     , STRG_RMK
	     , LOT_PRI_01
	     , LOT_PRI_01_SORT
	     , LOT_PRI_02
	     , LOT_PRI_02_SORT
	     , LOT_PRI_03
	     , LOT_PRI_03_SORT
	     , LOT_PRI_04
	     , LOT_PRI_04_SORT
	     , LOT_PRI_05
	     , LOT_PRI_05_SORT
	     , LOC_PUT_TP_CD
	     , LOC_SPACE_TP_CD
	     , LOC_PRI
	     , LOC_PRI_SORT
	     , USE_FLG
	FROM TL_WH_ALLC_STRG
	WHERE 1=1
	<isNotNull property="strg_cd">
		<isNotEmpty property="strg_cd">
			AND STRG_CD = #strg_cd#
		</isNotEmpty>
	</isNotNull>
	<isNotNull property="use_flg">
		<isNotEmpty property="use_flg">
			<isNotEqual property="use_flg" compareValue="ALL">
				AND USE_FLG = #use_flg#
			</isNotEqual>
		</isNotEmpty>
	</isNotNull>
	<isNotNull property="strg_sys_no">
		<isNotEmpty property="strg_sys_no">
			AND STRG_SYS_NO = #strg_sys_no#
		</isNotEmpty>
	</isNotNull>
	ORDER BY STRG_CD ASC        
	</select>	
	<select id="searchWalcNoCnt" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchWalcNoCnt*/
		SELECT COUNT(*)
	  	FROM TL_WH_ALLC
	 	WHERE WALC_NO = #walc_no#
	</select>
	
	<insert id="saveWhAllc">
	/*WHOutWaveSimple.saveWhAllc*/
	INSERT INTO TL_WH_ALLC
	     ( WALC_NO
	     , WOB_BK_NO
	     , PICKD_FLG
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	VALUES
	     ( #walc_no#
	     , #wob_bk_no#
	     , 'N'
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	     )
	</insert>
	<select id="searchPickShtDup" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchPickShtDup*/
	SELECT 'Y' AS DUP_YN
	FROM TL_WH_PICK_SHT
	WHERE WALC_NO = #walc_no#
	</select>	
	<insert id="saveWhPickShtForWaveCopy">
	/*WHOutWaveSimple.saveWhPickShtForWaveCopy*/
	INSERT INTO TL_WH_PICK_SHT
	     ( WALC_NO
	     , SUPV_NM
	     , OUTBOUND_LOC_CD
	     , GATE_NO
	     , PICK_BY
	     , PICK_DT
	     , PICK_HM_FR
	     , PICK_HM_TO
	     , MSG_TO_PICK
	     , INSP_BY
	     , INSP_HM_FR
	     , INSP_HM_TO
	     , MSG_TO_INSP
	     , LOAD_BY
	     , LOAD_HM_FR
	     , LOAD_HM_TO
	     , LOAD_DT
	     , MSG_TO_LOAD
	     , OUTBOUND_DT
	     , OUTBOUND_HM_FR
	     , OUTBOUND_HM_TO
	     , GATE_IN_HM
	     , GATE_OUT_HM
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	SELECT #walc_no#
	     , PS.SUPV_NM
	     , WV.OUTBOUND_LOC_CD
	     , WV.GATE_NO
	     , PS.PICK_BY
	     , WV.PICK_DT
	     , WV.PICK_HM_FR
	     , WV.PICK_HM_TO
	     , PS.MSG_TO_PICK
	     , PS.INSP_BY
	     , PS.INSP_HM_FR
	     , PS.INSP_HM_TO
	     , PS.MSG_TO_INSP
	     , PS.LOAD_BY
	     , WV.LOAD_HM_FR
	     , WV.LOAD_HM_TO
	     , WV.LOAD_DT
	     , PS.MSG_TO_LOAD
	     , CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
	     , #outbound_hm_fr#
	     , #outbound_hm_to#
	     , PS.GATE_IN_HM
	     , PS.GATE_OUT_HM	     
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	FROM TL_WH_WAVE WV LEFT JOIN 
	     (SELECT TOP 1
	    		 WO.WAVE_NO
	           , PS.*
	        FROM TL_WH_WAVE_OB WO
	           , TL_WH_ALLC AL
	           , TL_WH_PICK_SHT PS
	       WHERE WO.WOB_BK_NO = AL.WOB_BK_NO
	         AND AL.WALC_NO = PS.WALC_NO
	         AND WO.WAVE_NO = #wave_no#
	     ) PS ON (WV.WAVE_NO = PS.WAVE_NO)
	WHERE 1=1
	AND WV.WAVE_NO = #wave_no#                 
	</insert>	
	
	<select id="searchAllcItemDup" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchAllcItemDup*/
	SELECT 'Y' AS DUP_YN
	FROM TL_WH_ALLC_ITEM
	WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO   = #wob_bk_no#
	   AND SAO_SYS_NO  = #sao_sys_no#
	   AND WIB_BK_NO   = #wib_bk_no#
	   AND PO_SYS_NO   = #po_sys_no#
	   AND ITEM_SYS_NO = #item_sys_no#
	   AND LOT_ID      = #lot_id#
	   AND WH_LOC_CD   = #wh_loc_cd#
	   AND ITEM_SEQ    = #item_seq#
	   AND ISNULL(LIC_PLAT_NO,'')    = ISNULL(#lic_plat_no#,'')
	   AND ISNULL(ITEM_SER_NO,'')    = ISNULL(#item_ser_no#,'')
	   AND ISNULL(PO_NO,'')    = ISNULL(#po_no#,'')
	</select>
	
	<select id="searchAllcStockCheck" resultClass="java.lang.String">
	/*WHOutAllcation.searchAllcStockCheck*/
	SELECT IN_QTY - ISNULL(ALLC_QTY, 0) AS REAL_STOCK
	FROM TL_WH_INV_LOC
	WHERE WIB_bK_NO		= #wib_bk_no#
	  AND PO_SYS_NO     = #po_sys_no#
	  AND ITEM_SYS_NO   = #item_sys_no#
	  AND LOT_ID        = #lot_id#
	  AND WH_LOC_CD     = #wh_loc_cd#
	</select>
	
	<insert id="saveWhAllcItem">
	/*WHOutWaveSimple.saveWhAllcItem*/
	INSERT INTO TL_WH_ALLC_ITEM
	     ( WALC_NO
	     , WOB_BK_NO
	     , SAO_SYS_NO
	     , WIB_BK_NO
	     , PO_SYS_NO
	     , ITEM_SYS_NO
	     , LOT_ID
	     , WH_LOC_CD
	     , ITEM_SEQ
	     , SAO_NO
	     , PO_NO
	     , ITEM_CD
	     , CUST_ITEM_CD
	     , ITEM_NM
	     , PICK_ITEM_EA_QTY
	     , PICK_ITEM_CBM
	     , PICK_ITEM_CBF
	     , PICK_ITEM_GRS_KGS
	     , PICK_ITEM_GRS_LBS
	     , PICK_ITEM_NET_KGS
	     , PICK_ITEM_NET_LBS
	     , TRUCKER_CD
	     , TRUCKER_NM
	     , EQ_TPSZ_CD
	     , EQ_NO
	     , SEAL_NO
	     , DLV_ORD_NO
	     , DLV_ORD_SEQ
	     , GATE_NO
         , OUTBOUND_LOC_CD
         , GATE_IN_HM
         , GATE_OUT_HM
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     , RGST_TIMESTAMP
	     , LIC_PLAT_NO
	     , ITEM_SER_NO
	     , INV_ITEM_SEQ
	     )
	SELECT #walc_no#
	     , #wob_bk_no#
	     , #sao_sys_no#
	     , #wib_bk_no#
	     , #po_sys_no#
	     , #item_sys_no#
	     , #lot_id#
	     , #wh_loc_cd#
	     , #item_seq#
	     , #sao_no#
	     , #po_no#
	     , #item_cd#
	     , #cust_item_cd#
	     , #item_nm#
	     , (SELECT ISNULL(CONVERT(NUMERIC(15,3), CAST(#pick_qty# AS FLOAT)), 0))
		 , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_cbm# AS FLOAT)), 0))))))
	     , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_cbf# AS FLOAT)), 0))))))
	     , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_grs_kgs# AS FLOAT)), 0))))))
	     , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_grs_lbs# AS FLOAT)), 0))))))
	     , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_net_kgs# AS FLOAT)), 0))))))
	     , (SELECT(CONVERT(NUMERIC (15, 5),((SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(NUMERIC(15,5), CAST(#lv1_net_lbs# AS FLOAT)), 0))))))
	     , OB.TRUCKER_CD
	     , OB.TRUCKER_NM
	     , OB.EQ_TPSZ_CD
	     , OB.EQ_NO
	     , OB.SEAL_NO
	     , OB.DLV_ORD_NO
	     , NULL
	     , (SELECT GATE_NO FROM TL_WH_PICK_SHT WHERE WALC_NO = #walc_no#)
	     , (SELECT OUTBOUND_LOC_CD FROM TL_WH_PICK_SHT WHERE WALC_NO = #walc_no#)
	     , (SELECT GATE_IN_HM FROM TL_WH_PICK_SHT WHERE WALC_NO = #walc_no#)
	     , (SELECT GATE_OUT_HM FROM TL_WH_PICK_SHT WHERE WALC_NO = #walc_no#)
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , GETDATE()
	     ,(SELECT SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(SYSDATETIMEOFFSET(),'-',''),' ',''),':',''),'.',''),'+',''),0,21))
	     ,#lic_plat_no#
	     ,#item_ser_no#
	     ,#inv_item_seq#
	FROM TL_WH_OB OB	     	         
	WHERE OB.WOB_BK_NO = #wob_bk_no#
	</insert>
	
	<select id="searchConsolNoForWaveSimple" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchConsolNoForWaveSimple*/
	SELECT DISTINCT(MAX(CONSOL_NO)) AS ORG_CONSOL_NO
    FROM TL_WH_PSUDO_LP_SHIP
    WHERE WOB_BK_NO IN (
    	SELECT WOB_BK_NO
      	FROM TL_WH_WAVE_OB
     	WHERE WAVE_NO = #wave_no#)
	</select>
	<update id="removeWhLoadPlanItemFileRepForWaveSimple">
	/*WHOutWaveSimple.removeWhLoadPlanItemFileRepForWaveSimple*/
	DELETE FROM TL_WH_LOAD_PLAN_ITEM_FILE_REP
	WHERE LP_NO               = #lp_no#
	   AND WOB_BK_NO          = #wob_bk_no#
	   AND SAO_SYS_NO         = #sao_sys_no#
	   AND WIB_BK_NO          = #wib_bk_no#
	   AND PO_SYS_NO          = #po_sys_no#
	   AND ITEM_SYS_NO        = #item_sys_no#
	   AND LOT_ID             = #lot_id#
	   AND WH_LOC_CD          = #wh_loc_cd#
	   AND ITEM_SEQ           = #item_seq#
	</update>
	<update id="removeWhLoadPlanItemForWaveSimple">
	/*WHOutWaveSimple.removeWhLoadPlanItemForWaveSimple*/
	DELETE FROM TL_WH_LOAD_PLAN_ITEM
	WHERE LP_NO               = #lp_no#
	   AND WOB_BK_NO          = #wob_bk_no#
	   AND SAO_SYS_NO         = #sao_sys_no#
	   AND WIB_BK_NO          = #wib_bk_no#
	   AND PO_SYS_NO          = #po_sys_no#
	   AND ITEM_SYS_NO        = #item_sys_no#
	   AND LOT_ID             = #lot_id#
	   AND WH_LOC_CD          = #wh_loc_cd#
	   AND ITEM_SEQ           = #item_seq#
	</update>
	<delete id="removeWhLoadPlanForWaveSimple">
	/*WHOutWaveSimple.removeWhLoadPlanForWaveSimple*/
	DELETE FROM TL_WH_LOAD_PLAN
    WHERE LP_NO = #lp_no#
    	AND NOT EXISTS (SELECT 'X' 
                        FROM TL_WH_LOAD_PLAN_ITEM IT,TL_WH_LOAD_PLAN PL
                        WHERE PL.LP_NO = IT.LP_NO
                        AND PL.LP_NO = #lp_no#
                      )
	</delete>
	<select id="searchCountLpPsudoLpShipWobBk" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchCountLpPsudoLpShipWobBk*/
	SELECT '1' AS CNT
	FROM TL_WH_PSUDO_LP_SHIP
	WHERE CONSOL_NO = #consol_no#
	   AND WOB_BK_NO =#wob_bk_no#
	</select>
	<update id="modifyAllocPickingFlagNoUsed">
	/*WHOutWaveSimple.modifyAllocPickingFlagNoUsed*/
	UPDATE TL_WH_ALLC
	SET PICKD_FLG = 'N'
	WHERE WALC_NO IN($in_no$)
	  AND ISNULL(PICKD_FLG, 'N') = 'Y'
	  AND (SELECT SUM(ISNULL(PICKD_ITEM_EA_QTY,0))
	       FROM TL_WH_ALLC_ITEM ALLC_I,TL_WH_ALLC ALLC
	       WHERE ALLC.WALC_NO = ALLC_I.WALC_NO
	       	AND ALLC.WALC_NO IN ($in_no$)
	      ) = 0
	</update>
	<update id="modifyAllocPickingAllocItem" >
	/*WHOutWaveSimple.modifyAllocPickingAllocItem*/
	UPDATE TL_WH_ALLC_ITEM
	   SET PICKD_ITEM_CBM     = #item_cbm#
	     , PICKD_ITEM_CBF     = #item_cbf#
	     , PICKD_ITEM_GRS_KGS = #item_grs_kgs#
	     , PICKD_ITEM_GRS_LBS = #item_grs_lbs#
	     , PICKD_ITEM_NET_KGS = #item_net_kgs#
	     , PICKD_ITEM_NET_LBS = #item_net_lbs#
	     , TRUCKER_CD         = #trucker_cd#
	     , TRUCKER_NM         = #trucker_nm#
         , EQ_TPSZ_CD         = #eq_tpsz_cd#
         , EQ_NO              = #eq_no#
         , SEAL_NO            = #seal_no#
         <isNotEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_NO         = #dlv_ord_no#
         </isNotEqual>
         <isEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_SEQ          = CASE #tro_seq# WHEN '' THEN NULL ELSE #tro_seq# END
         </isEqual>
	     , MODI_ID = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = GETDATE()
	 WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO    = #wob_bk_no#
	   AND SAO_SYS_NO   = #sao_sys_no#
	   AND ITEM_SYS_NO  = #item_sys_no#
	   AND LOT_ID       = #lot_id#
	   AND ITEM_SEQ     = #item_seq#
	   <isNotEmpty property="wib_bk_no">
			AND WIB_BK_NO	= #wib_bk_no#
	   </isNotEmpty>
	   <isNotEmpty property="po_sys_no">
			AND PO_SYS_NO    = #po_sys_no#
	   </isNotEmpty>
	   <isNotEmpty property="wh_loc_cd">
			AND WH_LOC_CD    = #wh_loc_cd#
	   </isNotEmpty>
	   <isNotEmpty property="lic_plat_no">
			AND ISNULL(LIC_PLAT_NO,'')	= ISNULL(#lic_plat_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="item_ser_no">
			AND ISNULL(ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="po_no_in">
			AND ISNULL(PO_NO,'')	= ISNULL(#po_no_in#,'')
	   </isNotEmpty>
	</update>
	<update id="modifyAllcMgmt" >
	/*WHOutWaveSimple.modifyAllcMgmt*/
	UPDATE TL_WH_ALLC_ITEM
	   SET PICK_ITEM_CBM     = #item_cbm#
	     , PICK_ITEM_CBF     = #item_cbf#
	     , PICK_ITEM_GRS_KGS = #item_grs_kgs#
	     , PICK_ITEM_GRS_LBS = #item_grs_lbs#
	     , PICK_ITEM_NET_KGS = #item_net_kgs#
	     , PICK_ITEM_NET_LBS = #item_net_lbs#
	     , TRUCKER_CD        = #trucker_cd#
	     , TRUCKER_NM        = #trucker_nm#
         , EQ_TPSZ_CD        = #eq_tpsz_cd#
         , EQ_NO             = #eq_no#
         , SEAL_NO           = #seal_no#
         <isNotEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_NO        = #dlv_ord_no#
         </isNotEqual>
         <isEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_SEQ       = CASE #tro_seq# WHEN '' THEN NULL ELSE #tro_seq# END
         </isEqual>
	     , MODI_ID           = #modi_id#
	     , MODI_OFC_CD       = #modi_ofc_cd#
	     , MODI_SYS_DT       = GETDATE()
	     , MODI_LOC_DT       = GETDATE()
	 WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO    = #wob_bk_no#
	   AND SAO_SYS_NO   = #sao_sys_no#
	   AND WIB_BK_NO	= #wib_bk_no#
	   AND PO_SYS_NO    = #po_sys_no#
	   AND ITEM_SYS_NO  = #item_sys_no#
	   AND LOT_ID       = #lot_id#
	   AND WH_LOC_CD    = #wh_loc_cd#
	   AND ITEM_SEQ     = #item_seq#    
	</update>
	<update id="modifyWhPsudoLpShipForWaveSimplCargo">
	/*WHOutWaveSimple.modifyWhPsudoLpShipForWaveSimplCargo*/
	UPDATE TL_WH_PSUDO_LP_SHIP
	   SET LP_ITEM_CBM      = #item_cbm#
         , LP_ITEM_CBF      = #item_cbf#
         , LP_ITEM_GRS_KGS  = #item_grs_kgs# 
         , LP_ITEM_GRS_LBS  = #item_grs_lbs# 
         , LP_ITEM_NET_KGS  = #item_net_kgs# 
         , LP_ITEM_NET_LBS  = #item_net_lbs#         
         , TRUCKER_CD       = #trucker_cd#
         , TRUCKER_NM       = #trucker_nm#
         , EQ_NO            = #eq_no#
         , SEAL_NO          = #seal_no#
         <isNotEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_NO       = #dlv_ord_no#
         </isNotEqual>
         <isEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_SEQ      = CASE  #tro_seq#  WHEN ''  THEN  NULL  ELSE #tro_seq#  END
         </isEqual>
		 <isNotEqual property="no_shipping" compareValue="Y">
		 , OUTBOUND_DT      = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
         , OUT_PE_QTY       = #out_pe_qty#
         , LOAD_ITEM_EA_QTY = #ship_item_ea_qty# 
		 </isNotEqual>
		<isEmpty property="lp_id">
		, EQ_TPSZ_CD       = #eq_tpsz_cd#  
		</isEmpty>
	     , MODI_ID          = #modi_id#
	     , MODI_OFC_CD      = #modi_ofc_cd#
	     , MODI_SYS_DT      = GETDATE()
	     , MODI_LOC_DT      = GETDATE()
	 WHERE CONSOL_NO        = #consol_no#
	   AND SHIPNO           = #shipno#
	   AND SHIPNO_SEQ	    = #shipno_seq#
	</update>
	<update id="modifyWhLoadPlanItemForWaveSimple">
	/*WHOutWaveSimple.modifyWhLoadPlanItemForWaveSimple*/
	UPDATE TL_WH_LOAD_PLAN_ITEM
		SET LOAD_ITEM_CBM      = #item_cbm#
		, LOAD_ITEM_CBF        = #item_cbf#
		, LOAD_ITEM_GRS_KGS    = #item_grs_kgs#
		, LOAD_ITEM_GRS_LBS    = #item_grs_lbs#
		, LOAD_ITEM_NET_KGS    = #item_net_kgs#
		, LOAD_ITEM_NET_LBS    = #item_net_lbs#
		<isNotEqual property="no_shipping" compareValue="Y">
		, OUT_PE_QTY		   = #out_pe_qty#
		, LOAD_ITEM_EA_QTY     = #ship_item_ea_qty#
		</isNotEqual>
		, MODI_ID              = #modi_id#
		, MODI_OFC_CD          = #modi_ofc_cd#
		, MODI_SYS_DT          = GETDATE()
		, MODI_LOC_DT          = GETDATE()
	WHERE LP_NO                = #lp_no# 
		AND WOB_BK_NO          = #wob_bk_no#
		AND SAO_SYS_NO         = #sao_sys_no#
		AND WIB_BK_NO          = #wib_bk_no#
		AND PO_SYS_NO          = #po_sys_no#
		AND ITEM_SYS_NO        = #item_sys_no#
		AND LOT_ID             = #lot_id#
		AND WH_LOC_CD          = #wh_loc_cd#
		AND ITEM_SEQ           = #item_seq#
		AND ISNULL(LIC_PLAT_NO,'')	= ISNULL(#lic_plat_no#,'')
		AND ISNULL(ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
		AND ISNULL(PO_NO,'')		= ISNULL(#po_no_in#,'')
	</update>
	<update id="modifyWhPsudoLpShipItemForWaveSimple">
	/*WHOutWaveSimple.modifyWhPsudoLpShipItemForWaveSimple*/
	MERGE 
	 INTO TL_WH_PSUDO_LP_SHIP A
	USING (SELECT LP.CONSOL_NO, LP.LP_ID, LP.LP_SEQ , LP.LP_NO
	            , IT.WOB_BK_NO, IT.SAO_SYS_NO, IT.WIB_BK_NO, IT.PO_SYS_NO, IT.ITEM_SYS_NO, IT.LOT_ID, IT.WH_LOC_CD, IT.ITEM_SEQ, IT.LIC_PLAT_NO, IT.ITEM_SER_NO, IT.PO_NO
	         FROM TL_WH_LOAD_PLAN LP
	            , TL_WH_LOAD_PLAN_ITEM IT
	        WHERE LP.LP_NO = #lp_no#
	          AND LP.LP_NO              = IT.LP_NO
	          AND IT.WOB_BK_NO          = #wob_bk_no#
		      AND IT.SAO_SYS_NO         = #sao_sys_no#
		      AND IT.WIB_BK_NO          = #wib_bk_no#
		      AND IT.PO_SYS_NO          = #po_sys_no#
		      AND IT.ITEM_SYS_NO        = #item_sys_no#
		      AND IT.LOT_ID             = #lot_id#
		      AND IT.WH_LOC_CD          = #wh_loc_cd#
		      AND IT.ITEM_SEQ           = #item_seq#
	       ) B
	   ON (    A.CONSOL_NO = B.CONSOL_NO
	       AND A.LP_ID = B.LP_ID
	       AND A.LP_SEQ = B.LP_SEQ
	       AND A.WOB_BK_NO          = B.WOB_BK_NO
		   AND A.SAO_SYS_NO         = B.SAO_SYS_NO
		   AND A.WIB_BK_NO          = B.WIB_BK_NO
		   AND A.PO_SYS_NO          = B.PO_SYS_NO
		   AND A.ITEM_SYS_NO        = B.ITEM_SYS_NO
		   AND A.LOT_ID             = B.LOT_ID
		   AND A.WH_LOC_CD          = B.WH_LOC_CD
		   AND A.ITEM_SEQ           = B.ITEM_SEQ
		   AND ISNULL(A.LIC_PLAT_NO,'')		= ISNULL(B.LIC_PLAT_NO,'')
		   AND ISNULL(A.ITEM_SER_NO,'')		= ISNULL(B.ITEM_SER_NO,'')
		   AND ISNULL(A.PO_NO,'')		= ISNULL(B.PO_NO,'')
	      )
	 WHEN MATCHED THEN
	      UPDATE 
	         SET LP_ITEM_CBM      = #item_cbm#
		       , LP_ITEM_CBF      = #item_cbf#
		       , LP_ITEM_GRS_KGS  = #item_grs_kgs#
		       , LP_ITEM_GRS_LBS  = #item_grs_lbs#
		       , LP_ITEM_NET_KGS  = #item_net_kgs#
		       , LP_ITEM_NET_LBS  = #item_net_lbs#
		       <isNotEqual property="no_shipping" compareValue="Y">
		       , OUT_PE_QTY		  = #out_pe_qty#
		       , LOAD_ITEM_EA_QTY = #ship_item_ea_qty#
		       </isNotEqual>
		       , MODI_ID          = #modi_id#
		       , MODI_OFC_CD      = #modi_ofc_cd#
		       , MODI_SYS_DT      = GETDATE()
		       , MODI_LOC_DT      = GETDATE() ;
	</update>
	<update id="modifyAllocShippingAllocItem" >
	/*WHOutWaveSimple.modifyAllocShippingAllocItem*/
	UPDATE TL_WH_LOAD_PLAN_ITEM
	   SET LOAD_ITEM_CBM      = #item_cbm#
	     , LOAD_ITEM_CBF      = #item_cbf#
	     , LOAD_ITEM_GRS_KGS  = #item_grs_kgs#
	     , LOAD_ITEM_GRS_LBS  = #item_grs_lbs#
	     , LOAD_ITEM_NET_KGS  = #item_net_kgs#
	     , LOAD_ITEM_NET_LBS  = #item_net_lbs#
	     , MODI_ID            = #modi_id#
	     , MODI_OFC_CD        = #modi_ofc_cd#
	     , MODI_SYS_DT        = GETDATE()
	     , MODI_LOC_DT        = GETDATE()
	 WHERE LP_NO              = #lp_no# 
	   AND WOB_BK_NO          = #wob_bk_no#
	   AND SAO_SYS_NO         = #sao_sys_no#
	   AND WIB_BK_NO          = #wib_bk_no#
	   AND PO_SYS_NO          = #po_sys_no#
	   AND ITEM_SYS_NO        = #item_sys_no#
	   AND LOT_ID             = #lot_id#
	   AND WH_LOC_CD          = #wh_loc_cd#
	   AND ITEM_SEQ           = #item_seq#
	</update>
	<update id="modifyWhLoadPlanForWaveSimple">
	/*WHOutWaveSimple.modifyWhLoadPlanForWaveSimple*/
	UPDATE TL_WH_LOAD_PLAN
	   SET EQ_NO          = #eq_no#
	     , SEAL_NO        = #seal_no#
	     , TRUCKER_CD     = #trucker_cd#
         , TRUCKER_NM     = #trucker_nm#
         <isNotEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_NO     = #dlv_ord_no#
         </isNotEqual>
          <isNotEqual property="no_shipping" compareValue="Y">
         , OUTBOUND_DT    = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
         </isNotEqual>
	     , MODI_ID        = #modi_id#
	     , MODI_OFC_CD    = #modi_ofc_cd#
	     , MODI_SYS_DT    = GETDATE()
	     , MODI_LOC_DT    = GETDATE()
	 WHERE LP_NO          = #lp_no#
	</update>
	<update id="modifyWhPsudoLpShipHeaderForWaveSimple">
	/*WHOutWaveSimple.modifyWhPsudoLpShipHeaderForWaveSimple*/
	MERGE 
	INTO TL_WH_PSUDO_LP_SHIP A
	USING (SELECT LP.CONSOL_NO, LP.LP_ID, LP.LP_SEQ , LP.LP_NO	           
	         FROM TL_WH_LOAD_PLAN LP
	        WHERE LP.LP_NO = #lp_no#
	       ) B
	   ON (    A.CONSOL_NO = B.CONSOL_NO
	       AND A.LP_ID = B.LP_ID
	       AND A.LP_SEQ = B.LP_SEQ
	      )
	 WHEN MATCHED THEN
	      UPDATE 
	         SET EQ_NO          = #eq_no#
	           , SEAL_NO        = #seal_no#
	           , TRUCKER_CD     = #trucker_cd#
               , TRUCKER_NM     = #trucker_nm#
               <isNotEqual property="tro_flg" compareValue="Y">
		       , DLV_ORD_NO     = #dlv_ord_no#
		       </isNotEqual>
		       <isNotEqual property="no_shipping" compareValue="Y">
		       , OUTBOUND_DT    = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
		       </isNotEqual>
		       , MODI_ID        = #modi_id#
		       , MODI_OFC_CD    = #modi_ofc_cd#
		       , MODI_SYS_DT    = GETDATE()
		       , MODI_LOC_DT    = GETDATE()
		       ;
	</update>
	<update id="modifyWhPsudoLpGrpForWaveSimple">
	/*WHOutWaveSimple.modifyWhPsudoLpGrpForWaveSimple*/
	MERGE 
	INTO TL_WH_PSUDO_LP_GRP A
	USING (SELECT LP.CONSOL_NO, LP.LP_ID, LP.LP_SEQ	           
	         FROM TL_WH_LOAD_PLAN LP
	        WHERE LP.LP_NO = #lp_no#
	       ) B
	   ON (    A.CONSOL_NO = B.CONSOL_NO
	       AND A.LP_ID = B.LP_ID
	       AND A.LP_SEQ = B.LP_SEQ
	      )
	WHEN MATCHED THEN
	      UPDATE 
	         SET EQ_NO          = #eq_no#
	           , SEAL_NO        = #seal_no#
		       , MODI_ID        = #modi_id#
		       , MODI_OFC_CD    = #modi_ofc_cd#
		       , MODI_SYS_DT    = GETDATE()
		       , MODI_LOC_DT    = GETDATE();
	</update>
	<update id="modifyWhWaveForAllocatedTab" >
	/*WHOutWaveSimple.modifyWhWaveForAllocatedTab*/
	UPDATE TL_WH_WAVE
	   SET PICK_DT        = CASE #pick_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#pick_dt# as DATETIME),112) END
	     , PICK_HM_FR     = REPLACE(#pick_hm_fr#, ':', '')
	     , PICK_HM_TO     = REPLACE(#pick_hm_to#, ':', '')
	     , OUTBOUND_DT    = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as DATETIME),112) END
	     , OUTBOUND_HM_FR = REPLACE(#outbound_hm_fr#, ':', '')
	     , OUTBOUND_HM_TO = REPLACE(#outbound_hm_to#, ':', '')
	     , MODI_ID        = #modi_id#
	     , MODI_OFC_CD    = #modi_ofc_cd#
	     , MODI_SYS_DT    = GETDATE()
	     , MODI_LOC_DT    = GETDATE()
	 WHERE WAVE_NO        = #wave_no#
	</update>	
	<update id="modifyWhPickShtForWave">
	/*WHOutWaveSimple.modifyWhPickShtForWave*/
	UPDATE TL_WH_PICK_SHT
	   SET PICK_DT        = CASE #pick_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#pick_dt# as datetime),112) END
	     , PICK_HM_FR     = REPLACE(#pick_hm_fr#, ':', '')
	     , PICK_HM_TO     = REPLACE(#pick_hm_to#, ':', '')	     
	     , OUTBOUND_DT    = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
	     , OUTBOUND_HM_FR = REPLACE(#outbound_hm_fr#, ':', '')
	     , OUTBOUND_HM_TO = REPLACE(#outbound_hm_to#, ':', '')
	     , MODI_ID        = #modi_id#
	     , MODI_OFC_CD    = #modi_ofc_cd#
	     , MODI_SYS_DT    = GETDATE()
	     , MODI_LOC_DT    = GETDATE()
	 WHERE WALC_NO        = #walc_no# 
	</update>	
	<update id="modifyWhOutboundSummary">
	/*WHOutWaveSimple.modifyWhOutboundSummary*/
	UPDATE TL_WH_OB
	   SET OUTBOUND_PL_QTY  = #outbound_pl_qty#
		 , OUTBOUND_BX_QTY  = #outbound_bx_qty#
		 , OUTBOUND_EA_QTY  = #outbound_ea_qty#
		 , OUTBOUND_SQFT    = #outbound_sqft#
		 , OUTBOUND_CBM     = #outbound_cbm#
		 , OUTBOUND_GRS_KGS = #outbound_grs_kgs# 		     	      
		 , OUTBOUND_NET_KGS = #outbound_net_kgs#
		 , MODI_ID          = #modi_id#
	     , MODI_OFC_CD      = #modi_ofc_cd#
	     , MODI_SYS_DT      = GETDATE()
	     , MODI_LOC_DT      = GETDATE()
	 WHERE WOB_BK_NO        = #wob_bk_no#
	</update>
	<delete id="deleteWhWaveObAll">
	/*WHOutWaveSimple.deleteWhWaveObAll*/
	DELETE FROM TL_WH_WAVE_OB
	WHERE WAVE_NO = #wave_no#
	</delete>
	<delete id="deleteWhWaveAll">
	/*WHOutWaveSimple.deleteWhWaveAll*/
	DELETE FROM TL_WH_WAVE
	WHERE WAVE_NO = #wave_no#
	</delete>
	<update id="saveAllocPickingAllocItem" >
	/*WHOutWaveSimple.saveAllocPickingAllocItem*/
	UPDATE TL_WH_ALLC_ITEM
	   SET PICKD_ITEM_EA_QTY  = #pick_item_ea_qty#
	     , PICKD_ITEM_CBM     = #item_cbm#
	     , PICKD_ITEM_CBF     = #item_cbf#
	     , PICKD_ITEM_GRS_KGS = #item_grs_kgs#
	     , PICKD_ITEM_GRS_LBS = #item_grs_lbs#
	     , PICKD_ITEM_NET_KGS = #item_net_kgs#
	     , PICKD_ITEM_NET_LBS = #item_net_lbs#
	    <isEqual prepend="OR" property="shipno_seq" compareValue="0">
		 	<isEmpty prepend="OR" property="shipno_seq">
		   		, EQ_TPSZ_CD         = #eq_tpsz_cd#	     
	     		, TRUCKER_CD         = #trucker_cd#
	     		, TRUCKER_NM         = #trucker_nm#
         		, EQ_NO              = #eq_no#
         		, SEAL_NO            = #seal_no#
         		<isNotEqual property="tro_flg" compareValue="Y">
         		, DLV_ORD_NO         = #dlv_ord_no#
         		</isNotEqual>
         		<isEqual property="tro_flg" compareValue="Y">
         		, DLV_ORD_SEQ        = CASE  #tro_seq#  WHEN ''  THEN  NULL  ELSE #tro_seq#  END
         		</isEqual>
		   	</isEmpty>
		</isEqual>
	     , MODI_ID = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = GETDATE()
	 WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO    = #wob_bk_no#
	   AND SAO_SYS_NO   = #sao_sys_no#
	   AND ITEM_SYS_NO  = #item_sys_no#
	   AND LOT_ID       = #lot_id#
	   AND ITEM_SEQ     = #item_seq#
	   <isNotEmpty property="wib_bk_no">
		AND WIB_BK_NO	= #wib_bk_no#
	   </isNotEmpty>
	   <isNotEmpty property="po_sys_no">
	    AND PO_SYS_NO    = #po_sys_no#
	   </isNotEmpty>
	   <isNotEmpty property="wh_loc_cd">
	    AND WH_LOC_CD    = #wh_loc_cd#
	   </isNotEmpty>
	   <isNotEmpty property="lic_plat_no">
	   	AND ISNULL(LIC_PLAT_NO,'') 	= ISNULL(#lic_plat_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="item_ser_no">
	   	AND ISNULL(ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="po_no_in">
	   	AND ISNULL(PO_NO,'')	= ISNULL(#po_no_in#,'')
	   </isNotEmpty>
	</update>
	<select id="searchWhPsudoLpGrpIdInfo" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.WaveSimpleMgmtLpGrpInfoVO">
	SELECT TOP 1
		   LP_ID
	     , LP_SEQ
	     , (SELECT LP_NO FROM TL_WH_LOAD_PLAN LP WHERE LP.CONSOL_NO = SH.CONSOL_NO AND LP.LP_ID = SH.LP_ID AND LP.LP_SEQ = SH.LP_SEQ AND LP.LP_STS_CD = 'P') AS LP_NO
	FROM TL_WH_PSUDO_LP_SHIP SH
	WHERE CONSOL_NO = #consol_no#
		AND LP_ID = CASE #eq_tpsz_cd#  WHEN ''  THEN  'EQ'  ELSE #eq_tpsz_cd#  END
		<isEmpty property="eq_no">
			AND ISNULL(EQ_NO,'') = ''
		</isEmpty>
		<isNotEmpty property="eq_no">
			AND EQ_NO = #eq_no#
		</isNotEmpty>
		<isEmpty property="outbound_dt">
			AND ISNULL(OUTBOUND_DT,'') = ''
		</isEmpty>
		<isNotEmpty property="outbound_dt">
			AND OUTBOUND_DT = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
		</isNotEmpty>
		AND NOT EXISTS(
	    	SELECT 'X'
	        FROM TL_WH_LOAD_PLAN P
	        WHERE P.CONSOL_NO = SH.CONSOL_NO
	        	AND P.LP_ID = SH.LP_ID
	            AND P.LP_SEQ = SH.LP_SEQ
	            AND P.LP_STS_CD = 'L'
	        )
	</select>
	<select id="searchNextLpSeq" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchNextLpSeq*/
	SELECT ISNULL(MAX(LP_SEQ),0) + 1 AS LP_SEQ_NEXT
	FROM TL_WH_PSUDO_LP_GRP
	WHERE CONSOL_NO = #consol_no#
		AND LP_ID = CASE  #eq_tpsz_cd#  WHEN ''  THEN  'EQ'  ELSE #eq_tpsz_cd#  END
	</select>
	<insert id="saveWhPsudoLpGrpForWaveSimpleLpId">
	/*WHOutWaveSimple.saveWhPsudoLpGrpForWaveSimpleLpId*/
	INSERT INTO TL_WH_PSUDO_LP_GRP
          ( CONSOL_NO
          , LP_ID
          , LP_SEQ
          , EQ_TP_CD
          , EQ_NO
          , SEAL_NO
          , RGST_ID
          , RGST_OFC_CD
          , RGST_SYS_DT
          , RGST_LOC_DT
          , MODI_ID
          , MODI_OFC_CD
          , MODI_SYS_DT
          , MODI_LOC_DT
          )
     VALUES
          (
          	#consol_no#
          , #lp_id#
          , #lp_seq#
          , CASE WHEN #lp_id# = 'EQ' THEN ''
                 ELSE (   SELECT TOP 1 EQ_TP_CD 
                            FROM
                 			(SELECT 'C' AS EQ_TP_CD
                 			 FROM TL_EQ C
                 			 WHERE C.EQ_UNIT =  #lp_id#
                 			 UNION ALL
                 			 SELECT 'T' AS EQ_TP_CD
                 			 FROM TL_TRK_TP_CD T
                 			 WHERE T.TRK_TP_CT = #lp_id#
                 			 AND T.USE_YN = 'Y' 
                 			) TT
                      )
                 END
          , #eq_no#
          , #seal_no#
          , #rgst_id#
	      , #rgst_ofc_cd#
	      , GETDATE()
	      , GETDATE()
	      , #modi_id#
	      , #modi_ofc_cd#
	      , GETDATE()
	      , GETDATE()         
          )    
	</insert>
	<update id="modifyWhPsudoLpShipForWaveSimpleLpId" >
	/*WHOutWaveSimple.modifyWhPsudoLpShipForWaveSimpleLpId*/
	UPDATE TL_WH_PSUDO_LP_SHIP
	   SET LP_ID      = #lp_id#
	     , LP_SEQ     = CAST(#lp_seq# AS NUMERIC)
	 WHERE CONSOL_NO  = #consol_no#
	   AND SHIPNO     = #shipno#
	   AND SHIPNO_SEQ = CAST(#shipno_seq# AS NUMERIC)
	</update>
	<update id="modifyAllcMgmtForPickdProcess" >
	/*WHOutWaveSimple.modifyAllcMgmtForPickdProcess*/
	UPDATE TL_WH_ALLC_ITEM
	   SET PICKD_ITEM_EA_QTY  = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#ship_item_ea_qty# AS NUMERIC) ELSE PICKD_ITEM_EA_QTY + CAST(#ship_item_ea_qty# AS NUMERIC) END)
	     , PICKD_ITEM_CBM     = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_cbm# AS NUMERIC)         ELSE PICKD_ITEM_EA_QTY + CAST(#item_cbm# AS NUMERIC) END)
	     , PICKD_ITEM_CBF     = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_cbf# AS NUMERIC)         ELSE PICKD_ITEM_EA_QTY + CAST(#item_cbf# AS NUMERIC) END)
	     , PICKD_ITEM_GRS_KGS = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_grs_kgs# AS NUMERIC)     ELSE PICKD_ITEM_EA_QTY + CAST(#item_grs_kgs# AS NUMERIC) END)
	     , PICKD_ITEM_GRS_LBS = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_grs_lbs# AS NUMERIC)     ELSE PICKD_ITEM_EA_QTY + CAST(#item_grs_lbs# AS NUMERIC) END)
	     , PICKD_ITEM_NET_KGS = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_net_kgs# AS NUMERIC)     ELSE PICKD_ITEM_EA_QTY + CAST(#item_net_kgs# AS NUMERIC) END)
	     , PICKD_ITEM_NET_LBS = (CASE WHEN ISNULL(#shipno_seq#, ' ') = ' ' OR  #shipno_seq# = '0' THEN  CAST(#item_net_lbs# AS NUMERIC)     ELSE PICKD_ITEM_EA_QTY + CAST(#item_net_lbs# AS NUMERIC) END)
	     , TRUCKER_CD        = #trucker_cd#
	     , TRUCKER_NM        = #trucker_nm#
         , EQ_TPSZ_CD        = #eq_tpsz_cd#
         , EQ_NO             = #eq_no#
         , SEAL_NO           = #seal_no#
         <isNotEqual property="tro_flg" compareValue="Y">
         , DLV_ORD_NO        = #dlv_ord_no#
         </isNotEqual>
		 <isEqual property="tro_flg" compareValue="Y">
		 , DLV_ORD_SEQ        =  CASE #tro_seq# WHEN '' THEN NULL ELSE #tro_seq# END
		 </isEqual>
	     , MODI_ID            = #modi_id#
	     , MODI_OFC_CD        = #modi_ofc_cd#
	     , MODI_SYS_DT        = GETDATE()
	     , MODI_LOC_DT        = GETDATE()
	 WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO    = #wob_bk_no#
	   AND SAO_SYS_NO   = #sao_sys_no#
	   AND WIB_BK_NO	= #wib_bk_no#
	   AND PO_SYS_NO    = #po_sys_no#
	   AND ITEM_SYS_NO  = #item_sys_no#
	   AND LOT_ID       = #lot_id#
	   AND WH_LOC_CD    = #wh_loc_cd#
	   AND ITEM_SEQ     = #item_seq#    
	   AND ISNULL(LIC_PLAT_NO,'')	= ISNULL(#lic_plat_no#,'')
	   AND ISNULL(ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
	   AND ISNULL(PO_NO,'')	= ISNULL(#po_no_in#,'') 
	</update>
	<select id="searchNextShipno" resultClass="java.lang.String">
	/*WHOutWaveSimple.searchNextShipno*/
	SELECT 'S' + SUBSTRING(#rgst_ofc_cd#,3 ,3) + CONVERT(VARCHAR(8),GETDATE(),112) + RIGHT(REPLICATE('0',6) + CAST((ISNULL((SELECT MAX(CAST(RIGHT(SHIPNO,6)AS NUMERIC)) FROM TL_WH_PSUDO_LP_SHIP),0)+1) AS VARCHAR),6)
	</select>
	<insert id="saveWhPsudoLpShipForWaveSimple">
	/*WHOutWaveSimple.saveWhPsudoLpShipForWaveSimple*/
	INSERT INTO TL_WH_PSUDO_LP_SHIP
          ( CONSOL_NO
          , SHIPNO
          , SHIPNO_SEQ
          , SO_NO
          , WOB_BK_NO
          , WIB_BK_NO
          , SAO_SYS_NO
          , PO_SYS_NO
          , ITEM_SYS_NO
          , LOT_ID
          , WH_LOC_CD
          , ITEM_SEQ
          , SAO_NO
          , PO_NO
          , ITEM_CD
          , ITEM_NM
          , LOAD_ITEM_EA_QTY
          , LP_ITEM_EA_QTY
          , LP_ITEM_CBM
          , LP_ITEM_CBF
          , LP_ITEM_GRS_KGS
          , LP_ITEM_GRS_LBS
          , LP_ITEM_NET_KGS
          , LP_ITEM_NET_LBS
          , LP_STATUS
          , TRUCKER_CD
          , TRUCKER_NM
          , EQ_TPSZ_CD
          , EQ_NO
          , SEAL_NO
          , DLV_ORD_NO
          , DLV_ORD_SEQ
          , OUTBOUND_DT
          , OUT_PE_QTY
          , RGST_ID
          , RGST_OFC_CD
          , RGST_SYS_DT
          , RGST_LOC_DT
          , MODI_ID
          , MODI_OFC_CD
          , MODI_SYS_DT
          , MODI_LOC_DT
          ,	LIC_PLAT_NO
          , ITEM_SER_NO)   
	SELECT #new_consol_no#  
     , #shipno#
     , #shipno_seq#
     , O.SO_NO
     , ALLC.WOB_BK_NO
     , T.WIB_BK_NO
     , T.SAO_SYS_NO
     , T.PO_SYS_NO
     , T.ITEM_SYS_NO
     , T.LOT_ID
     , T.WH_LOC_CD
     , T.ITEM_SEQ
     , T.SAO_NO     
     , T.PO_NO
     , T.ITEM_CD     
     , T.ITEM_NM
     , #ship_item_ea_qty# 
     , CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_EA_QTY ELSE T.PICK_ITEM_EA_QTY END
     , #item_cbm#
     , #item_cbf#
     , #item_grs_kgs#
     , #item_grs_lbs#
     , #item_net_kgs#
     , #item_net_lbs#     
     ,'G'
     , #trucker_cd#
     , #trucker_nm#
     , #eq_tpsz_cd#
     , #eq_no#
     , #seal_no#
     , CASE O.TRO_FLG  WHEN 'Y' THEN  O.DLV_ORD_NO  ELSE #dlv_ord_no# END
     , CASE O.TRO_FLG  WHEN 'Y' THEN  #tro_seq#  ELSE NULL END
     , CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
     , #out_pe_qty#     
     , #rgst_id#
	 , #rgst_ofc_cd#
	 , GETDATE()
	 , GETDATE()
	 , #modi_id#
	 , #modi_ofc_cd#
	 , GETDATE()
	 , GETDATE()
	 , T.LIC_PLAT_NO
	 , T.ITEM_SER_NO
  	FROM TL_WH_ALLC ALLC
     , TL_WH_ALLC_ITEM T
     , TL_WH_OB O
 	WHERE ALLC.WALC_NO = T.WALC_NO 
	   AND ALLC.WOB_BK_NO  = O.WOB_BK_NO
	   AND ALLC.WALC_NO    = #walc_no#
	   AND T.WOB_BK_NO     = #wob_bk_no#
	   AND T.SAO_SYS_NO    = #sao_sys_no#
	   AND T.ITEM_SYS_NO   = #item_sys_no#
	   AND T.LOT_ID        = #lot_id#
	   AND T.ITEM_SEQ      = #item_seq#
	   <isNotEmpty property="wib_bk_no">
	   AND T.WIB_BK_NO	   = #wib_bk_no#
	   </isNotEmpty>
	   <isNotEmpty property="po_sys_no">
	   AND T.PO_SYS_NO     = #po_sys_no#
	   </isNotEmpty>
	   <isNotEmpty property="wh_loc_cd">
	   AND T.WH_LOC_CD     = #wh_loc_cd#
	   </isNotEmpty>
	   <isNotEmpty property="lic_plat_no">
	   AND ISNULL(T.LIC_PLAT_NO,'')	= ISNULL(#lic_plat_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="item_ser_no">
	   AND ISNULL(T.ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
	   </isNotEmpty>
	   <isNotEmpty property="po_no_in">
	   AND ISNULL(T.PO_NO,'')	= ISNULL(#po_no_in#,'')
	   </isNotEmpty>

	</insert>
	<update id="modifyWhPsudoLpShipOutboundDtForOtherData">
	/*WHOutWaveSimple.modifyWhPsudoLpShipOutboundDtForOtherData*/
	UPDATE TL_WH_PSUDO_LP_SHIP
	   SET OUTBOUND_DT 		  = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
	     , MODI_ID            = #modi_id#
		 , MODI_OFC_CD        = #modi_ofc_cd#
		 , MODI_SYS_DT        = GETDATE()
		 , MODI_LOC_DT        = GETDATE()
	 WHERE CONSOL_NO = #consol_no#
	   AND OUTBOUND_DT IS NULL
	</update>
	<insert id ="saveWhPsudoLpShipForOtherData">
	/*WHOutWaveSimple.saveWhPsudoLpShipForOtherData*/
	INSERT INTO TL_WH_PSUDO_LP_SHIP
	          ( CONSOL_NO
	          , SHIPNO
	          , SHIPNO_SEQ
	          , SO_NO
	          , WOB_BK_NO
	          , WIB_BK_NO
	          , SAO_SYS_NO
	          , PO_SYS_NO
	          , ITEM_SYS_NO
	          , LOT_ID
	          , WH_LOC_CD
	          , ITEM_SEQ
	          , SAO_NO
	          , PO_NO
	          , ITEM_CD
	          , ITEM_NM
	          , LOAD_ITEM_EA_QTY
	          , LP_ITEM_EA_QTY
	          , LP_ITEM_CBM
	          , LP_ITEM_CBF
	          , LP_ITEM_GRS_KGS
	          , LP_ITEM_GRS_LBS
	          , LP_ITEM_NET_KGS
	          , LP_ITEM_NET_LBS
	          , LP_STATUS
	          , TRUCKER_CD
	          , TRUCKER_NM
	          , EQ_TPSZ_CD
	          , EQ_NO
	          , SEAL_NO
	          , DLV_ORD_NO
	          , DLV_ORD_SEQ
	          , OUTBOUND_DT
	          , OUT_PE_QTY
	          , RGST_ID
	          , RGST_OFC_CD
	          , RGST_SYS_DT
	          , RGST_LOC_DT
	          , MODI_ID
	          , MODI_OFC_CD
	          , MODI_SYS_DT
	          , MODI_LOC_DT
	          , LIC_PLAT_NO
	          , ITEM_SER_NO)   
	SELECT #consol_no#  
	     , (SELECT 'S' + SUBSTRING(#rgst_ofc_cd#,3 ,3) + CONVERT(VARCHAR(8),GETDATE(),112) + RIGHT(REPLICATE('0',6) + CAST(CAST(SUBSTRING(ISNULL((SELECT MAX(SHIPNO) FROM TL_WH_PSUDO_LP_SHIP),'000000000000000000'),13,18)AS NUMERIC)+1 AS VARCHAR),6))
	     , 0
	     , A.SO_NO
	     , A.WOB_BK_NO
	     , A.WIB_BK_NO
	     , A.SAO_SYS_NO
	     , A.PO_SYS_NO
	     , A.ITEM_SYS_NO
	     , A.LOT_ID
	     , A.WH_LOC_CD
	     , A.ITEM_SEQ
	     , A.SAO_NO     
	     , A.PO_NO
	     , A.ITEM_CD     
	     , A.ITEM_NM
	     , A.LOAD_ITEM_EA_QTY
	     , A.LP_ITEM_EA_QTY
	     , A.LP_ITEM_CBM
	     , A.LP_ITEM_CBF
	     , A.LP_ITEM_GRS_KGS
	     , A.LP_ITEM_GRS_LBS 
	     , A.LP_ITEM_NET_KGS
	     , A.LP_ITEM_NET_LBS      
	     ,'G'
	     , A.TRUCKER_CD
	     , A.TRUCKER_NM
	     , A.EQ_TPSZ_CD
	     , A.EQ_NO
	     , A.SEAL_NO
	     , A.DLV_ORD_NO
	     , A.DLV_ORD_SEQ
	     , CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
	     <![CDATA[
	     , CASE WHEN ISNULL(A.LOAD_ITEM_EA_QTY,0) > 0 THEN
		             (
		             CASE WHEN A.PE_QTY < 0  THEN 1
		                  WHEN A.PE_QTY > A.LOAD_ITEM_EA_QTY THEN 1
		                  ELSE CEILING(A.LOAD_ITEM_EA_QTY / A.PE_QTY) END	
		             )
		        ELSE 0 END AS OUT_PE_QTY
		  ]]>
	     , #rgst_id#
		 , #rgst_ofc_cd#
		 , GETDATE()
		 , GETDATE()
		 , #modi_id#
		 , #modi_ofc_cd#
		 , GETDATE()
		 , GETDATE()
		 , A.LIC_PLAT_NO
		 , A.ITEM_SER_NO
	  FROM (
			SELECT TAB.*
			     , (CASE WHEN CI.PKG_LV1_UNIT_CD = 'PE' THEN CI.PKG_LV1_QTY
					     WHEN CI.ITEM_PKGUNIT    = 'PE' THEN CI.ITEM_PKGBASEQTY
					     WHEN CI.PKG_LV3_UNIT_CD = 'PE' THEN CI.PKG_LV3_QTY
					     WHEN CI.PKG_LV4_UNIT_CD = 'PE' THEN CI.PKG_LV4_QTY
					     ELSE -1
					     END
				   ) AS PE_QTY 	 
			  FROM (
					SELECT O.SO_NO
					     , ALLC.WOB_BK_NO
					     , T.WIB_BK_NO
					     , T.SAO_SYS_NO
					     , T.PO_SYS_NO
					     , T.ITEM_SYS_NO
					     , T.LOT_ID
					     , T.WH_LOC_CD
					     , T.ITEM_SEQ
					     , T.SAO_NO     
					     , T.PO_NO
					     , T.ITEM_CD     
					     , T.ITEM_NM
					     , 0 AS LOAD_ITEM_EA_QTY /*LOAD_ITEM_EA_QTY */
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_EA_QTY ELSE T.PICK_ITEM_EA_QTY END,0) AS LP_ITEM_EA_QTY
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_CBM ELSE T.PICK_ITEM_CBM END,0) AS LP_ITEM_CBM
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_CBF ELSE T.PICK_ITEM_CBF END,0) AS LP_ITEM_CBF
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_GRS_KGS ELSE T.PICK_ITEM_GRS_KGS END,0) AS LP_ITEM_GRS_KGS
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_GRS_LBS ELSE T.PICK_ITEM_GRS_LBS END,0) AS LP_ITEM_GRS_LBS
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_NET_KGS ELSE T.PICK_ITEM_NET_KGS END,0) AS LP_ITEM_NET_KGS
					     , ISNULL(CASE WHEN ISNULL(ALLC.PICKD_FLG, 'N') = 'Y' THEN  T.PICKD_ITEM_NET_LBS ELSE T.PICK_ITEM_NET_LBS END,0) AS LP_ITEM_NET_LBS   
					     , O.WH_CD
					     , O.CTRT_NO 
					     , T.TRUCKER_CD
					     , T.TRUCKER_NM
					     , T.EQ_TPSZ_CD
					     , T.EQ_NO
					     , T.SEAL_NO
					     , T.DLV_ORD_NO 
					     , T.DLV_ORD_SEQ 
					     , T.LIC_PLAT_NO
					     , T.ITEM_SER_NO 
					  FROM TL_WH_ALLC ALLC
					     , TL_WH_ALLC_ITEM T
					     , TL_WH_OB O
					 WHERE ALLC.WALC_NO = T.WALC_NO 
					   AND ALLC.WOB_BK_NO = O.WOB_BK_NO
					   AND ALLC.WALC_NO = #walc_no#
					   AND NOT EXISTS (SELECT 'X'
					                     FROM TL_WH_PSUDO_LP_SHIP
					                    WHERE WOB_BK_NO    = T.WOB_BK_NO
					                      AND SAO_SYS_NO   = T.SAO_SYS_NO
										  AND WIB_BK_NO	   = T.WIB_BK_NO
										  AND PO_SYS_NO    = T.PO_SYS_NO
										  AND ITEM_SYS_NO  = T.ITEM_SYS_NO
										  AND LOT_ID       = T.LOT_ID
										  AND WH_LOC_CD    = T.WH_LOC_CD
										  AND ITEM_SEQ     = T.ITEM_SEQ 
										  AND ISNULL(LIC_PLAT_NO,'')  = ISNULL(T.LIC_PLAT_NO,'')
										  AND ISNULL(ITEM_SER_NO,'')	= ISNULL(T.ITEM_SER_NO,'')
										  AND ISNULL(PO_NO,'')	= ISNULL(T.PO_NO,'')
					                  )
			       ) TAB LEFT JOIN TL_CTRT_CUST_ITEM CI ON (TAB.CTRT_NO = CI.CTRT_NO AND TAB.ITEM_SYS_NO = CI.ITEM_SYS_NO)
			   WHERE 1=1 
	       ) A
	</insert>
	
	<select id="searchWhPsudoLpShipNoAssignLpId" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd03WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchWhPsudoLpShipNoAssignLpId*/
	     SELECT CONSOL_NO
	          , SHIPNO
	          , SHIPNO_SEQ
	          , SO_NO
	          , WOB_BK_NO
	          , WIB_BK_NO
	          , SAO_SYS_NO
	          , PO_SYS_NO
	          , ITEM_SYS_NO
	          , LOT_ID
	          , WH_LOC_CD
	          , ITEM_SEQ
	          , SAO_NO
	          , PO_NO
	          , ITEM_CD
	          , ITEM_NM
	          , LOAD_ITEM_EA_QTY
	          , LP_ITEM_EA_QTY
	          , LP_ITEM_CBM
	          , LP_ITEM_CBF
	          , LP_ITEM_GRS_KGS
	          , LP_ITEM_GRS_LBS
	          , LP_ITEM_NET_KGS
	          , LP_ITEM_NET_LBS
	          , LP_STATUS
	          , TRUCKER_CD
	          , TRUCKER_NM
	          , EQ_TPSZ_CD
	          , EQ_NO
	          , SEAL_NO
	          , DLV_ORD_NO
	          , DLV_ORD_SEQ AS TRO_SEQ
	          , OUTBOUND_DT
	          , OUT_PE_QTY
	          , LIC_PLAT_NO
	          , ITEM_SER_NO
	      FROM TL_WH_PSUDO_LP_SHIP
	      WHERE CONSOL_NO = #consol_no#
	        AND ISNULL(LP_ID,'') = '' 
	</select>
	<update id="modifyLoadPlanOutboundDtForOtherData">
	/*WHOutWaveSimple.modifyLoadPlanOutboundDtForOtherData*/
	UPDATE TL_WH_LOAD_PLAN
	   SET OUTBOUND_DT = CASE #outbound_dt# WHEN '' THEN '' ELSE CONVERT(VARCHAR(8),CAST(#outbound_dt# as datetime),112) END
	WHERE CONSOL_NO =  #consol_no#
	   AND OUTBOUND_DT IS NULL
	   AND LP_STS_CD = 'P'
	</update>
	<insert id="addWhLoadPlanForWaveSimple">
	/*WHOutWaveSimple.addWhLoadPlanForWaveSimple*/
	INSERT INTO TL_WH_LOAD_PLAN
	          (
	            LP_NO
	          , CONSOL_NO
	          , LP_ID
	          , LP_SEQ
	          , LP_STS_CD
	          , EQ_TPSZ_CD
	          , EQ_NO
	          , SEAL_NO
	          , GATE_IN_HM
	          , GATE_OUT_HM
	          , LOAD_HM_FR
	          , LOAD_HM_TO
	          , LOAD_BY
	          , OUTBOUND_DT
	          , SUPV_NM
	          , OUTBOUND_LOC_CD
	          , GATE_NO
	          , MSG_TO_LOAD
	          , TRUCKER_CD
	          , TRUCKER_NM
	          , DLV_ORD_NO
	          , RGST_ID
	          , RGST_OFC_CD
	          , RGST_SYS_DT
	          , RGST_LOC_DT
	          , MODI_ID
	          , MODI_OFC_CD
	          , MODI_SYS_DT
	          , MODI_LOC_DT
	          )
	     SELECT #lp_no#
	          , #consol_no#
	          , T.LP_ID
	          , T.LP_SEQ
	          , 'P' 
	          , T.EQ_TPSZ_CD
	          , T.EQ_NO
	          , T.SEAL_NO
	          , SHT.GATE_IN_HM
	          , SHT.GATE_OUT_HM
	          , SHT.LOAD_HM_FR
	          , SHT.LOAD_HM_TO
	          , SHT.LOAD_BY
	          , T.OUTBOUND_DT
	          , SHT.SUPV_NM
	          , SHT.OUTBOUND_LOC_CD
	          , SHT.GATE_NO
	          , SHT.MSG_TO_LOAD
	          , T.TRUCKER_CD
	          , T.TRUCKER_NM
	          , T.DLV_ORD_NO
	          , #rgst_id#
		      , #rgst_ofc_cd#
		      , GETDATE()
		      , GETDATE()
		      , #modi_id#
		      , #modi_ofc_cd#
		      , GETDATE()
		      , GETDATE()
		 FROM (SELECT SH.LP_ID
		            , SH.LP_SEQ
		            , MAX(SH.EQ_TPSZ_CD) AS EQ_TPSZ_CD
		            , MAX(SH.EQ_NO) AS EQ_NO
		            , MAX(SH.OUTBOUND_DT) AS OUTBOUND_DT
		            , MAX(SH.SEAL_NO) AS SEAL_NO
		            , MAX(SH.TRUCKER_CD) AS TRUCKER_CD
		            , MAX(SH.TRUCKER_NM) AS TRUCKER_NM
		            , MAX(SH.DLV_ORD_NO) AS DLV_ORD_NO
		            , MAX(IT.WALC_NO) AS WALC_NO
		         FROM TL_WH_PSUDO_LP_SHIP SH
		            , TL_WH_ALLC_ITEM IT 
		        WHERE IT.WOB_BK_NO = SH.WOB_BK_NO
		          AND IT.SAO_SYS_NO = SH.SAO_SYS_NO
		          AND IT.WIB_BK_NO = SH.WIB_BK_NO
		          AND IT.PO_SYS_NO = SH.PO_SYS_NO
		          AND IT.ITEM_SYS_NO = SH.ITEM_SYS_NO
		          AND IT.LOT_ID = SH.LOT_ID
		          AND IT.WH_LOC_CD = SH.WH_LOC_CD
		          AND IT.ITEM_SEQ = SH.ITEM_SEQ
		          AND SH.CONSOL_NO = #consol_no#
		          AND SH.LP_ID = #lp_id#
		          AND SH.LP_SEQ = #lp_seq#
	              AND SH.LP_STATUS = 'G'
	            GROUP BY SH.LP_ID
		               , SH.LP_SEQ	            
		     ) T LEFT JOIN TL_WH_PICK_SHT SHT ON T.WALC_NO = SHT.WALC_NO
		     WHERE 1=1 
	</insert>
	
	<insert id="addWhLoadPlanItemForWaveSimple">
	/*WHOutWaveSimple.addWhLoadPlanItemForWaveSimple*/
	INSERT INTO TL_WH_LOAD_PLAN_ITEM
	          (
	            LP_NO
	          , WOB_BK_NO
	          , SAO_SYS_NO
	          , PO_SYS_NO
	          , ITEM_SYS_NO
	          , LOT_ID
	          , WH_LOC_CD
	          , ITEM_SEQ
	          , SO_NO
	          , SAO_NO
	          , WIB_BK_NO
	          , PO_NO
	          , ITEM_CD
	          , ITEM_NM
	          , LP_ITEM_EA_QTY
	          , LOAD_ITEM_EA_QTY
	          , LOAD_ITEM_CBM
	          , LOAD_ITEM_CBF
	          , LOAD_ITEM_GRS_KGS
	          , LOAD_ITEM_GRS_LBS
	          , LOAD_ITEM_NET_KGS
	          , LOAD_ITEM_NET_LBS
	          , RMK          
	          , OUT_PE_QTY
	          , RGST_ID
	          , RGST_OFC_CD
	          , RGST_SYS_DT
	          , RGST_LOC_DT
	          , MODI_ID
	          , MODI_OFC_CD
	          , MODI_SYS_DT
	          , MODI_LOC_DT
	          , RGST_TIMESTAMP
	          , LIC_PLAT_NO
	          , ITEM_SER_NO
	          , LP_SEQ
	          )
	     SELECT #lp_no#
	          , WOB_BK_NO
	          , SAO_SYS_NO
	          , PO_SYS_NO
	          , ITEM_SYS_NO
	          , LOT_ID
	          , WH_LOC_CD
	          , ITEM_SEQ
	          , SO_NO
	          , SAO_NO
	          , WIB_BK_NO
	          , PO_NO
	          , ITEM_CD
	          , ITEM_NM
	          , LP_ITEM_EA_QTY
	          , LOAD_ITEM_EA_QTY
	          , LP_ITEM_CBM
	          , LP_ITEM_CBF
	          , LP_ITEM_GRS_KGS
	          , LP_ITEM_GRS_LBS
	          , LP_ITEM_NET_KGS
	          , LP_ITEM_NET_LBS
	          , NULL          
	          , OUT_PE_QTY
	          , #rgst_id#
		      , #rgst_ofc_cd#
		      , GETDATE()
		      , GETDATE()
		      , #modi_id#
		      , #modi_ofc_cd#
		      , GETDATE()
		      , GETDATE()
		      , (SELECT SUBSTRING(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(SYSDATETIMEOFFSET(),'-',''),' ',''),':',''),'.',''),'+',''),0,21))
		      , LIC_PLAT_NO
		      , ITEM_SER_NO
		      , ROW_NUMBER() OVER(ORDER BY WOB_BK_NO ASC) AS LP_SEQ
		  FROM TL_WH_PSUDO_LP_SHIP SH
		  WHERE CONSOL_NO = #consol_no#
	        AND LP_STATUS = 'G'
			AND LP_ID = #lp_id#
		    AND LP_SEQ = #lp_seq#
		    AND NOT EXISTS (SELECT 'X'
		                     FROM TL_WH_LOAD_PLAN PL
		                        , TL_WH_LOAD_PLAN_ITEM IT
		                    WHERE PL.LP_NO = IT.LP_NO 
		                      AND PL.LP_NO = #lp_no#
		                      AND PL.LP_ID = SH.LP_ID
		                      AND PL.LP_SEQ = SH.LP_SEQ
		                      AND IT.WOB_BK_NO = SH.WOB_BK_NO
		                      AND IT.SAO_SYS_NO = SH.SAO_SYS_NO
		                      AND IT.WIB_BK_NO = SH.WIB_BK_NO
		                      AND IT.PO_SYS_NO = SH.PO_SYS_NO
		                      AND IT.ITEM_SYS_NO = SH.ITEM_SYS_NO
		                      AND IT.LOT_ID = SH.LOT_ID
		                      AND IT.WH_LOC_CD = SH.WH_LOC_CD
		                      AND IT.ITEM_SEQ = SH.ITEM_SEQ
		                   ) 
	</insert>
	<select id="searchWhLoadPlanNoForPlannedList" resultClass ="com.clt.apps.fis.wms.outboundmanagement.dto.WaveSimpleMgmtForLoadPlanLpStsCdVO">
	/*WHOutWaveSimple.searchWhLoadPlanNoForPlannedList*/
	SELECT DISTINCT(P.LP_NO) AS LP_NO
	FROM TL_WH_LOAD_PLAN_ITEM I
	    ,TL_WH_LOAD_PLAN P 
	 WHERE I.LP_NO = P.LP_NO
	   AND I.WOB_BK_NO IN (SELECT WOB_BK_NO
	                         FROM TL_WH_WAVE_OB
	                        WHERE WAVE_NO = #wave_no#
	                      ) 
	   AND P.LP_STS_CD = 'P' 
	   AND P.OUTBOUND_DT IS NOT NULL
	</select>
	<update id="modifyWhLoadPlanLpStsCd">
	/*WHOutWaveSimple.modifyWhLoadPlanLpStsCd*/
	UPDATE TL_WH_LOAD_PLAN
	   SET LP_STS_CD   = #lp_sts_cd#
	     , MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = GETDATE()
	 WHERE LP_NO = #lp_no#
	   AND LP_STS_CD != #lp_sts_cd#
	</update>
	<update id="modifyWhAllcItem" >
	/*WHOutWaveSimple.modifyWhAllcItem*/
	UPDATE TL_WH_ALLC_ITEM
	   SET 
	   	   PICK_ITEM_EA_QTY  = (SELECT ISNULL(CONVERT(DECIMAL(18,3), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0))
	     , PICK_ITEM_CBM     = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_cbm# AS FLOAT)), 0))))))
	     , PICK_ITEM_CBF     = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_cbf# AS FLOAT)), 0))))))
	     , PICK_ITEM_GRS_KGS = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_grs_kgs# AS FLOAT)), 0))))))
	     , PICK_ITEM_GRS_LBS = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_grs_lbs# AS FLOAT)), 0))))))
	     , PICK_ITEM_NET_KGS = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_net_kgs# AS FLOAT)), 0))))))
	     , PICK_ITEM_NET_LBS = (SELECT(CONVERT(DECIMAL (15, 5),((SELECT ISNULL(CONVERT(DECIMAL(15,5), PICK_ITEM_EA_QTY + CAST(#pick_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#pkg_lv1_qty# AS FLOAT)), 0)) * (SELECT ISNULL(CONVERT(DECIMAL(15,5), CAST(#lv1_net_lbs# AS FLOAT)), 0))))))
	     , MODI_ID = #rgst_id#
	     , MODI_OFC_CD = #rgst_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = GETDATE()
	 WHERE WALC_NO      = #walc_no#
	   AND WOB_BK_NO    = #wob_bk_no#
	   AND SAO_SYS_NO   = #sao_sys_no#
	   AND WIB_BK_NO    = #wib_bk_no#
	   AND PO_SYS_NO    = #po_sys_no#
	   AND ITEM_SYS_NO  = #item_sys_no#
	   AND LOT_ID       = #lot_id#
	   AND WH_LOC_CD    = #wh_loc_cd#
	   AND ITEM_SEQ     = #item_seq#    
	   AND ISNULL(LIC_PLAT_NO,'')	= ISNULL(#lic_plat_no#,'')
	   AND ISNULL(ITEM_SER_NO,'')	= ISNULL(#item_ser_no#,'')
	   AND ISNULL(PO_NO,'')	= ISNULL(#po_no#,'')
	</update>	
	<select id="searchWaveSimpleNewOrderListReqWobBkNo" resultClass = "com.clt.apps.fis.wms.outboundmanagement.dto.Grd02WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchWaveSimpleNewOrderListReqWobBkNo*/
	SELECT OB.WOB_BK_NO
	     , OB.CUST_ORD_NO
	     , OB.BK_DATE
	     , OB.BK_STS_CD
	     , dbo.TL_GET_COMM_NM('WB6', 'I') AS BK_STS_NM
	     , OB.EST_OUT_DT
	     , RTRIM(LTRIM(OB.BUYER_ADDR1 + ' ' + OB.BUYER_ADDR2 + ' ' + OB.BUYER_ADDR3 + ' ' + OB.BUYER_ADDR4 + ' ' + OB.BUYER_ADDR5)) AS SHIP_TO
	     , OB.CTRT_NO
	     , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	     , OB.WH_CD	 
	     , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM 
	  FROM TL_WH_OB OB
	 WHERE OB.BK_STS_CD = 'I'
	 <isNotEmpty property="req_wob_bk_no">
	 	AND OB.WOB_BK_NO IN ($in_no$)
	 </isNotEmpty>
	   AND NOT EXISTS /* 기존할당건 제외 */
	                 ( SELECT 'X'
	                     FROM TL_WH_ALLC AC
	                    WHERE AC.WOB_BK_NO = OB.WOB_BK_NO
	                  )
	   AND NOT EXISTS /* 기존 WAVE에 속한건 제외*/
	                 ( SELECT 'X'
	                     FROM TL_WH_WAVE_OB WV
	                    WHERE WV.WOB_BK_NO = OB.WOB_BK_NO
	                  )   
	 ORDER BY ISNULL(OB.CUST_ORD_NO, ' ') ASC, OB.EST_OUT_DT ASC, OB.WOB_BK_NO ASC         
	</select>	
	<update id="modifyAllocPickingFlag" >
	/*WHOutWaveSimple.modifyAllocPickingFlag*/
	UPDATE TL_WH_ALLC
	   SET PICKD_FLG    = #pickd_flg#
	     , MODI_ID 		= #modi_id#
	     , MODI_OFC_CD  = #modi_ofc_cd#
	     , MODI_SYS_DT  = GETDATE()
	     , MODI_LOC_DT  = CONVERT(DATETIME,dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#),120)
	 WHERE WALC_NO      = #walc_no#
	</update>
	<!-- WaveSmpMgmt (E) -->
	<!-- Alloc & Complete popup (S) -->
	<select id="searchAllcCmplPopList" resultClass="com.clt.apps.fis.wms.outboundmanagement.dto.Grd03WaveSimpleMgmtVO">
	/*WHOutWaveSimple.searchAllcCmplPopList*/
	SELECT TT.* 
		 <![CDATA[, CASE WHEN TT.LP_NO IS NOT NULL THEN TT.OUT_PE_QTY_LP_I
		        WHEN TT.CONSOL_NO IS NOT NULL THEN TT.OUT_PE_QTY_SH
		        WHEN TT.WALC_NO IS NULL THEN 0
		        WHEN ISNULL(TT.SHIP_ITEM_EA_QTY,0) > 0 THEN ( CASE WHEN TT.PE_QTY < 0  THEN 1 WHEN TT.PE_QTY > TT.SHIP_ITEM_EA_QTY THEN 1 ELSE CEILING(TT.SHIP_ITEM_EA_QTY / TT.PE_QTY) END)
		        ELSE 0 END AS OUT_PE_QTY ]]>
			  , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.EQ_TPSZ_CD_ORG 	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN ISNULL(TRO.CNTR_TPSZ_CD, TRO.TRUCK_TPSZ_CD) ELSE TT.EQ_TPSZ_CD_ORG END) END AS EQ_TPSZ_CD
			  , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.EQ_NO_ORG 		ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  ISNULL(TRO.CNTR_NO, TRO.TRUCK_NO) ELSE TT.EQ_NO_ORG END) END AS EQ_NO
			  , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.SEAL_NO_ORG 	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.SEAL_NO ELSE TT.SEAL_NO_ORG END) END AS SEAL_NO
			  , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.TRUCKER_CD_ORG	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.TRUCKER_CD ELSE TT.TRUCKER_CD_ORG END) END AS TRUCKER_CD
		 	  , CASE WHEN ISNULL(TT.TRO_FLG, 'N') != 'Y' THEN TT.TRUCKER_NM_ORG	ELSE (CASE WHEN ISNULL(LTRIM(RTRIM(TT.EQ_TPSZ_CD_ORG)), ' ') 	= ' ' AND TT.TRO_CNT = 1 AND TT.DLV_ORD_SEQ IS NULL THEN  TRO.TRUCKER_NM ELSE TT.TRUCKER_NM_ORG END) END AS TRUCKER_NM
		FROM (
		SELECT T.*
			     , ISNULL(D.LOT_ATTRIB_01, T.INBOUND_DT_OB) AS INBOUND_DT
			     , ISNULL(D.LOT_ATTRIB_02, T.LOT_NO_OB)     AS LOT_NO
			     , ISNULL(D.LOT_ATTRIB_03, T.EXP_DT_OB)     AS EXP_DT
			     , ISNULL(D.LOT_ATTRIB_04, T.LOT_04_OB)     AS LOT_04
			     , ISNULL(D.LOT_ATTRIB_05, T.LOT_05_OB)     AS LOT_05
			     , T.ITEM_EA_QTY - T.ALLC_SUM_EA_QTY AS UN_ALLOC_EA_QTY
			     , (SELECT COUNT(1) 
			          FROM TL_WH_LOAD_PLAN A
			             , TL_WH_LOAD_PLAN_ITEM B
			         WHERE A.LP_NO 			= B.LP_NO
			           AND B.WOB_BK_NO 		= T.WOB_BK_NO
			           AND B.SAO_SYS_NO 	= T.SAO_SYS_NO
			           AND B.WIB_BK_NO 		= T.WIB_BK_NO
			           AND B.PO_SYS_NO 		= T.PO_SYS_NO
			           AND B.ITEM_SYS_NO 	= T.ITEM_SYS_NO
			           AND B.LOT_ID 		= T.LOT_ID
			           AND B.WH_LOC_CD 		= T.WH_LOC_CD
			           AND B.ITEM_SEQ 		= T.ITEM_SEQ
			           AND A.LP_STS_CD IN ('L')) AS LP_CNT
			     <!-- #1214 [WMS4.0][Release Test]Allocation & Complete POPUP 수정 -->
			     , ISNULL((SELECT CI.STRG_SYS_NO
			               FROM TL_CTRT_CUST_ITEM CI
			                  , TL_WH_ALLC_STRG STRG 
			               WHERE 	CI.CTRT_NO = T.CTRT_NO 
			                	AND CI.ITEM_SYS_NO = T.ITEM_SYS_NO 
			                	AND CI.STRG_SYS_NO = STRG.STRG_SYS_NO
		                    	AND STRG.USE_FLG ='Y'
		                    	), 
					       ISNULL((SELECT STRG.STRG_SYS_NO
					               FROM (SELECT DENSE_RANK() OVER( ORDER BY S.STRG_CD ASC) RANK_SEQ
					                          , S.* 
					                     FROM TL_WH_ALLC_STRG S WHERE S.USE_FLG = 'Y' AND S.DEFAULT_FLG ='1'
				                        ) STRG
				                  WHERE STRG.RANK_SEQ = 1), ' ')) AS STRG_SYS_NO  
			     , ISNULL((SELECT STRG.STRG_CD
			               FROM TL_CTRT_CUST_ITEM CI
			                  , TL_WH_ALLC_STRG STRG 
			               WHERE 	CI.CTRT_NO = T.CTRT_NO 
			                	AND CI.ITEM_SYS_NO = T.ITEM_SYS_NO 
			                	AND CI.STRG_SYS_NO = STRG.STRG_SYS_NO
		                    	AND STRG.USE_FLG ='Y'
		                    	), 
					       ISNULL((SELECT STRG.STRG_CD
					               FROM (SELECT DENSE_RANK() OVER( ORDER BY S.STRG_CD ASC) RANK_SEQ
					                          , S.* 
					                     FROM TL_WH_ALLC_STRG S WHERE S.USE_FLG = 'Y' AND S.DEFAULT_FLG ='1'
				                        ) STRG
				                  WHERE STRG.RANK_SEQ = 1), ' ')) AS STRG_CD  
				 , CASE WHEN T.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
					WHEN T.CONSOL_NO IS NOT NULL THEN T.LOAD_ITEM_EA_QTY_SH
					ELSE 0 END AS SHIP_ITEM_EA_QTY
				 , ISNULL(CI.PKG_LV1_QTY, 0) AS PKG_LV1_QTY   
				 , ISNULL(CI.LV1_CBM, 0) AS LV1_CBM
				 , ISNULL(CI.LV1_CBF, 0) AS LV1_CBF
				 , ISNULL(CI.LV1_GRS_KGS, 0) AS LV1_GRS_KGS
				 , ISNULL(CI.LV1_GRS_LBS, 0) AS LV1_GRS_LBS
				 , ISNULL(CI.LV1_NET_KGS, 0) AS LV1_NET_KGS
				 , ISNULL(CI.LV1_NET_LBS, 0) AS LV1_NET_LBS 
				 , (CASE WHEN CI.PKG_LV1_UNIT_CD = 'PE' THEN CI.PKG_LV1_QTY
				         WHEN CI.ITEM_PKGUNIT    = 'PE' THEN CI.ITEM_PKGBASEQTY
				         WHEN CI.PKG_LV3_UNIT_CD = 'PE' THEN CI.PKG_LV3_QTY
				         WHEN CI.PKG_LV4_UNIT_CD = 'PE' THEN CI.PKG_LV4_QTY
				         ELSE -1
				         END
				   ) AS PE_QTY	
				  , LP_I.OUT_PE_QTY AS OUT_PE_QTY_LP_I   
				  , dbo.TL_GET_COMM_NM('WB6', CASE T.BK_STS_CD_GRP WHEN 'LP' THEN 'X' ELSE T.BK_STS_CD_GRP END) AS BK_STS_NM
				  , CASE WHEN T.LP_NO IS NOT NULL THEN LP_I.LP_ITEM_EA_QTY
		            WHEN T.CONSOL_NO IS NOT NULL THEN T.LP_ITEM_EA_QTY_SH
		            ELSE 0
		            END AS LOAD_PLAN_ITEM_EA_QTY /*loading plan item ea qty*/	
		          , CASE WHEN ISNULL(T.TRO_FLG, 'N') = 'Y' THEN 
			    	(CASE WHEN T.DLV_ORD_SEQ IS NOT NULL THEN T.DLV_ORD_SEQ WHEN T.TRO_CNT = 1 THEN  
			    		(SELECT MAX(TRO.TRO_SEQ)
			             FROM TL_TRO TRO
			                 ,TL_TRO_ITEM TRO_ITEM
			             WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
			             AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
			             AND TRO.TRO_NO = T.DLV_ORD_NO_ORG
			             AND TRO.TRO_STS_CD != 'D'
			             AND TRO_ITEM.BK_NO = T.WOB_BK_NO
			             AND TRO_ITEM.SAO_SYS_NO = T.SAO_SYS_NO
			             AND TRO_ITEM.ITEM_SYS_NO = T.ITEM_SYS_NO
			             AND TRO_ITEM.ITEM_SEQ = T.ITEM_SEQ )
			          ELSE NULL END )ELSE NULL END AS TRO_SEQ
			        
			FROM (
			        SELECT ROW_NUMBER() OVER(ORDER BY A.CUST_ORD_NO,B.ITEM_CD) AS RN
			             , B.RUM
			             , A.WOB_BK_NO
			             , A.WOB_BK_NO AS WOB_BK_NO_ORG
			             , ISNULL(A.CUST_ORD_NO, ' ') AS CUST_ORD_NO
			             , ISNULL(dbo.TL_GET_COMM_NM('WB3',A.ORD_TP_CD), ' ') AS ORD_TP_NM
			             , A.CTRT_NO
			             , dbo.TL_GET_CTRT_NM(A.CTRT_NO) AS CTRT_NM
			             , A.WH_CD
			             , A.EST_OUT_DT
			             , B.SAO_SYS_NO 
			             , B.ITEM_SYS_NO
			             , B.ITEM_SEQ
			             , C.WALC_NO
			             , C.PO_SYS_NO
			             , C.LOT_ID
			             , C.WH_LOC_CD
			             , C.LIC_PLAT_NO
			             , C.ITEM_SER_NO
			             , B.SAO_NO
			             , C.WIB_BK_NO
			             , B.ITEM_CD
			             , B.CUST_ITEM_CD
			             , B.ITEM_NM
			             , B.ITEM_PKGQTY
			             , B.ITEM_PKGUNIT
			             , B.ITEM_EA_QTY
			             , SUM(ISNULL(C.PICK_ITEM_EA_QTY,0)) OVER ( PARTITION BY B.WOB_BK_NO, B.SAO_SYS_NO, B.ITEM_SYS_NO, B.ITEM_SEQ) AS ALLC_SUM_EA_QTY /*ALLOC*/
			             , dbo.TL_GET_WH_LOC_NM(A.WH_CD, C.WH_LOC_CD) AS  WH_LOC_CD_NM
			             , CAST(ISNULL(C.PICK_ITEM_EA_QTY, 0)as INTEGER) AS ALLC_ITEM_EA_QTY /*Picking*/
			             , ISNULL(C.PICK_ITEM_CBM, B.ITEM_CBM) AS ITEM_CBM
			             , ISNULL(C.PICK_ITEM_CBF, B.ITEM_CBF) AS ITEM_CBF
			             , ISNULL(C.PICK_ITEM_GRS_KGS, B.ITEM_GRS_KGS) AS ITEM_GRS_KGS
			             , ISNULL(C.PICK_ITEM_GRS_LBS, B.ITEM_GRS_LBS) AS ITEM_GRS_LBS
			             , ISNULL(C.PICK_ITEM_NET_KGS, B.ITEM_NET_KGS) AS ITEM_NET_KGS
			             , ISNULL(C.PICK_ITEM_NET_LBS, B.ITEM_NET_LBS) AS ITEM_NET_LBS             
			             , C.PO_NO AS PO_NO_IN
			             , B.INBOUND_DT AS INBOUND_DT_OB
			             , B.LOT_NO AS LOT_NO_OB
			             , B.EXP_DT AS EXP_DT_OB
			             , B.LOT_04 AS LOT_04_OB
			             , B.LOT_05 AS LOT_05_OB
			             , B.RGST_TIMESTAMP
			             , CASE WHEN LP.LP_NO IS NOT NULL AND LP.LP_STS_CD = 'L' THEN 'LP'
							WHEN LP.LP_NO IS NOT NULL AND LP.LP_STS_CD = 'P' THEN 'PL'
							WHEN C.WALC_NO IS NULL THEN 'I'
							WHEN C.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG = 'Y' THEN 'P'
							WHEN C.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG != 'Y' THEN 'A'
							ELSE '' END AS BK_STS_CD
			             , ISNULL(ALLC.PICKD_FLG, 'N') AS PICKD_FLG
			             , CASE WHEN ALLC.PICKD_FLG = 'Y' THEN C.PICKD_ITEM_EA_QTY	ELSE 0 END AS PICK_ITEM_EA_QTY /*Picking*/
						 , LP.OUTBOUND_DT
						 , LP.LP_NO
						 , SHIP.CONSOL_NO
						 , SHIP.LP_ID
						 , SHIP.LP_SEQ 
						 , SHIP.LOAD_ITEM_EA_QTY AS LOAD_ITEM_EA_QTY_SH
						 , SHIP.LP_ITEM_EA_QTY AS LP_ITEM_EA_QTY_SH
						 , SHIP.OUT_PE_QTY AS OUT_PE_QTY_SH
						 , SHIP.SHIPNO
						 , SHIP.SHIPNO_SEQ
						 , ISNULL(A.TRO_FLG, 'N') AS TRO_FLG
						 , CASE WHEN (SELECT COUNT (1)
	                      	        FROM TL_WH_LOAD_PLAN LP
			                           , TL_WH_LOAD_PLAN_ITEM LPI
			                       WHERE LP.LP_NO = LPI.LP_NO		                                     
			                         AND A.WOB_BK_NO = LPI.WOB_BK_NO
			                         AND LP.LP_STS_CD = 'L') > 0 THEN 'LP'			             
		                    WHEN ALLC.WALC_NO IS NOT NULL AND ALLC.PICKD_FLG = 'Y' THEN 'P'
		                    WHEN ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG, 'N') != 'Y' THEN 'A'
		                    WHEN ALLC.WALC_NO IS NULL THEN 'I'     
		                    ELSE '' END AS BK_STS_CD_GRP
		                  , C.WALC_NO+C.WOB_BK_NO+C.SAO_SYS_NO+C.WIB_BK_NO+C.PO_SYS_NO+C.ITEM_SYS_NO+C.LOT_ID+C.WH_LOC_CD+CAST(C.ITEM_SEQ AS VARCHAR) +ISNULL(C.LIC_PLAT_NO,'') +ISNULL(C.ITEM_SER_NO,'') +ISNULL(C.PO_NO,'') AS ALLC_MERGE_KEY
		                  , CASE WHEN ISNULL(A.TRO_FLG, 'N') = 'Y' THEN A.DLV_ORD_NO
		                    WHEN ISNULL(A.TLO_FLG, 'N') = 'Y' THEN A.DLV_ORD_NO
		                    WHEN LP.LP_NO IS NOT NULL THEN LP.DLV_ORD_NO 
		                    WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.DLV_ORD_NO 
	                        WHEN C.WALC_NO IS NOT NULL THEN C.DLV_ORD_NO
		                    ELSE '' END AS DLV_ORD_NO_ORG
		                  , CASE WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.DLV_ORD_SEQ
	                       WHEN C.WALC_NO IS NOT NULL THEN C.DLV_ORD_SEQ
	                       ELSE NULL END AS DLV_ORD_SEQ 
	                      , CASE WHEN ISNULL(A.TRO_FLG, 'N') = 'Y' THEN 
	                  		(SELECT COUNT(DISTINCT(TRO.TRO_SEQ)) 
							 FROM TL_TRO TRO
	                    		 ,TL_TRO_ITEM TRO_ITEM 
							 WHERE TRO.TRO_NO = TRO_ITEM.TRO_NO
							 AND TRO.TRO_SEQ = TRO_ITEM.TRO_SEQ
							 AND TRO.TRO_NO = A.DLV_ORD_NO 
							 AND TRO.TRO_STS_CD != 'D'
							 AND TRO_ITEM.BK_NO = B.WOB_BK_NO
							 AND TRO_ITEM.SAO_SYS_NO = B.SAO_SYS_NO
							 AND TRO_ITEM.ITEM_SYS_NO = B.ITEM_SYS_NO
							 AND TRO_ITEM.ITEM_SEQ = B.ITEM_SEQ) ELSE 0 END AS TRO_CNT
						   , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_TPSZ_CD 
								WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.EQ_TPSZ_CD 
								WHEN C.WALC_NO IS NOT NULL THEN C.EQ_TPSZ_CD
								ELSE '' END AS EQ_TPSZ_CD_ORG
						   , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.EQ_NO 
								WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.EQ_NO 
								WHEN C.WALC_NO IS NOT NULL THEN C.EQ_NO
								ELSE '' END AS EQ_NO_ORG 
						   , CASE WHEN LP.LP_NO IS NOT NULL THEN LP.SEAL_NO 
								WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.SEAL_NO 
								WHEN C.WALC_NO IS NOT NULL THEN C.SEAL_NO
								ELSE '' END AS SEAL_NO_ORG 
							, CASE WHEN LP.LP_NO IS NOT NULL THEN LP.TRUCKER_CD 
									WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.TRUCKER_CD 
									WHEN C.WALC_NO IS NOT NULL THEN C.TRUCKER_CD
									ELSE '' END AS TRUCKER_CD_ORG
							, CASE WHEN LP.LP_NO IS NOT NULL THEN LP.TRUCKER_NM 
									WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.TRUCKER_NM 
									WHEN C.WALC_NO IS NOT NULL THEN C.TRUCKER_NM
									ELSE '' END AS TRUCKER_NM_ORG
			          FROM TL_WH_OB A LEFT JOIN (TL_WH_ALLC ALLC LEFT JOIN TL_WH_ISSU ISSU ON ALLC.WALC_NO = ISSU.WALC_NO) ON (A.WOB_BK_NO = ALLC.WOB_BK_NO)
			             , (           
			                 SELECT ROW_NUMBER() OVER(ORDER BY TT.CUST_ORD_NO ASC, TT.WOB_BK_NO ASC, TT.RGST_TIMESTAMP ASC, TT.SAO_SYS_NO ASC, TT.ITEM_SYS_NO ASC, TT.ITEM_SEQ ASC) AS RUM
					              , TT.*
					         FROM (SELECT OB_ITEM.*
					              		 ,AL.PICK_ITEM_EA_QTY
					              		 ,ISNULL(OB.CUST_ORD_NO, ' ') AS CUST_ORD_NO
							       FROM 
							       		TL_WH_OB_ITEM OB_ITEM 
							       		LEFT JOIN
							       			(SELECT AI.WOB_BK_NO, AI.SAO_SYS_NO, AI.ITEM_SYS_NO, AI.ITEM_SEQ
							                      , SUM(AI.PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY
		                            		 FROM TL_WH_ALLC_ITEM AI
		                            		 WHERE 1 = 1                                   
		                              		 AND AI.WOB_BK_NO IN (SELECT WOB_BK_NO
		                                                     	  FROM TL_WH_WAVE_OB
		                                                     	  WHERE WAVE_NO = #wave_no#)
		                             		 GROUP BY AI.WOB_BK_NO, AI.SAO_SYS_NO, AI.ITEM_SYS_NO, AI.ITEM_SEQ) AL 
		                             	ON( OB_ITEM.WOB_BK_NO = AL.WOB_BK_NO
		                                AND OB_ITEM.SAO_SYS_NO = AL.SAO_SYS_NO
		                                AND OB_ITEM.ITEM_SYS_NO = AL.ITEM_SYS_NO
		                                AND OB_ITEM.ITEM_SEQ = AL.ITEM_SEQ) 
		                              , TL_WH_OB OB
		                              WHERE 1=1
		                                AND OB_ITEM.WOB_BK_NO = OB.WOB_BK_NO
							            AND OB_ITEM.WOB_BK_NO IN (SELECT WOB_BK_NO
							                                      FROM TL_WH_WAVE_OB
							                                      WHERE WAVE_NO = #wave_no#)
							        ) TT
					       ) B LEFT JOIN TL_WH_ALLC_ITEM C LEFT JOIN (TL_WH_PSUDO_LP_SHIP SHIP LEFT JOIN TL_WH_LOAD_PLAN LP ON (SHIP.CONSOL_NO = LP.CONSOL_NO AND SHIP.LP_ID = LP.LP_ID AND SHIP.LP_SEQ = LP.LP_SEQ))
							                 	             ON (
							                 	             		C.WOB_BK_NO   = SHIP.WOB_BK_NO
													           	AND C.SAO_SYS_NO  = SHIP.SAO_SYS_NO
													           	AND C.WIB_BK_NO   = SHIP.WIB_BK_NO
													           	AND C.PO_SYS_NO   = SHIP.PO_SYS_NO
													           	AND C.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
													           	AND C.LOT_ID      = SHIP.LOT_ID
													           	AND C.WH_LOC_CD   = SHIP.WH_LOC_CD
													           	AND C.ITEM_SEQ    = SHIP.ITEM_SEQ
													           	AND 'G' 		  = SHIP.LP_STATUS
													           	AND ISNULL(C.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
													           	AND ISNULL(C.PO_NO,'')		  = ISNULL(SHIP.PO_NO,'')
													           	AND ISNULL(C.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,''))
							   ON (
							   		 	B.WOB_BK_NO   = C.WOB_BK_NO
			           				AND B.SAO_SYS_NO  = C.SAO_SYS_NO
			           				AND B.ITEM_SYS_NO = C.ITEM_SYS_NO
			           				AND B.ITEM_SEQ    = C.ITEM_SEQ )
			         WHERE A.BK_STS_CD   = 'I'
			           AND A.WOB_BK_NO   = B.WOB_BK_NO
			           AND A.WOB_BK_NO IN (SELECT WOB_BK_NO
			                               FROM TL_WH_WAVE_OB
			                               WHERE WAVE_NO =  #wave_no#)
			        ) T 
			        LEFT JOIN TL_WH_LOAD_PLAN PS_S ON (T.CONSOL_NO = PS_S.CONSOL_NO AND T.LP_ID = PS_S.LP_ID AND T.LP_SEQ = PS_S.LP_SEQ AND T.LP_NO = PS_S.LP_NO)
			        LEFT JOIN TL_WH_LOAD_PLAN_ITEM LP_I 
			        	ON (
			        	 	 	T.LP_NO       = LP_I.LP_NO
					        AND T.WOB_BK_NO   = LP_I.WOB_BK_NO
						    AND T.SAO_SYS_NO  = LP_I.SAO_SYS_NO
						    AND T.WIB_BK_NO   = LP_I.WIB_BK_NO
						    AND T.PO_SYS_NO   = LP_I.PO_SYS_NO
						    AND T.ITEM_SYS_NO = LP_I.ITEM_SYS_NO
						    AND T.LOT_ID      = LP_I.LOT_ID
						    AND T.WH_LOC_CD   = LP_I.WH_LOC_CD
						    AND T.ITEM_SEQ    = LP_I.ITEM_SEQ
						    AND ISNULL(T.LIC_PLAT_NO,'') = ISNULL(LP_I.LIC_PLAT_NO,'')
						    AND ISNULL(T.ITEM_SER_NO,'') = ISNULL(LP_I.ITEM_SER_NO,'')
						    AND ISNULL(T.PO_NO_IN,'')	  = ISNULL(LP_I.PO_NO,''))
			        LEFT JOIN TL_CTRT_CUST_ITEM_LOT D ON (T.CTRT_NO = D.CTRT_NO AND T.ITEM_SYS_NO = D.ITEM_SYS_NO AND T.LOT_ID = D.LOT_ID)
			        LEFT JOIN TL_CTRT_CUST_ITEM CI ON (T.CTRT_NO = CI.CTRT_NO AND T.ITEM_SYS_NO =  CI.ITEM_SYS_NO)
			  WHERE 1=1
		) TT LEFT JOIN TL_TRO TRO ON (TT.DLV_ORD_NO_ORG = TRO.TRO_NO AND TT.TRO_SEQ = TRO.TRO_SEQ)
	</select>
	<!-- Alloc & Complete popup (E) -->
	<select id="checkDuplicateOrderNo" parameterClass="java.util.HashMap" resultClass="String">
	/* WHInbk.checkDuplicateOrderNo */
	SELECT TOP 1 CUST_ORD_NO from TL_WH_OB WHERE CUST_ORD_NO = #cust_ord_no# AND WH_CD = #wh_cd# AND CTRT_NO = #ctrt_no# AND BK_STS_CD != 'C'
	</select>
	
		
	<!-- Freight 정보 조회 -->
	<typeAlias type="com.clt.apps.fis.wms.rate.dto.Grd02RTDetailListVO" alias="Grd02RTDetailListVO"/>
	<select id="searchWHOutFreightList" resultClass="Grd02RTDetailListVO">
		/* wms.WHOutMgmt.searchWHOutFreightList */
		SELECT frt.WOB_BK_NO
			  ,frt.CUST_ORD_NO
		      ,frt.WH_CD
		      ,frt.CTRT_NO
		      ,frt.WIB_BK_FRT_SEQ
		      ,frt.OFC_CD
		      ,frt.CUST_CD
		      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
		      <!-- ,frt.RATE_TP_CD -->
		      ,'OUT' AS RATE_TP_CD
		      ,frt.FRT_CD
		      ,frt.FRT_NM
		      ,frt.UNIT_CD
		      ,frt.UNIT_CD2
		      ,frt.CURR_CD
		      ,frt.UNIT_PRICE
		      ,frt.QTY
		      ,frt.INV_AMT
		      ,frt.INV_TTL_AMT
		      ,frt.ITEM_CD
		      ,frt.STS_CD
		      ,frt.CLS_NO
		      ,frt.CLS_DT
		      ,inv.INV_NO 
		      ,inv.INV_SEQ
		      ,frt.SELL_BUY_TP_CD
		      ,frt.FRT_SEQ
		      ,frt.RATING_FLG
		      ,frt.USE_FLG
		      ,frt.DELT_FLG
		      ,frt.RGST_USRID
		      ,frt.RGST_OFC_CD
		      ,frt.RGST_TMS
		      ,frt.MODI_USRID
		      ,frt.MODI_OFC_CD
		      ,frt.MODI_TMS
		      <!-- #3388-[BINEX WMS4.0] RATE IN & OUT MINIMUM CHARGE - Vien.Cao -->
		      ,frt.RMK
		  FROM TL_CTRT_CUST_FRT frt
 			   LEFT OUTER JOIN TB_INV_DTL inv          
            	ON frt.INV_SEQ = inv.INV_SEQ   
		 WHERE 1 = 1
	 		<isNotEmpty property="wob_bk_no">   
			AND FRT.WOB_BK_NO = #wob_bk_no#
			</isNotEmpty>
			<isEmpty property="wob_bk_no">
			 	 <isNotEmpty property="cust_ord_no">   
				 AND frt.CUST_ORD_NO = #cust_ord_no#
				 </isNotEmpty>
			</isEmpty>
		   AND frt.USE_FLG = 'Y'
		   AND frt.DELT_FLG = 'N'
		   <isEqual property="s_rating_cd" compareValue="N">
		   AND frt.RATING_FLG != 'Y'
		   </isEqual>
		   <isEqual property="type" compareValue="IN">
		   AND frt.RATE_TP_CD IN ('IN','IAO')
		   </isEqual>
		   <isEqual property="type" compareValue="OUT">
		   AND frt.RATE_TP_CD IN ('OUT','IAO')
		   </isEqual>
		 ORDER BY frt.WIB_BK_FRT_SEQ
	</select>
	
	<select id="searchWHOutMgmtFreightList"  resultClass="Grd02RTDetailListVO">
        /** wms.WHOutMgmt.searchWHOutMgmtFreightList **/
        SELECT A.CTRT_NO
        	, B.LOC_CD AS WH_CD
        	, #wob_bk_no# AS wob_bk_no
        	, #cust_ord_no# AS CUST_ORD_NO
	        , A.CUST_CD
	        , dbo.TL_GET_CUST_NM(A.CUST_CD) AS CUST_NM
	        , A.OFC_CD
	        , A.FRT_CD
	        , A.FRT_NM
	        , A.UNIT_CD
	        , A.CURR_CD
	        , A.UNIT_PRICE
	        , 'OUT' AS RATE_TP_CD
	        , A.UNIT_CD2
	        , A.ITEM_CD
	        <!-- #3388-[BINEX WMS4.0] RATE IN & OUT MINIMUM CHARGE - Vien.Cao -->
	        , A.RMK
	        , A.EFF_FR_DT
	        , A.EFF_TO_DT
	        , '1' AS QTY
	        , '' AS INV_AMT
	        , '' AS INV_TTL_AMT
	        , '' AS CLS_NO
	        , '' AS CLS_DT
	        , '' AS INV_SEQ
	        , '' AS SELL_BUY_TP_CD
	        , '' AS FRT_SEQ
	        , 'Y' AS RATING_FLG
        FROM TL_CTRT_RATE_DTL A, TL_CTRT_RATE B
        WHERE 1=1
        AND A.CTRT_NO = B.CTRT_NO
        AND A.SB_CLS_CD = B.SB_CLS_CD
        AND A.RATE_NO = B.RATE_NO
        AND A.CTRT_NO = #ctrt_no#
        <isNotEmpty property="cust_cd">
        AND A.CUST_CD = #cust_cd#
        </isNotEmpty>
        AND B.LOC_CD = #wh_cd#
        AND A.RATE_TP_CD IN ('OUT','IAO') 
        AND #outbound_dt# BETWEEN A.EFF_FR_DT AND A.EFF_TO_DT
        ORDER BY A.FRT_CD, A.UNIT_CD, A.ITEM_CD desc
    </select>
    
    <typeAlias alias="Grd02WHInMgmtVO" type="com.clt.apps.fis.wms.inboundmanagement.dto.Grd02WHInMgmtVO"/>
	<select id="searchWHOutItemFrtList"  resultClass="Grd02WHInMgmtVO">
        /** wms.WHOutMgmt.searchWHOutItemFrtList **/
		SELECT
				TTT.CTRT_NO,
				<isNotEmpty property="f_unitCd">
				TTT.LIC_PLAT_NO,
				</isNotEmpty>
				<isEmpty property="f_unitCd">
				'' AS LIC_PLAT_NO,
				</isEmpty>
				SUM(TTT.SHIP_ITEM_EA_QTY) TOT_SND_EA_QTY,
				<!-- SUM(TTT.ITEM_EA_QTY/TTT.PKG_LV2_QTY) TOT_RCV_PKGQTY, -->
				SUM(TTT.TOT_RCV_PKGQTY) TOT_RCV_PKGQTY,
				SUM(TTT.ITEM_CBM) TOT_SND_ITEM_CBM,  
				SUM(TTT.ITEM_CBF) TOT_SND_ITEM_CBF,
				SUM(TTT.ITEM_GRS_KGS) TOT_SND_ITEM_GRS_KGS,
				SUM(TTT.ITEM_GRS_LBS) TOT_SND_ITEM_GRS_LBS,
				SUM(TTT.ITEM_NET_KGS) TOT_SND_ITEM_NET_KGS,
				SUM(TTT.ITEM_NET_LBS) TOT_SND_ITEM_NET_LBS,
				0 TOT_DMG_EA_QTY,
				0 TOT_DMG_PKGQTY,
				0 TOT_DMG_ITEM_CBM,  
				0 TOT_DMG_ITEM_CBF,
				0 TOT_DMG_ITEM_GRS_KGS,
				0 TOT_DMG_ITEM_GRS_LBS,
				0 TOT_DMG_ITEM_NET_KGS,
				0 TOT_DMG_ITEM_NET_LBS
		    FROM		  
			  (
SELECT T.WH_CD, T.WH_NM,  T.CTRT_NO, T.CTRT_NM, T.WOB_BK_NO,  T.SAO_SYS_NO,
		     T.ITEM_SYS_NO,  T.ITEM_SEQ,  T.ITEM_CD,  T.ITEM_NM, T.LOT_NO,
		     T.ITEM_EA_QTY, T.ITEM_PKGUNIT,  T.ITEM_PKGQTY,  T.STOCK_QTY
		     , SUM(T.ITEM_CBM) AS ITEM_CBM
		     , SUM(T.ITEM_CBF) AS ITEM_CBF
		     , SUM(T.ITEM_GRS_KGS) AS ITEM_GRS_KGS
		     , SUM(T.ITEM_GRS_LBS) AS ITEM_GRS_LBS
		     , SUM(T.ITEM_NET_KGS) AS ITEM_NET_KGS
		     , SUM(T.ITEM_NET_LBS) AS ITEM_NET_LBS,   
		     T.INBOUND_DT,  T.EXP_DT, T.LOT_04, T.LOT_05, T.FIX_LOT_ID, T.LIC_PLAT_NO, T.SAO_NO,
		     T.CURR_CD, T.UNIT_PRICE, T.FIX_LOC_CD, T.FIX_LOC_NM, T.PKG_LV1_QTY, 	     
		     T.PKG_LV1_UNIT_CD,	 T.PKG_LV1_UNIT_NM, T.PKG_LV2_QTY, T.PKG_LV2_UNIT_CD,
		     T.PKG_LV2_UNIT_NM,  T.PKG_LV3_QTY, T.PKG_LV3_UNIT_CD, T.PKG_LV3_UNIT_NM,
		     T.PKG_LV4_QTY, T.PKG_LV4_UNIT_CD, T.LV1_CBM, T.LV1_CBF, T.LV1_GRS_KGS,
		     T.LV1_GRS_LBS, T.LV1_NET_KGS, T.LV1_NET_LBS, T.PKG_INFO, T.INVALID_YN,
		     T.ROW_ADD, T.ROW_DEL, T.ROW_ADD_QTY, T.BK_STS_CD, MAX(T.WAVE_NO) AS WAVE_NO, T.SMP_WAVE_FLG, T.ITEM_UNIT_PRICE      
		    , SUM(T.SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY       
			, SUM(T.INR_QTY) AS INR_QTY, T.PO_NO, T.ITEM_SER_NO
			, T.WH_LOC_CD, T.WH_LOC_CD_NM,
			T.EQ_TPSZ_CD,
	         T.EQ_NO,
	         T.SEAL_NO
			,CASE WHEN ISNULL(T.PKG_LV2_QTY,0) = 0 THEN 0
				 ELSE SUM(T.SHIP_ITEM_EA_QTY)/ISNULL(T.PKG_LV2_QTY,0) 
			 END TOT_RCV_PKGQTY
			,T.OUTBOUND_DT 
		FROM (	
			SELECT B.WH_CD,
			             dbo.TL_GET_LOC_NM(B.WH_CD) AS WH_NM, 
			             B.CTRT_NO,
			             dbo.TL_GET_CTRT_NM(B.CTRT_NO) AS CTRT_NM,
			             B.WOB_BK_NO,
				         I.SAO_SYS_NO,
				         I.ITEM_SYS_NO,
				         I.ITEM_SEQ,
				         I.ITEM_CD,
				         I.ITEM_NM,
				         I.LOT_NO,
				         I.ITEM_EA_QTY,
				         I.ITEM_PKGUNIT,
				         I.ITEM_PKGQTY,
				         (SELECT ISNULL (SUM (ISNULL (V.IN_QTY, 0) - ISNULL (V.ALLC_QTY, 0) - ISNULL (V.HOLD_QTY, 0) - ISNULL (V.DMG_QTY, 0) ), 0) 
				            FROM TL_WH_INV_ITEM V
				           WHERE V.CTRT_NO = B.CTRT_NO
				             AND V.ITEM_SYS_NO = I.ITEM_SYS_NO
				             AND NOT EXISTS
				                    (SELECT 'X'
				                       FROM TL_WH_ALLC AL
				                      WHERE AL.WOB_BK_NO = B.WOB_BK_NO)) AS STOCK_QTY
				         , ISNULL(ALLC_ITM.PICK_ITEM_CBM, I.ITEM_CBM) AS ITEM_CBM
			             , ISNULL(ALLC_ITM.PICK_ITEM_CBF, I.ITEM_CBF) AS ITEM_CBF
			             , ISNULL(ALLC_ITM.PICK_ITEM_GRS_KGS, I.ITEM_GRS_KGS) AS ITEM_GRS_KGS
			             , ISNULL(ALLC_ITM.PICK_ITEM_GRS_LBS, I.ITEM_GRS_LBS) AS ITEM_GRS_LBS
			             , ISNULL(ALLC_ITM.PICK_ITEM_NET_KGS, I.ITEM_NET_KGS) AS ITEM_NET_KGS
			             , ISNULL(ALLC_ITM.PICK_ITEM_NET_LBS, I.ITEM_NET_LBS) AS ITEM_NET_LBS,   
				         CASE WHEN I.INBOUND_DT = '' THEN LOT.LOT_ATTRIB_01 ELSE I.INBOUND_DT END AS INBOUND_DT,
				         I.EXP_DT,
				         I.LOT_04,
				         I.LOT_05,
				         I.FIX_LOT_ID,
				         ALLC_ITM.LIC_PLAT_NO,
				         I.SAO_NO,
				         I.CURR_CD,
				         I.UNIT_PRICE,
				         I.FIX_LOC_CD,
				         I.EQ_TPSZ_CD,
				         I.EQ_NO,
				         I.SEAL_NO,
				         dbo.TL_GET_WH_LOC_NM(B.WH_CD,I.FIX_LOC_CD) AS FIX_LOC_NM,
			             ISNULL(CI.PKG_LV1_QTY, 0)     AS PKG_LV1_QTY, 	     
		                 CI.PKG_LV1_UNIT_CD AS PKG_LV1_UNIT_CD,	
		                 dbo.TL_GET_PKG_NM(CI.PKG_LV1_UNIT_CD)	AS PKG_LV1_UNIT_NM,
		                 ISNULL(CI.ITEM_PKGBASEQTY, 0) AS PKG_LV2_QTY,
		                 CI.ITEM_PKGUNIT    AS PKG_LV2_UNIT_CD,
		                 dbo.TL_GET_PKG_NM(CI.ITEM_PKGUNIT)	AS PKG_LV2_UNIT_NM, 
		                 ISNULL(CI.PKG_LV3_QTY, 0)     AS PKG_LV3_QTY,
		                 CI.PKG_LV3_UNIT_CD AS PKG_LV3_UNIT_CD,
		                 (SELECT	lic_plat_desc FROM	TL_WH_LIC_PLAT_UT_CD PKG WHERE	PKG.lic_plat_ut_cd = ISNULL(CI.PKG_LV3_UNIT_CD, '')) AS PKG_LV3_UNIT_NM,
		                 ISNULL(CI.PKG_LV4_QTY, 0)     AS PKG_LV4_QTY,
		                 CI.PKG_LV4_UNIT_CD AS PKG_LV4_UNIT_CD,		         
				         ISNULL (CI.LV1_CBM, 0) AS LV1_CBM,
				         ISNULL (CI.LV1_CBF, 0) AS LV1_CBF,
				         ISNULL (CI.LV1_GRS_KGS, 0) AS LV1_GRS_KGS,
				         ISNULL (CI.LV1_GRS_LBS, 0) AS LV1_GRS_LBS,
				         ISNULL (CI.LV1_NET_KGS, 0) AS LV1_NET_KGS,
				         ISNULL (CI.LV1_NET_LBS, 0) AS LV1_NET_LBS,
				         dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
		                                       , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD) AS PKG_INFO,
		                 I.INVALID_YN,
		                 '+' AS ROW_ADD,
		                 CASE WHEN  B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN '-' ELSE ''END AS ROW_DEL,
		                 1 AS ROW_ADD_QTY,
		                 CASE WHEN B.BK_STS_CD ='I' AND ISSU.WOB_OUT_NO IS NOT NULL THEN 'X'
		                      WHEN B.BK_STS_CD ='I' AND (SELECT COUNT (1)
		                      	                          FROM TL_WH_LOAD_PLAN LP
				                                             , TL_WH_LOAD_PLAN_ITEM LPI
				                                          WHERE LP.LP_NO = LPI.LP_NO		                                     
				                                            AND B.WOB_BK_NO = LPI.WOB_BK_NO) > 0 THEN 'X'
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NULL THEN 'I'
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') != 'Y' THEN 'A'            
		                      WHEN B.BK_STS_CD ='I' AND ALLC.WALC_NO IS NOT NULL AND ISNULL(ALLC.PICKD_FLG,'N') = 'Y' THEN 'P'
		                      ELSE B.BK_STS_CD END AS BK_STS_CD,
		                      WV_OB.WAVE_NO,
		                      (SELECT ISNULL(SMP_WAVE_FLG, 'N') FROM TL_WH_WAVE WAVE WHERE WAVE.WAVE_NO = WV_OB.WAVE_NO) AS SMP_WAVE_FLG,
		                      CI.UNIT_PRICE AS ITEM_UNIT_PRICE      
		                , CASE WHEN ISSU_ITEM.ISSU_ITEM_EA_QTY > 0 THEN ISSU_ITEM.ISSU_ITEM_EA_QTY 
		                  WHEN LP.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
						  WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LOAD_ITEM_EA_QTY
						  ELSE 0 END AS SHIP_ITEM_EA_QTY       
						, CASE WHEN ISSU_ITEM.ISSU_ITEM_EA_QTY > 0 THEN ISSU_ITEM.ISSU_ITEM_EA_QTY
						  WHEN LP.LP_NO IS NOT NULL THEN LP_I.LOAD_ITEM_EA_QTY
						  WHEN SHIP.CONSOL_NO IS NOT NULL THEN SHIP.LOAD_ITEM_EA_QTY
						  ELSE 0 END AS INR_QTY 
						, ALLC_ITM.PO_NO
						, ALLC_ITM.ITEM_SER_NO
						<!-- , (SELECT ITEM_SER_NO FROM TL_WH_RCV_ITEM RCV_ITEM 
								WHERE RCV_ITEM.WIB_BK_NO = ALLC_ITM.WIB_BK_NO 
									AND RCV_ITEM.PO_SYS_NO = ALLC_ITM.PO_SYS_NO
									AND RCV_ITEM.ITEM_SYS_NO = ALLC_ITM.ITEM_SYS_NO
									AND RCV_ITEM.ITEM_SEQ = ALLC_ITM.ITEM_SEQ
							) AS ITEM_SER_NO -->
						, ALLC_ITM.WH_LOC_CD
						, dbo.TL_GET_WH_LOC_NM(B.WH_CD, ALLC_ITM.WH_LOC_CD) AS  WH_LOC_CD_NM
						, ISSU_ITEM.ISSU_ITEM_EA_QTY
						, LP.OUTBOUND_DT
				    FROM TL_WH_OB B JOIN TL_WH_OB_ITEM I ON B.WOB_BK_NO = I.WOB_BK_NO
					   JOIN TL_CTRT_CUST_ITEM CI ON B.CTRT_NO = CI.CTRT_NO AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
					   LEFT JOIN TL_WH_ALLC ALLC
							  ON B.WOB_BK_NO = ALLC.WOB_BK_NO
					   LEFT JOIN TL_WH_ALLC_ITEM ALLC_ITM 
							ON ALLC.WALC_NO = ALLC_ITM.WALC_NO
							AND ALLC_ITM.SAO_SYS_NO = I.SAO_SYS_NO
							AND ALLC_ITM.ITEM_SYS_NO = I.ITEM_SYS_NO
							AND ALLC_ITM.ITEM_SEQ = I.ITEM_SEQ
					   LEFT JOIN TL_WH_PSUDO_LP_SHIP SHIP
							ON (ALLC_ITM.WOB_BK_NO   = SHIP.WOB_BK_NO
				           		AND ALLC_ITM.SAO_SYS_NO  = SHIP.SAO_SYS_NO
				           		AND ALLC_ITM.WIB_BK_NO   = SHIP.WIB_BK_NO
				           		AND ALLC_ITM.PO_SYS_NO   = SHIP.PO_SYS_NO
				           		AND ALLC_ITM.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
				           		AND ALLC_ITM.LOT_ID      = SHIP.LOT_ID
				           		AND ALLC_ITM.WH_LOC_CD   = SHIP.WH_LOC_CD
				           		AND ALLC_ITM.ITEM_SEQ    = SHIP.ITEM_SEQ
				           		AND 'G' 		  = SHIP.LP_STATUS 
				           		AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
					           	AND ISNULL(ALLC_ITM.PO_NO,'')		  = ISNULL(SHIP.PO_NO,'')
					           	AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,''))
				       LEFT JOIN TL_WH_LOAD_PLAN LP ON (SHIP.CONSOL_NO = LP.CONSOL_NO AND SHIP.LP_ID = LP.LP_ID AND SHIP.LP_SEQ = LP.LP_SEQ)
					   LEFT JOIN TL_WH_LOAD_PLAN_ITEM LP_I  
					        	ON (
					        	 	 	LP.LP_NO       = LP_I.LP_NO
							        AND B.WOB_BK_NO   = LP_I.WOB_BK_NO
								    AND I.SAO_SYS_NO  = LP_I.SAO_SYS_NO
								    AND ALLC_ITM.WIB_BK_NO   = LP_I.WIB_BK_NO
								    AND ALLC_ITM.PO_SYS_NO   = LP_I.PO_SYS_NO
								    AND I.ITEM_SYS_NO = LP_I.ITEM_SYS_NO
								    AND ALLC_ITM.LOT_ID      = LP_I.LOT_ID
								    AND ALLC_ITM.WH_LOC_CD   = LP_I.WH_LOC_CD
								    AND I.ITEM_SEQ    = LP_I.ITEM_SEQ
								    AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(LP_I.LIC_PLAT_NO,'')
									AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(LP_I.ITEM_SER_NO,'')
									AND ISNULL(ALLC_ITM.PO_NO,'')	  = ISNULL(LP_I.PO_NO,''))
					   LEFT JOIN TL_WH_ISSU ISSU ON ALLC.WALC_NO = ISSU.WALC_NO
					   LEFT JOIN TL_WH_WAVE_OB  WV_OB ON B.WOB_BK_NO = WV_OB.WOB_BK_NO
					   LEFT JOIN TL_CTRT_CUST_ITEM_LOT LOT ON B.CTRT_NO = LOT.CTRT_NO AND ALLC_ITM.ITEM_SYS_NO = LOT.ITEM_SYS_NO AND ALLC_ITM.LOT_ID = LOT.LOT_ID
					   LEFT JOIN TL_WH_ISSU_ITEM ISSU_ITEM ON ISSU_ITEM.WOB_BK_NO = B.WOB_BK_NO
							AND ISSU_ITEM.WALC_NO = ALLC_ITM.WALC_NO
						   AND ISSU_ITEM.WOB_BK_NO = ALLC_ITM.WOB_BK_NO
						   AND ISSU_ITEM.SAO_SYS_NO = ALLC_ITM.SAO_SYS_NO
						   AND ISSU_ITEM.WIB_BK_NO = ALLC_ITM.WIB_BK_NO
						   AND ISSU_ITEM.PO_SYS_NO = ALLC_ITM.PO_SYS_NO
						   AND ISSU_ITEM.ITEM_SYS_NO = ALLC_ITM.ITEM_SYS_NO
						   AND ISSU_ITEM.LOT_ID = ALLC_ITM.LOT_ID
						   AND ISSU_ITEM.WH_LOC_CD = ALLC_ITM.WH_LOC_CD
						   AND ISSU_ITEM.ITEM_SEQ = ALLC_ITM.ITEM_SEQ
						   
						   AND ISSU_ITEM.WOB_BK_NO = I.WOB_BK_NO
						   AND ISSU_ITEM.SAO_SYS_NO = I.SAO_SYS_NO
						   AND ISSU_ITEM.ITEM_SYS_NO = I.ITEM_SYS_NO
						   AND ISSU_ITEM.ITEM_SEQ = I.ITEM_SEQ
				   WHERE 1 = 1
	                   <isNotEmpty property="wob_bk_no">            
		               AND B.WOB_BK_NO = #wob_bk_no#
		               </isNotEmpty> 
		               <isEmpty property="wob_bk_no">  
					   		<isNotEmpty property="cust_ord_no">              	
		               		AND B.CUST_ORD_NO = #cust_ord_no#
		               		</isNotEmpty>
		               </isEmpty>
		               
			           <isNotEmpty property="f_item_cd">
	           		   AND I.ITEM_CD = #f_item_cd#
		               </isNotEmpty>  
		               <isNotEmpty property="rvs_item_cd">
	           		   AND I.ITEM_CD not in ($rvs_item_cd$)
		               </isNotEmpty>  
			       AND B.BK_STS_CD != 'C'
			) T
			GROUP BY T.WH_CD, T.WH_NM,  T.CTRT_NO, T.CTRT_NM, T.WOB_BK_NO, T.SAO_SYS_NO, T.ITEM_SYS_NO, T.ITEM_SEQ, T.ITEM_CD, T.ITEM_NM,
			     T.LOT_NO, T.ITEM_EA_QTY, T.ITEM_PKGUNIT, T.ITEM_PKGQTY, T.STOCK_QTY, T.INBOUND_DT, T.EXP_DT, T.LOT_04, T.LOT_05, T.FIX_LOT_ID, T.LIC_PLAT_NO,
			     T.SAO_NO,  T.CURR_CD, T.UNIT_PRICE, T.FIX_LOC_CD, T.FIX_LOC_NM, T.PKG_LV1_QTY,  T.PKG_LV1_UNIT_CD,	 T.PKG_LV1_UNIT_NM,
			     T.PKG_LV2_QTY,  T.PKG_LV2_UNIT_CD, T.PKG_LV2_UNIT_NM,  T.PKG_LV3_QTY, T.PKG_LV3_UNIT_CD, T.PKG_LV3_UNIT_NM, T.PKG_LV4_QTY,
			     T.PKG_LV4_UNIT_CD, T.LV1_CBM, T.LV1_CBF, T.LV1_GRS_KGS, T.LV1_GRS_LBS, T.LV1_NET_KGS, T.LV1_NET_LBS, T.PKG_INFO,
			     T.INVALID_YN, T.ROW_ADD, T.ROW_DEL, T.ROW_ADD_QTY,  T.BK_STS_CD, T.SMP_WAVE_FLG, T.ITEM_UNIT_PRICE, T.PO_NO
			     ,T.ITEM_SER_NO, T.WH_LOC_CD, T.WH_LOC_CD_NM, T.EQ_TPSZ_CD, T.EQ_NO, T.SEAL_NO, T.OUTBOUND_DT
		) TTT
		WHERE 1 = 1
		  <isNotEmpty property="eff_fr_dt">
			AND TTT.OUTBOUND_DT BETWEEN #eff_fr_dt# AND #eff_to_dt#
	      </isNotEmpty>
	      <isNotEmpty property="f_lpNo_prop">
			AND isnull(TTT.LIC_PLAT_NO,'') != '' 
			<!-- AND TTT.PKG_LV3_UNIT_CD = #unit_cd2# -->
	      </isNotEmpty>
	      <isNotEmpty property="f_unitCd">
			AND isnull(TTT.LIC_PLAT_NO,'') != '' 
			AND TTT.PKG_LV3_UNIT_CD = #unit_cd2#
	      </isNotEmpty>
		GROUP BY
			TTT.CTRT_NO
			<isNotEmpty property="f_unitCd">
			,TTT.LIC_PLAT_NO
			</isNotEmpty>
    </select>
	
	<update id="modifyWHOutMgmForFreightDel">
	/*wms.WHOutMgmt.modifyWHOutMgmForFreightDel*/
		UPDATE TL_CTRT_CUST_FRT
		   SET DELT_FLG          	 = 'Y'
		     , USE_FLG          	 = 'N'
		     , MODI_USRID            = #modi_usrid#
	         , MODI_OFC_CD           = #modi_ofc_cd#
	         , MODI_TMS           	 = GETUTCDATE()
	     WHERE wob_bk_no             = #wob_bk_no#
	       AND WH_CD             	 = #wh_cd#
	       AND CTRT_NO           	 = #ctrt_no#
	       <isNotEmpty property="wib_bk_frt_seq">
		       AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	       </isNotEmpty>
	</update>
	
	<insert id="insertWHOutMgmForFreight">
	/*wms.WHOutMgmt.insertWHInMgmForFreight*/
	INSERT INTO TL_CTRT_CUST_FRT
           (WOB_BK_NO
           ,CUST_ORD_NO
           ,WH_CD
           ,CTRT_NO
           ,WIB_BK_FRT_SEQ
           ,OFC_CD
           ,CUST_CD
           ,RATE_TP_CD
           ,FRT_CD
           ,FRT_NM
           ,UNIT_CD
           ,UNIT_CD2
           ,CURR_CD
           ,UNIT_PRICE
           ,QTY
           ,INV_AMT
           ,INV_TTL_AMT
           ,ITEM_CD
           ,STS_CD
           ,CLS_NO
           ,CLS_DT
           ,INV_SEQ
           ,SELL_BUY_TP_CD
           ,FRT_SEQ
           ,RATING_FLG
           ,USE_FLG
           ,DELT_FLG
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           <!-- #3388-[BINEX WMS4.0] RATE IN & OUT MINIMUM CHARGE - Vien.Cao -->
           ,MODI_TMS
           ,RMK)
     VALUES
           (#wob_bk_no#
           ,#cust_ord_no#
           ,#wh_cd#
           ,#ctrt_no#
           ,(SELECT isnull(MAX(WIB_BK_FRT_SEQ),0) + 1 
           	 FROM TL_CTRT_CUST_FRT 
		     WHERE wob_bk_no             = #wob_bk_no#
		       AND WH_CD             	 = #wh_cd#
		       AND CTRT_NO           	 = #ctrt_no#  )
           ,#ofc_cd#
           ,#cust_cd#
           ,#rate_tp_cd#
           ,#frt_cd#
           ,#frt_nm#
           ,#unit_cd#
           ,#unit_cd2#
           ,#curr_cd#
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
           ,#item_cd#
           ,#sts_cd#
           ,#cls_no#
           ,#cls_dt#
           ,#inv_seq#
           ,#sell_buy_tp_cd#
           ,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
           ,#rating_flg#
           ,'Y'
           ,'N'
           ,#rgst_usrid#
           ,#rgst_ofc_cd#
           ,GETDATE()
           ,#modi_usrid#
           ,#modi_ofc_cd#
           ,GETUTCDATE()
           <!-- #3388-[BINEX WMS4.0] RATE IN & OUT MINIMUM CHARGE - Vien.Cao -->
           ,#rmk#
           )
    </insert>
	<update id="modifyWHOutMgmForFreightUp">
		/*wms.WHOutMgmt.modifyWHOutMgmForFreightUp*/
		UPDATE TL_CTRT_CUST_FRT
		   SET wob_bk_no = #wob_bk_no#
		   	  <!-- #4806 ** [Korex] WMS Be able to add Freight Items when In/Outbound file is "Booked" -->	
		   	  ,cust_ord_no = #cust_ord_no#
		      ,wh_cd = #wh_cd#
		      ,ctrt_no = #ctrt_no#
		      ,wib_bk_frt_seq = (SELECT CONVERT(NUMERIC(4, 0), CAST(REPLACE(#wib_bk_frt_seq#,',','') AS FLOAT)))
		      ,ofc_cd = #ofc_cd#
		      ,cust_cd = #cust_cd#
		      ,rate_tp_cd = #rate_tp_cd#
		      ,frt_cd = #frt_cd#
		      ,frt_nm = #frt_nm#
		      ,unit_cd = #unit_cd#
		      ,unit_cd2 = #unit_cd2#
		      ,curr_cd = #curr_cd#
		      ,unit_price = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
		      ,qty = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
		      ,inv_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
		      ,inv_ttl_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
		      ,item_cd = #item_cd#
		      ,sts_cd = #sts_cd#
		      ,cls_no = #cls_no#
		      ,cls_dt = #cls_dt#
		      ,inv_seq = #inv_seq#
		      ,sell_buy_tp_cd = #sell_buy_tp_cd#
		      ,frt_seq = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
		      ,rating_flg = #rating_flg#
		      <!-- ,use_flg = #use_flg#
		      ,delt_flg = #delt_flg# -->
		      ,rgst_usrid = #rgst_usrid#
		      ,rgst_ofc_cd = #rgst_ofc_cd#
		      ,rgst_tms = GETDATE()
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
		      <!-- #3388-[BINEX WMS4.0] RATE IN & OUT MINIMUM CHARGE - Vien.Cao -->
		      ,rmk = #rmk# 
	     WHERE wob_bk_no             = #wob_bk_no#
	       AND WH_CD             	 = #wh_cd#
	       AND CTRT_NO           	 = #ctrt_no#
	       <isNotEmpty property="wib_bk_frt_seq">
		       AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	       </isNotEmpty>
	</update>
	
	<!-- Container 및 Truck QTY정보 취득 -->
	<select id="searchWHOutItemTrkCntrList" resultClass="Grd02WHInMgmtVO">
		/* WHInbk.searchWHOutItemTrkCntrList */	
		SELECT <!-- COUNT(I_ITEM.EQ_TPSZ_CD) trk_cntr_cnt, -->
			   I_ITEM.EQ_NO, I_ITEM.EQ_TPSZ_CD
	    FROM
               TL_WH_OB OB                                      
               LEFT JOIN TL_WH_OB_ITEM I_ITEM                             
                       ON OB.WOB_BK_NO = I_ITEM.WOB_BK_NO                                      
               LEFT JOIN TL_CTRT_WH_LOC WH_LOC                           
                       ON OB.CTRT_NO = WH_LOC.CTRT_NO                           
                       AND OB.WH_CD = WH_LOC.LOC_CD                                  
		WHERE 1 = 1                                    
               <!-- AND OB.CUST_ORD_NO = #wob_bk_no#  -->
               AND OB.WOB_BK_NO = #wob_bk_no# 
			AND I_ITEM.EQ_TPSZ_CD = #eq_tpsz_cd#
		GROUP BY  I_ITEM.EQ_NO, I_ITEM.EQ_TPSZ_CD
 	</select>
 	<select id="checkDuplicateWaveNo" parameterClass="java.util.HashMap" resultClass="String">
	/* WHInbk.checkDuplicateWaveNo */
		SELECT WAVE_NO
		  FROM TL_WH_WAVE_OB A
		 WHERE A.WOB_BK_NO = #wob_bk_no#
	</select>
</sqlMap>