<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="acc.inv.invoice">

	<typeAlias alias="BlInfoVO" 	type="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO"/>	<!-- BL공통정보   -->
	<typeAlias alias="FrtVO" 		type="com.clt.apps.fis.acc.inv.invoice.dto.FrtVO"/>		<!-- FreightInfo   -->
	<typeAlias alias="InvListVO" 	type="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO"/>	<!-- InvoiceList   -->
	<typeAlias alias="PaidVO" 		type="com.clt.apps.fis.acc.inv.invoice.dto.PaidVO"/>	<!-- PaidHistoryInfo   -->
	<typeAlias alias="CntrLstVO"       type="com.clt.apps.fis.see.bmd.housebl.dto.CntrListVO"/>

	<!--LOCAL INVOICE HBL정보 조회  -->
    <select id="selectBL_INFO" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > selectBL_INFO  */
        SELECT  top 1
        		<!-- 6301 [JAPT] Mail sending function related request-->
        		bl.trnk_voy,
                bl.intg_bl_seq,
        		bl.ref_no,
        		bl.ref_ofc_cd,
        		(SELECT cnt_cd FROM TB_OFC WHERE OFC_CD = bl.ref_ofc_cd) AS cnt_cd,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
        		     ELSE mbl.bl_no
        		END AS mbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
        		     ELSE bl.bl_no
        		end AS hbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.lnr_bkg_no  ELSE mbl.lnr_bkg_no END     AS lnr_bkg_no,
        		bl.bl_no,
        		bl.sub_bl_no,
        		CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.trnk_vsl_nm
        		     ELSE bl.flt_no
        		END vsl_flt,
        		bl.pod_cd,
        		bl.pod_nm,
        		CONVERT(varchar(8), bl.etd_dt_tm, 120)   AS etd_dt_tm,
        		CONVERT(varchar(8), bl.eta_dt_tm, 120)   AS eta_dt_tm,
        		CONVERT(varchar(8), bl.f_eta_dt_tm, 120) AS f_eta_dt_tm,
        		bl.por_cd,
        		bl.por_nm,
        		shp.trdp_cd AS shpr_trdp_cd,      shp.trdp_nm AS shpr_trdp_nm,      shp.trdp_addr AS shpr_trdp_addr,
                cne.trdp_cd AS cnee_trdp_cd,      cne.trdp_nm AS cnee_trdp_nm,      cne.trdp_addr AS cnee_trdp_addr,
                ntf.trdp_cd AS ntfy_trdp_cd,      ntf.trdp_nm AS ntfy_trdp_nm,      ntf.trdp_addr AS ntfy_trdp_addr,
                act.trdp_cd AS act_shpr_trdp_cd,  act.trdp_nm AS act_shpr_trdp_nm,  act.trdp_addr AS act_trdp_addr,
                lnr.trdp_cd AS lnr_trdp_cd,       lnr.trdp_nm AS lnr_trdp_nm,
                ptn.trdp_cd AS prnr_trdp_cd,
                ptn.trdp_nm AS prnr_trdp_nm,
                ptn.trdp_addr AS prnr_trdp_addr,
                agent.trdp_cd AS agent_trdp_cd,   agent.trdp_nm AS agent_trdp_nm,   agent.trdp_addr AS agent_trdp_addr,
                third.trdp_cd AS third_trdp_cd,   third.trdp_nm AS third_trdp_nm,   third.trdp_addr AS third_trdp_addr,
                ptn2.trdp_cd AS prnr_trdp_cd2,
                ptn2.trdp_nm AS prnr_trdp_nm2,
                ptn2.trdp_addr AS prnr_trdp_addr2,
                carr.trdp_cd AS carr_trdp_cd,
                carr.trdp_nm AS carr_trdp_nm,
        		bl.rep_cmdt_nm,
        		bl.pck_qty,
        		bl.pck_ut_cd,
        		pcd.pck_nm 			AS pck_ut_nm,
        		bl.grs_wgt,
        		bl.grs_wgt1,
        		bl.chg_wgt,
                bl.chg_wgt1,
        		bl.meas,
        		bl.meas1,
				CASE WHEN bl.biz_clss_cd = 'H' AND bnd.bnd_clss_cd= 'O' THEN bl.cust_curr_cd
				     ELSE bl.curr_cd
				END AS curr_cd,
				bl.rmk,
				bl.mbl_ref_no,

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
				CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
					 THEN CONVERT(VARCHAR(10),GETDATE(),112)
					 ELSE bl.post_dt
				END AS post_dt,

				<!-- bl.post_dt, -->
				bl.agent_rt,
				bl.agent_amt,
				bl.agent_curr_cd,
				bl.cust_rt,
				bl.cust_amt,
				bl.cust_curr_cd,
				CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.exp_ref_no
				     ELSE bl.inv_no
				END exp_ref_no,
				bl.cust_ref_no,
				CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN CASE WHEN bl.air_sea_clss_cd = 'S' AND bnd.bnd_clss_cd = 'O' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd) ELSE '' END
		        END AS bill_to_cd,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN CASE WHEN bl.air_sea_clss_cd = 'S' AND bnd.bnd_clss_cd = 'O' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd) ELSE '' END
		        END AS bill_to_cd2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_cd
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_cd,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_cd
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_cd2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN CASE WHEN bl.air_sea_clss_cd = 'S' AND bnd.bnd_clss_cd = 'O' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd) ELSE '' END
		        END AS bill_to_nm,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN CASE WHEN bl.air_sea_clss_cd = 'S' AND bnd.bnd_clss_cd = 'O' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd) ELSE '' END
		        END AS bill_to_nm2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_nm
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_nm,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_nm
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_nm2,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
					(CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
						 THEN CONVERT(VARCHAR(10),GETDATE(),112)
						 ELSE bl.post_dt
					END)

				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_CD FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_cd,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_DT FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_dt,
				bl.air_sea_clss_cd,
				bl.biz_clss_cd,
				bnd.bnd_clss_cd,
				CASE WHEN bnd.bnd_clss_cd = 'I' AND bl.biz_clss_cd = 'H' THEN CASE WHEN #dc_agt_ref_no# = 'R' THEN mbl.imp_ref_no
																				   WHEN #dc_agt_ref_no# = 'M' THEN mbl.bl_no
																				   ELSE bl.imp_ref_no END
					 ELSE bl.imp_ref_no END as imp_ref_no,
				bl.profit_share,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ref_ofc_cd ) AS bl_cnt_cd,
				CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
			    END AS agent_ps_code,
				bl.inco_cd,
				bl.agent_chg_wgt,
				bl.agent_grs_wgt,
				bl.vol_wgt,
				bl.vol_meas,
				bl.pol_cd,
				bl.pol_nm,
				bl.del_cd,
				bl.del_nm,
				'' AS fnl_dest_nod_cd,
				bl.fnl_dest_loc_nm,
				(select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ref_ofc_cd and set_type = 'CLOGO_1') AS logo1,
				bl.agent_chg_wgt1, bl.agent_grs_wgt1, bl.customer_unit_chk,bl.agent_unit_chk, bl.shp_mod_cd,
				CASE WHEN bl.biz_clss_cd = 'H' THEN mbl.intg_bl_seq ELSE bl.intg_bl_seq END AS m_intg_bl_seq
         FROM   tb_intg_bl bl
         JOIN   tb_add_info_bnd bnd
           ON   bl.intg_bl_seq = bnd.intg_bl_seq
           <dynamic>
        	<isNotEmpty property="f_bnd_clss_cd">
           		AND bnd.bnd_clss_cd = #f_bnd_clss_cd#
           	</isNotEmpty>
           </dynamic>
           AND bnd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr act
           ON   bl.intg_bl_seq = act.intg_bl_seq  AND act.bl_trdp_tp_cd = 'S02' AND act.delt_flg = 'N'
LEFT OUTER JOIN tb_pck_ut_cd pcd
           ON   bl.pck_ut_cd   = pcd.pck_ut_cd    AND pcd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr shp
           ON   bl.intg_bl_seq = shp.intg_bl_seq  AND shp.bl_trdp_tp_cd = 'S01' AND shp.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr cne
           ON   bl.intg_bl_seq = cne.intg_bl_seq  AND cne.bl_trdp_tp_cd = 'C01' AND cne.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ntf
           ON   bl.intg_bl_seq = ntf.intg_bl_seq  AND ntf.bl_trdp_tp_cd = 'N01' AND ntf.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr lnr
           ON   bl.intg_bl_seq = lnr.intg_bl_seq  AND lnr.bl_trdp_tp_cd = 'L01' AND lnr.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn
           ON   bl.intg_bl_seq = ptn.intg_bl_seq  AND ptn.bl_trdp_tp_cd = 'P01' AND ptn.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr agent
           ON   bl.intg_bl_seq = agent.intg_bl_seq  AND agent.bl_trdp_tp_cd = 'A01' AND agent.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr third
           ON   bl.intg_bl_seq = third.intg_bl_seq  AND third.bl_trdp_tp_cd = 'T01' AND third.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn2
           ON   bl.intg_bl_seq = ptn2.intg_bl_seq  AND ptn2.bl_trdp_tp_cd = 'P03' AND ptn2.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr carr
           ON   bl.intg_bl_seq = carr.intg_bl_seq  AND carr.bl_trdp_tp_cd = 'B01' AND carr.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl_rlt rlt
            ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl mbl
            ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
        WHERE bl.delt_flg    = 'N'
        <dynamic>
        	<isNotEmpty property="f_biz_clss_cd">
        		AND bl.biz_clss_cd 	 = #f_biz_clss_cd#
        	</isNotEmpty>
        	<isNotEmpty property="f_air_sea_clss_cd">
        		AND bl.air_sea_clss_cd = #f_air_sea_clss_cd#
        	</isNotEmpty>
            <isNotEmpty property="f_intg_bl_seq">
                AND bl.intg_bl_seq = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="s_bl_no">
                AND bl.bl_no  = #s_bl_no#
            </isNotEmpty>
            <isNotEmpty property="s_ref_no">
                AND bl.ref_no  = #s_ref_no#
            </isNotEmpty>
        </dynamic>
    </select>





    <!--LOCAL INVOICE OTHER 정보 조회  -->
    <select id="selectOTHER_INFO" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > selectOTHER_INFO  */
        SELECT  top 1
                bl.OTH_SEQ,
        		bl.ref_no       AS oth_no,
        		bl.ref_no,
        		bl.ofc_cd		AS ref_ofc_cd,
        		bl.MBL_NO 		AS mbl_no,
        		bl.HBL_NO 		AS hbl_no,
        		bl.vsl_flt,
        		bl.pod_cd,
        		bl.pod_nm,
        		CONVERT(varchar(8), bl.etd_dt_tm, 120)   AS etd_dt_tm,
        		CONVERT(varchar(8), bl.eta_dt_tm, 120)   AS eta_dt_tm,
        		CONVERT(varchar(8), bl.feta_dt_tm, 120)  AS f_eta_dt_tm,
        		bl.POL_CD,
        		bl.POL_NM,
        		bl.CMDT_CD,
        		bl.CMDT_NM	    AS rep_cmdt_nm,
        		bl.pck_qty,
        		bl.pck_ut_cd,
        		bl.curr_cd,
        		(SELECT PCK_NM
        		   FROM tb_pck_ut_cd pcd
        		  WHERE bl.pck_ut_cd   = pcd.pck_ut_cd
        		    AND pcd.delt_flg = 'N'
        		) AS pck_ut_nm,
        		bl.GRS_WGT_K    AS grs_wgt,
        		bl.GRS_WGT_L    AS grs_wgt1,
        		bl.MEAS_M       AS meas,
        		bl.MEAS_F       AS meas1,

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
					CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
						 THEN CONVERT(VARCHAR(10),GETDATE(),112)
						 ELSE bl.post_dt
					END AS post_dt,

				<!-- bl.post_dt, -->
				bl.CUST_CD      AS bill_to_cd,
				bl.CUST_NM      AS bill_to_nm,
				bl.CUST_CD      AS ship_to_cd,
				bl.CUST_NM      AS ship_to_nm,
				bl.CUST_NM      AS cust_nm,
				bl.SHPR_NM      AS shpr_trdp_nm,
				bl.CNEE_NM	    AS cnee_trdp_nm,

				<!-- #680 [STARWAY] 214, 210 EDI RESULT / STATUS TO SHOW ON OPUS FWD -->
				bl.shpr_trdp_cd AS shpr_trdp_cd,
        	    bl.cnee_trdp_cd AS cnee_trdp_cd,
        	    <!-- #680 [STARWAY] 214, 210 EDI RESULT / STATUS TO SHOW ON OPUS FWD -->

				bl.cust_ref_no,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
					(CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
						 THEN CONVERT(VARCHAR(10),GETDATE(),112)
						 ELSE bl.post_dt
					END)

				<!-- bl.post_dt -->
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END             AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				(SELECT CR_TERM_CD
				   FROM TB_TRDP
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_cd,
				(SELECT CR_TERM_DT
				   FROM TB_TRDP
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_dt,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ofc_cd ) AS bl_cnt_cd,
				(SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS agent_ps_code
			    , (select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ofc_cd and set_type = 'CLOGO_1') AS logo1
         FROM   TB_OTH_SALES bl
        WHERE bl.delt_flg = 'N'
          AND bl.oth_seq  = #f_oth_seq#

    </select>

	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchWmsInfo" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > searchWmsInfo  */
        SELECT  top 1
                bl.WM_DOC_SEQ AS wms_seq,
        		bl.DOC_REF_NO       AS wms_no,
        		bl.DOC_REF_NO  AS ref_no,
        		bl.ofc_cd		AS ref_ofc_cd,
        		bl.MBL_NO 		AS mbl_no,
        		bl.HBL_NO 		AS hbl_no,
        		'' AS vsl_flt,
        		'' AS pod_cd,
        		'' AS pod_nm,
        		''   AS etd_dt_tm,
        		''  AS eta_dt_tm,
        		''  AS f_eta_dt_tm,
        		''  AS POL_CD,
        		''  AS POL_NM,
        		bl.CMDT_CD,
        		bl.CMDT_NM	    AS rep_cmdt_nm,
        		'' AS pck_qty,
        		'' AS pck_ut_cd,
        		bl.curr_cd,
        		'' AS pck_ut_nm,
        		''    AS grs_wgt,
        		''    AS grs_wgt1,
        		''       AS meas,
        		''       AS meas1,

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
					CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
						 THEN CONVERT(VARCHAR(10),GETDATE(),112)
						 ELSE bl.post_dt
					END AS post_dt,

				<!-- bl.post_dt, -->
				bl.CUST_CD      AS bill_to_cd,
				bl.CUST_NM      AS bill_to_nm,
				bl.CUST_CD      AS ship_to_cd,
				bl.CUST_NM      AS ship_to_nm,
				bl.CUST_NM      AS cust_nm,
				''      AS shpr_trdp_nm,
				''	    AS cnee_trdp_nm,
				bl.cust_ref_no,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN

				<!-- #376 [ZEN] OFFICE CODE > ACCCOUTING OPTION > INVOICE POST DAET OPTION -->
					(CASE WHEN (SELECT A.POST_DT_ACCT FROM TB_OFC A WHERE 1 = 1 AND A.OFC_CD = #ofc_cd# AND A.DELT_FLG = 'N' ) = 'TODAY'
						 THEN CONVERT(VARCHAR(10),GETDATE(),112)
						 ELSE bl.post_dt
					END)

				<!-- bl.post_dt -->
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END             AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				(SELECT CR_TERM_CD
				   FROM TB_TRDP
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_cd,
				(SELECT CR_TERM_DT
				   FROM TB_TRDP
				  WHERE TRDP_CD = bl.CUST_CD
				) 				AS term_dt,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ofc_cd ) AS bl_cnt_cd,
				(SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS agent_ps_code
			    , (select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ofc_cd and set_type = 'CLOGO_1') AS logo1
			    ,cntr_info AS wms_cntr_info
			    <!-- #3395 [BINEX WMS4.0] AR INVOICE TEMPLATE & ENTRY CHANGE -->
         		,CLS_HRD.F_REMARK          
    	FROM TB_WM_DOC_MST bl LEFT OUTER JOIN TL_WH_CLS_HRD CLS_HRD 
    		ON CLS_HRD.WM_DOC_SEQ = BL.WM_DOC_SEQ  
    		AND CLS_HRD.DELT_FLG = 'N'
        WHERE bl.delt_flg = 'N'
          AND bl.WM_DOC_SEQ  = #f_wms_seq#

    </select>
	<!-- 27532_[BINEX]HAWB 상 운임 Display 조건수정 (B/L Check Box에 체크된것만 추출-->
	<!-- LOCAL INVOICE Freight 목록 조회. BL 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: s_wms_no, frt_seq 검색조건 rollback -->
    <!-- JPT 테스트 결과 #8 B/L Freight Tab 에서 이동 시, VAT Code 가 세팅되야 함 2018.01.10 -->
    <select id="selectFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            /* CAST(CAST(fr.qty AS float )  AS varchar) AS qty, */
				 CASE WHEN RTRIM(ISNULL(WMS_SEQ,'')) = '' THEN CAST(CAST(fr.qty AS float )  AS varchar)
	        		  ELSE CAST(fr.qty AS varchar)
				 END qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
				 fr.vat_rt vat_rt,
				 <!-- JPT 테스트 결과 #8 B/L Freight Tab 에서 이동 시, VAT Code 가 세팅되야 함 -->
				 case when fr.vat_rt_cd is null OR fr.vat_rt_cd = ''
	                  then (select top 1 frt_cd from tb_frt_cd with(nolock) where frt_clss_cd = 'VAT' and tax_rate = fr.vat_rt)
			          else fr.vat_rt_cd
	             end AS vat_rt_cd,
		         fd.whld_tax_rate AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 '' as inv_rmk,
				 idt.modi_tms,
				 fr.wms_seq
           FROM  tb_frt    fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
<!--  #1800 [PATENT] A/R Invoice Split Function -->
          <isEqual property="chk_split" compareValue="Y">
          WHERE 1=1
          </isEqual>
		  <isNotEqual property="chk_split" compareValue="Y">
          WHERE  fr.delt_flg 		= 'N'
          </isNotEqual>
          <isNotEmpty property="f_oth_seq">
          	AND fr.oth_seq     = #f_oth_seq#
          </isNotEmpty>
          <isNotEmpty property="f_intg_bl_seq">
          	AND fr.intg_bl_seq     = #f_intg_bl_seq#
          </isNotEmpty>
          <isNotEmpty property="f_wms_seq">
          	AND fr.wms_seq     = #f_wms_seq#
          </isNotEmpty>
          <isNotNull property="chk_fr_trdp_cd">
          	 <isNotEmpty property="chk_fr_trdp_cd">
				AND fr.trdp_cd = #chk_fr_trdp_cd#
			  </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
			  <isNotEmpty property="chk_fr_inv_curr_cd">
				AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
			  </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
		 	   <isNotEmpty property="chk_fr_frt_seq">
				AND fr.frt_seq IN ( $chk_fr_frt_seq$ )
			  </isNotEmpty>
		  </isNotNull>
<!-- 		  <isEqual property="f_bnd_clss_cd" compareValue="O">
		  	AND fr.frt_term_cd = 'PP'
		  </isEqual>
		  <isEqual property="f_bnd_clss_cd" compareValue="I">
		  	AND fr.frt_term_cd = 'CC'
		  </isEqual> -->
            AND  fr.sell_buy_tp_cd  = 'S'
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
  	   ORDER BY  fr.frt_seq ASC
    </select>
    <!-- CR/DB INVOICE Freight 목록 조회. BL 정보   -->
    <select id="selectCRDBFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectCRDBFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,
                 CASE WHEN fr.sell_buy_tp_cd = 'D' THEN fr.ru
                      WHEN fr.sell_buy_tp_cd = 'C' THEN fr.agent_ru
                 END AS ru,
                 fr.agent_ru,
		  		 fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 CASE WHEN isnull(fr.agent_amt,0) = 0 THEN isnull(fr.inv_amt,  0)
		  		      ELSE isnull(fr.agent_amt,0)
		  		 END AS agent_amt,
		  		 CASE WHEN fr.frt_term_cd = 'CC' THEN isnull(fr.cr_amt,0)
		  		      ELSE 0
		  		 END AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
		         idt.JNR_YN,
  				 idt.JNR_DT,
   				 idt.CLS_YN,
   				 idt.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1
   				 LEFT OUTER JOIN TB_INV TB2
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,
 				 idt.modi_tms
				 <!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영  -->
				 ,fr.locl_curr_cd
        		 ,convert(float,fr.locl_xcrt) as locl_xcrt
        		 ,convert(float,fr.locl_amt)  as locl_amt				 
				  				 
           FROM  tb_frt    fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL bl
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON  bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
          <isNotEmpty property="f_oth_seq">
          	AND  fr.oth_seq     = #f_oth_seq#
          </isNotEmpty>
          <isEmpty property="f_oth_seq">
          	AND  fr.intg_bl_seq = #f_intg_bl_seq#
          </isEmpty>
          <isNotNull property="chk_fr_trdp_cd">
          	 <isNotEmpty property="chk_fr_trdp_cd">
	        	 AND fr.trdp_cd = #chk_fr_trdp_cd#
	          </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
			 <isNotEmpty property="chk_fr_inv_curr_cd">
	        	 AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
	          </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
		  	 <isNotEmpty property="chk_fr_frt_seq">
	        	  AND fr.frt_seq IN ( $chk_fr_frt_seq$ )
	          </isNotEmpty>
		  </isNotNull>
            AND  fr.sell_buy_tp_cd  IN ('C','D')
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
	   ORDER BY  fr.frt_seq ASC
    </select>





    <!-- AP PAYABLE 목록 조회. BL 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: s_wms_no, frt_seq 검색조건 rollback -->
    <select id="selectAPFRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPFRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,  		fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            /* CAST(CAST(fr.qty AS float )  AS varchar) AS qty, */
				 CASE WHEN RTRIM(ISNULL(WMS_SEQ,'')) = '' THEN CAST(CAST(fr.qty AS float )  AS varchar)
	        		  ELSE CAST(fr.qty AS varchar)
				 END qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         <!-- #3932  -->
				 <!-- 누락 JPT 테스트 결과 #8 B/L Freight Tab 에서 이동 시, VAT Code 가 세팅되야 함 -->
				 fr.vat_rt vat_rt,
				 case when fr.vat_rt_cd is null OR fr.vat_rt_cd = ''
	                  then (select top 1 frt_cd from tb_frt_cd with(nolock) where frt_clss_cd = 'VAT' and tax_rate = fr.vat_rt)
			          else fr.vat_rt_cd
	             end AS vat_rt_cd,
				 fr.vat_rt_cd AS vat_rt_cd,
		         fd.whld_tax_rate AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 '' as inv_rmk,
		         idt.JNR_YN,
  				 idt.JNR_DT,
   				 idt.CLS_YN,
   				 idt.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1
   				 LEFT OUTER JOIN TB_INV TB2
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,
   				 fr.inv_post_dt AS frt_inv_post_dt,
   				 idt.modi_tms,
   				 fr.wms_seq
				 <!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영  -->
				 ,fr.locl_curr_cd
        		 ,convert(float,fr.locl_xcrt) as locl_xcrt
        		 ,convert(float,fr.locl_amt)  as locl_amt				 
           FROM  tb_frt    fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
            WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_oth_seq">
          		AND  fr.oth_seq     = #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_intg_bl_seq">
          	    AND  fr.intg_bl_seq = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
	          	AND fr.wms_seq     = #f_wms_seq#
	        </isNotEmpty>
            <isNotNull property="chk_fr_trdp_cd">
               <isNotEmpty property="chk_fr_trdp_cd">
	          AND fr.trdp_cd = #chk_fr_trdp_cd#
	       	 </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_inv_curr_cd">
		  	  <isNotEmpty property="chk_fr_inv_curr_cd">
	         	AND fr.inv_curr_cd = #chk_fr_inv_curr_cd#
	       	 </isNotEmpty>
		  </isNotNull>
		  <isNotNull property="chk_fr_frt_seq">
		 	  <isNotEmpty property="chk_fr_frt_seq">
	         		AND fr.frt_seq IN ( $chk_fr_frt_seq$ )
	       	 </isNotEmpty>
		  </isNotNull>
		  <isEqual property="f_bnd_clss_cd" compareValue="O">
		  	AND fr.frt_term_cd = 'PP'
		  </isEqual>
		  <isEqual property="f_bnd_clss_cd" compareValue="I">
		  	AND fr.frt_term_cd = 'CC'
		  </isEqual>
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  (fr.inv_seq IS NULL OR fr.inv_seq = '')
  	   ORDER BY  fr.frt_seq ASC
    </select>


    <!-- local invoice Freight 목록 조회. INVOICE 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: frt_seq 검색조건 rollback -->
    <select id="selectINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            /* CAST(CAST(fr.qty AS float )  AS varchar) AS qty, */
				 CASE WHEN RTRIM(ISNULL(WMS_SEQ,'')) = '' THEN CAST(CAST(fr.qty AS float )  AS varchar)
	        		  ELSE CAST(fr.qty AS varchar)
				 END qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt AS vat_rt,
		         fr.vat_rt_cd AS vat_rt_cd,
		         fr.whld_vat_rt AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.inv_ship_trdp_cd,
				 fr.inv_ship_trdp_cd_nm,
				 fr.cust_ref_no,
				 fr.oth_seq,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.tax_bil_flg,
				 fr.attn_to,
				 fr.tax_no,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1 with(nolock)
   				 LEFT OUTER JOIN TB_INV TB2 with(nolock)
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,


   				 <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
   				 (case
   				 when fr.blck_modi_tms IS null then idt.modi_tms
   				 when idt.modi_tms > fr.blck_modi_tms then idt.modi_tms
   				 else fr.blck_modi_tms end)  modi_tms,

   				 fr.wms_seq,

   				 <!-- #755 [ACL] ACCOUNTING VAT 기능 점검 사항 -->
   				 isnull((SELECT tax_flg FROM tb_frt_cd with(nolock) WHERE frt_clss_cd = 'VAT' AND use_flg = 'Y' AND delt_flg  = 'N' AND frt_cd = fr.vat_rt_cd), 'N') as tax_flg,

   				 <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
   				 fr.vat_rt1, fr.vat_rt2, fr.vat_rt_cd1, fr.vat_rt_cd2,
   				 <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
   				 fr.vchr_no, fr.vchr_tp_cd, fr.s_finc_ofc_cd
   				 <!-- Testing Summary for Patent_02May -->
        		,(SELECT max(jnr_mst.RCV_TP_CD) FROM  TB_JNR_MST jnr_mst with(nolock) LEFT JOIN TB_JNR_DTL jnr with(nolock) ON jnr_mst.jnr_no = jnr.jnr_no
					WHERE  isnull(jnr_mst.DELT_FLG,'N') != 'Y'
					AND isnull(jnr_mst.void_yn, '') = 'N'
					AND isnull(jnr.DELT_FLG, 'N') != 'Y'
					AND INV_SEQ = fr.inv_seq
				 ) as rcv_tp_cd
				 
				 <!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영  -->
				 ,fr.locl_curr_cd
        		 ,convert(float,fr.locl_xcrt) as locl_xcrt
        		 ,convert(float,fr.locl_amt)  as locl_amt
           FROM  (SELECT a.*, b.inv_no,  b.inv_dt,		 b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,	 c.inv_rmk,		 b.inv_aply_curr_cd,
           				 c.trdp_cd 		AS inv_trdp_cd,      
           				 
						 <!-- #3488 Accounting Multi Language 적용 --> 
			   			 CASE
						 	WHEN (SELECT opt_val FROM TB_SYS_OPT with(nolock) WHERE opt_key = 'MULTI_LANGUAGE' ) = 'Y' THEN tp.LOCL_NM
				 		 	ELSE tp.ENG_NM
			   			 END AS inv_trdp_cd_nm,
           				 
           				 c.ship_trdp_cd AS inv_ship_trdp_cd, c.ship_trdp_nm AS inv_ship_trdp_cd_nm,
           				 b.cust_ref_no,  b.last_pay_dt,	 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 c.tax_bil_flg,
           				 c.attn_to,
           				 c.tax_no,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT
           				 ,b.vchr_no, b.vchr_tp_cd, c.finc_ofc_cd as s_finc_ofc_cd
           				 ,(select max(tidb.modi_tms) from tb_inv_dtl_blck tidb with(nolock) where tidb.inv_seq = a.inv_seq) as blck_modi_tms

                    FROM tb_frt a with(nolock)
                 LEFT OUTER JOIN TB_INV_DTL b with(nolock)
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c with(nolock)
                              ON a.INV_SEQ = c.inv_seq AND c.delt_flg = 'N'
                 LEFT OUTER JOIN  tb_trdp   tp with(nolock)
		     				  ON c.trdp_cd = tp.trdp_cd AND tp.delt_flg = 'N'
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK with(nolock)) BLCK
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1
                   WHERE  a.delt_flg 		= 'N'
                   <isNotEmpty property="f_intg_bl_seq">
                     AND  a.intg_bl_seq     = #f_intg_bl_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_oth_seq">
                   	 AND  a.oth_seq			= #f_oth_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_wms_seq">
		    	 	AND a.wms_seq = #f_wms_seq#
		    	   </isNotEmpty>
					 AND  a.sell_buy_tp_cd  = 'S'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp with(nolock)
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd with(nolock)
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl with(nolock)
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt with(nolock)
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL with(nolock)
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR with(nolock)
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt with(nolock)
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
    	 		AND fr.wms_seq = #f_wms_seq#
    	    </isNotEmpty>

            AND  fr.sell_buy_tp_cd  = 'S'
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>




    <!-- CR/DB invoice Freight 목록 조회. INVOICE 정보   -->
    <select id="selectCRDBINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectCRDBINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            fr.qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,
		  		 CASE WHEN fr.frt_term_cd = 'CC' THEN isnull(fr.cr_amt,0)
		  		      ELSE 0
		  		 END AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 fr.inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 fr.inv_rmk,
				 fr.profit_share,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.cust_ref_no,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.intg_bl_seq_2,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.tax_bil_flg,
				 <!-- #6870 [Star Mexico] Edit Invoice after File block / Deposit & Payment Role Management (Zend#4128) -->
				 fr.tax_no,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1
   				 LEFT OUTER JOIN TB_INV TB2
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,

   				 <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
   				 (case
   				 when fr.blck_modi_tms IS null then idt.modi_tms
   				 when idt.modi_tms > fr.blck_modi_tms then idt.modi_tms
   				 else fr.blck_modi_tms end)  modi_tms,
   				 <!-- #1799-[PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
   				 fr.vchr_no, fr.vchr_tp_cd
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,fr.locl_curr_cd
        		,convert(float,fr.locl_xcrt) as locl_xcrt
        		,convert(float,fr.locl_amt)  as locl_amt
    			
           FROM  (SELECT a.*, b.inv_no,  b.inv_dt,		 b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,	 c.inv_rmk,		 b.inv_aply_curr_cd,
           				 b.profit_share,
           				 c.trdp_cd 		AS inv_trdp_cd,  tp.eng_nm AS inv_trdp_cd_nm,
           				 b.cust_ref_no,  b.last_pay_dt,	 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 c.tax_bil_flg,
           				 <!-- #6870 [Star Mexico] Edit Invoice after File block / Deposit & Payment Role Management (Zend#4128) -->
           				 c.tax_no,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT

           				 ,(select max(tidb.modi_tms) from tb_inv_dtl_blck tidb where tidb.inv_seq = a.inv_seq) as blck_modi_tms
           				 <!-- #1799-[PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
           				 ,b.vchr_no ,b.vchr_tp_cd
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 LEFT OUTER JOIN  tb_trdp   tp
		     				  ON c.trdp_cd = tp.trdp_cd AND tp.delt_flg = 'N'
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1
                   WHERE  a.delt_flg 		= 'N'
                   	 <isNotEmpty property="f_intg_bl_seq">
                     	AND  a.intg_bl_seq     = #f_intg_bl_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_oth_seq">
                   	 	AND  a.oth_seq			= #f_oth_seq#
                     </isNotEmpty>
					 AND  a.sell_buy_tp_cd  IN ('C','D')
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL bl
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON  bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            AND  fr.sell_buy_tp_cd  IN ('C','D')
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>





    <!-- ap invoice Freight 목록 조회. INVOICE 정보   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <!-- LKH::2015-11-03 WMS4.O :: frt_seq 검색조건 rollback -->
    <select id="selectAPINV_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPINV_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            /* CAST(CAST(fr.qty AS float )  AS varchar) AS qty, */
				 CASE WHEN RTRIM(ISNULL(WMS_SEQ,'')) = '' THEN CAST(CAST(fr.qty AS float )  AS varchar)
	        		  ELSE CAST(fr.qty AS varchar)
				 END qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt AS vat_rt, fr.vat_rt_cd AS vat_rt_cd,
		         fr.whld_vat_rt AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.oth_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.buy_inv_rcv,
				 fr.tax_bil_flg,
				 <!-- #6307 [Starcluster-MEX] Add tax Inv No in aging, local and agent statement (Zen#2159) -->
				 fr.tax_no,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1
   				 LEFT OUTER JOIN TB_INV TB2
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,
   				 fr.frt_inv_post_dt,


   				 <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
   				 (case
   				 when fr.blck_modi_tms IS null then idt.modi_tms
   				 when idt.modi_tms > fr.blck_modi_tms then idt.modi_tms
   				 else fr.blck_modi_tms end)  modi_tms,

   				 fr.wms_seq,

   				 <!-- #755 [ACL] ACCOUNTING VAT 기능 점검 사항 -->
   				 isnull((SELECT tax_flg FROM tb_frt_cd WHERE frt_clss_cd = 'VAT' AND use_flg = 'Y' AND delt_flg  = 'N' AND frt_cd = fr.vat_rt_cd), 'N') as tax_flg,

   				 <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
   				 fr.vat_rt1, fr.vat_rt_cd1, fr.vat_rt2, fr.vat_rt_cd2,
   				 <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
   				 fr.vchr_no, fr.vchr_tp_cd
				 <!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영  -->
				 ,fr.locl_curr_cd
        		 ,convert(float,fr.locl_xcrt) as locl_xcrt
        		 ,convert(float,fr.locl_amt)  as locl_amt				 
           FROM  (SELECT a.*, b.buy_inv_no as inv_no, b.inv_dt,		b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,	c.inv_rmk,	b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 c.trdp_cd AS inv_trdp_cd,
           				 
						 <!-- #3488 Accounting Multi Language 적용 --> 
			   			 CASE
						 	WHEN (SELECT opt_val FROM TB_SYS_OPT WHERE opt_key = 'MULTI_LANGUAGE' ) = 'Y' THEN d.LOCL_NM
				 		 	ELSE d.ENG_NM
			   			 END AS inv_trdp_cd_nm,		           				 
           				 
           				 b.last_pay_dt,
           				 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 b.buy_inv_rcv,
           				 c.tax_bil_flg,
           				 c.cmb_inv_seq,
           				 <!-- #6307 [Starcluster-MEX] Add tax Inv No in aging, local and agent statement (Zen#2159) -->
				         c.tax_no,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT,
           				 a.inv_post_dt AS frt_inv_post_dt

           				 ,(select max(tidb.modi_tms) from tb_inv_dtl_blck tidb where tidb.inv_seq = a.inv_seq) as blck_modi_tms
           				 <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
           				 ,b.vchr_no, b.vchr_tp_cd
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 			JOIN tb_trdp d
		     				  ON c.trdp_cd = d.trdp_cd
		     				  /* 27518 AND d.delt_flg = 'N' */
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1
                   WHERE  a.delt_flg 		= 'N'
                   	 <isNotEmpty property="f_intg_bl_seq">
                     	AND  a.intg_bl_seq     = #f_intg_bl_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_oth_seq">
                   	 	AND  a.oth_seq			= #f_oth_seq#
                     </isNotEmpty>
                     <isNotEmpty property="f_wms_seq">
			    	 	AND a.wms_seq = #f_wms_seq#
			    	 </isNotEmpty>
					 AND  a.sell_buy_tp_cd  = 'B'
					 AND  a.delt_flg 		= 'N'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
    	 		AND fr.wms_seq = #f_wms_seq#
    	    </isNotEmpty>
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>




    <!-- AR, AP Expense Freight 목록 조회. INVOICE 정보   -->
    <select id="selectArApEXP_FRT_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectArApEXP_FRT_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            fr.qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd, fr.inv_vat_amt,     		 fr.inv_sum_amt,
		         fr.vat_rt, 		 fr.vat_rt_cd,          	 fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				<!-- #3488 Accounting Multi Language 적용 hoseok-->
  				 CASE WHEN EXISTS(
					SELECT 1
					FROM TB_SYS_OPT
					WHERE 1=1
					AND OPT_KEY = 'MULTI_LANGUAGE'
					AND OPT_VAL = 'Y'
					)
					THEN TP.LOCL_NM
					ELSE TP.ENG_NM
				 	END AS inv_trdp_cd_nm,				 
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 (CASE WHEN #do_copy# = 'Y' THEN 'N' ELSE fr.clt_cmpl_flg END) AS clt_cmpl_flg,
				 fr.buy_inv_rcv,
				 fr.tax_bil_flg,
				 fr.acc_dept_cd AS RESERVE_FIELD02,
				 fr.acc_dept_cd,
				 fr.ofc_cd,
				 fr.ref_ofc_cd,
				 (CASE WHEN #do_copy# = 'Y' THEN 'N' ELSE fr.JNR_YN END) AS JNR_YN,
  				 fr.JNR_DT,
  				 (CASE WHEN #do_copy# = 'Y' THEN 'N' ELSE fr.CLS_YN END) AS CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(TB1.BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK TB1
   				 LEFT OUTER JOIN TB_INV TB2
                              ON TB1.INV_SEQ = TB2.inv_seq AND TB2.delt_flg = 'N'
                 <!--
			     	//2016.04.18 C.W.Park Modified
			     	#52109 ofc별 block 일자 확인
			    -->
				     <isNotEmpty property="ofc_cd">
						AND TB2.OFC_CD = #ofc_cd#
					 </isNotEmpty>
   				 ) AS BLOCK_DT,
   				 fr.frt_inv_post_dt,

   				 <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
   				 (case
   				 when fr.blck_modi_tms IS null then idt.modi_tms
   				 when idt.modi_tms > fr.blck_modi_tms then idt.modi_tms
   				 else fr.blck_modi_tms end)  modi_tms,

   				 (SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = fr.ofc_cd) as bl_cnt_cd,
   				 fr.sls_ofc_cd,

   				 <!-- #755 [ACL] ACCOUNTING VAT 기능 점검 사항 -->
   				 isnull((SELECT tax_flg FROM tb_frt_cd WHERE frt_clss_cd = 'VAT' AND use_flg = 'Y' AND delt_flg  = 'N' AND frt_cd = fr.vat_rt_cd), 'N') as tax_flg

    			<!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    			, vat_rt1, vat_rt_cd1, vat_rt2, vat_rt_cd2

   				<!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
    			, fr.vchr_no , fr.vchr_tp_cd
				 <!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영  -->
				 ,fr.locl_curr_cd
        		 ,fr.locl_xcrt_dtl as locl_xcrt
        		 ,fr.locl_amt as locl_amt 			

           FROM  (SELECT a.*, 
           				 b.locl_xcrt as locl_xcrt_dtl,
           				 b.buy_inv_no as inv_no, b.inv_dt,		b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,	c.inv_rmk,	b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 c.trdp_cd AS inv_trdp_cd,
           				 d.eng_nm  AS inv_trdp_cd_nm,
           				 b.last_pay_dt,
           				 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 b.buy_inv_rcv,
           				 c.tax_bil_flg,
           				 c.RESERVE_FIELD02 AS acc_dept_cd,
           				 c.ofc_cd AS ref_ofc_cd,
           				 c.ofc_cd,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT,
           				 a.inv_post_dt AS frt_inv_post_dt

           				 ,(select max(tidb.modi_tms) from tb_inv_dtl_blck tidb where tidb.inv_seq = a.inv_seq) as blck_modi_tms
           				 <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
           				 ,b.vchr_no ,b.vchr_tp_cd
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq
                 			JOIN tb_trdp d
		     				  ON c.trdp_cd = d.trdp_cd
		     				  /* 27518 AND d.delt_flg = 'N' */
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1
                   WHERE  a.delt_flg 		= 'N'
                   	 AND  a.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
					 AND  a.delt_flg 		= 'N'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            AND  fr.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>



    <!-- Invoice PK생성   -->
    <select id="selectINV_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(inv_seq)+1, 1)
          FROM  tb_inv
    </select>

    <!-- Invoice A/P EXPENSE OTHER BRANCH PK생성   -->
    <select id="selectINV_OTH_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(CONVERT(NUMERIC, INV_SEQ)), 0) + 1
          FROM  tb_exp_inv
    </select>

    <!-- Invoice PK생성   -->
    <select id="selectINV_DTL_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(inv_dtl_seq)+1, 1)
          FROM  tb_inv_dtl
    </select>




    <!--INVOICE MASTER 테이블 등록   -->
    <insert id="insertINV_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > insertINV_MST*/
        INSERT  tb_inv(
                inv_seq,        	trdp_cd,			frt_ask_clss_cd,	inv_iss_flg,		inv_sts_cd,
		        air_sea_clss_cd,    bnd_clss_cd,        sell_buy_tp_cd,		inv_ttl_amt,		inv_ttl_vat_amt,
		        perf_ttl_amt,		perf_ttl_vat_amt,	locl_ttl_amt,		locl_ttl_vat_amt,	trdp_calc_clss_cd,
		        clt_cmpl_flg,		stl_bss_clss_cd,	stl_fm_dt,			stl_to_dt,			ofc_cd,
		        rgst_usrid,			rgst_ofc_cd,		rgst_tms,			modi_usrid,			modi_ofc_cd,
		        modi_tms,			delt_flg,			inv_ttl_sum_amt,	tax_bil_flg,		inv_rmk,
		        cmb_inv_seq,		dept_cd,			ship_trdp_cd,		inv_dept_cd,		inco_cd,
		        attn_to,			reserve_field02,  	ship_trdp_nm,		inv_modi_tms,		tax_no,
		        <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
		        finc_ofc_cd,

		        <!-- #2189 [BNX][INDIA] AP Actual Shipper & CNEE 추가 // 1 Master 3 House -->
		        act_shpr_trdp_nm, act_cnee_trdp_nm
        )VALUES(
                #inv_seq#,        	#trdp_cd#,			#frt_ask_clss_cd#,	#inv_iss_flg#,		#inv_sts_cd#,
		        #air_sea_clss_cd#,  #bnd_clss_cd#,      #sell_buy_tp_cd#,	#inv_ttl_amt#,		#inv_ttl_vat_amt#,
		        #perf_ttl_amt#,		#perf_ttl_vat_amt#,	#locl_ttl_amt#,		#locl_ttl_vat_amt#,	#trdp_calc_clss_cd#,
		        #clt_cmpl_flg#,		#stl_bss_clss_cd#,	#stl_fm_dt#,		#stl_to_dt#,		#ofc_cd#,
		        #proc_usrid#,		#proc_ofccd#,		getdate(),			#proc_usrid#,		#proc_ofccd#,
		        GETUTCDATE(),			#delt_flg#,			#inv_ttl_sum_amt#,	#tax_bil_flg#,		#inv_rmk#,
		        #cmb_inv_seq#,		#dept_cd#,			#ship_trdp_cd#,		#inv_dept_cd#,		#inco_cd#,
		        #attn_to#,			#reserve_field02#, 	#ship_trdp_nm#,		getdate(),          #tax_no#,
		        <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
		        #finc_ofc_cd#,

		        <!-- #2189 [BNX][INDIA] AP Actual Shipper & CNEE 추가 // 1 Master 3 House -->
		        #act_shpr_trdp_nm#, #act_cnee_trdp_nm#
		        )
    </insert>


    <!--INVOICE DETAILE 테이블 등록   -->
    <insert id="insertINV_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > insertINV_DTL*/
        INSERT  tb_inv_dtl(
                inv_no,				buy_inv_no,
                inv_seq,        	frt_ask_clss_cd,	inv_iss_flg,		inv_sts_cd,
                clt_cmpl_flg,		inv_aply_curr_cd,	inv_xcrt_dt,		inv_aply_xcrt,		inv_amt,
				inv_vat_amt,		inv_sum_amt,		frgn_curr_cd,		frgn_amt,			frgn_vat_amt,
				frgn_sum_amt,		bal_amt,			bal_vat_amt,		bal_frgn_amt,		bal_frgn_vat_amt,
				inv_dt,				inv_post_dt,		inv_due_dt,			profit_share,		cust_ref_no,
				inv_dtl_seq,		inv_krw_amt,		delt_flg,			buy_inv_rcv,        last_pay_dt,
				slip_no,
				rgst_usrid,			rgst_ofc_cd,		rgst_tms,
				modi_usrid,			modi_ofc_cd,		modi_tms,			inv_modi_tms,
				<!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
				vchr_no,			vchr_tp_cd
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_ttl_amt
				<!-- #3505_ [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_curr_cd,locl_xcrt
        )VALUES(
                #inv_no#,			#buy_inv_no#,
                #inv_seq#,        	#frt_ask_clss_cd#,	#inv_iss_flg#,		#inv_sts_cd#,
                #clt_cmpl_flg#,		#inv_aply_curr_cd#, #inv_xcrt_dt#,		#inv_aply_xcrt#,	#inv_amt#,
                #inv_vat_amt#,		#inv_sum_amt#,		#frgn_curr_cd#,		#frgn_amt#,			#frgn_vat_amt#,
                #frgn_sum_amt#,		#bal_amt#,			#bal_vat_amt#,		#bal_frgn_amt#,		#bal_frgn_vat_amt#,
                #inv_dt#,			#inv_post_dt#,		#inv_due_dt#,		#profit_share#,		#cust_ref_no#,
                #inv_dtl_seq#,		#inv_krw_amt#,		#delt_flg#,			#buy_inv_rcv#,		#last_pay_dt#,
                #slip_no#,
                #proc_usrid#,		#proc_ofccd#,		getdate(),
                #proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),			getdate(),
                <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
                #vchr_no#,			#vchr_tp_cd#
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,CASE WHEN #locl_ttl_amt# = '' then 0 else convert(float,#locl_ttl_amt#) end       
				<!-- #3505_ [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,#locl_curr_cd#
				,CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
							           
        )
    </insert>


    <!--INVOICE MASTER 테이블 수정   -->
    <update id="updateINV_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > updateINV_MST*/
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #perf_ttl_amt#
                ,inv_rmk			= #inv_rmk#
                ,trdp_cd			= #trdp_cd#
                ,ship_trdp_cd		= #ship_trdp_cd#
                ,ship_trdp_nm		= #ship_trdp_nm#
                ,sell_buy_tp_cd		= #sell_buy_tp_cd#
                ,inco_cd			= #inco_cd#
                ,tax_bil_flg		= #tax_bil_flg#
                ,attn_to			= #attn_to#
             <isNotNull property="ofc_cd">
                ,ofc_cd             = #ofc_cd#
             </isNotNull>
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms           = GETUTCDATE()
			    ,reserve_field02	= #reserve_field02#
			    ,inv_modi_tms		= getdate()
			    ,tax_no             = #tax_no#
			    <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
			    ,finc_ofc_cd		= #finc_ofc_cd#

		        <!-- #2189 [BNX][INDIA] AP Actual Shipper & CNEE 추가 // 1 Master 3 House -->
			    ,act_shpr_trdp_nm	= #act_shpr_trdp_nm#
			    ,act_cnee_trdp_nm	= #act_cnee_trdp_nm#
         WHERE inv_seq = #inv_seq#
    </update>


    <!-- LOCAL INVOICE MASTER 테이블 수정   -->
    <update id="updateFRTAMT_INVAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
    /*AccInvInvoiceSQL.xml > updateFRTAMT_INVAMT_MST*/
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
         WHERE inv_seq = #inv_seq#

    </update>

    <!--CR/DB MASTER 테이블 수정   -->
    <update id="updateFRTAMT_CRDBAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
                ,sell_buy_tp_cd		= #sell_buy_tp_cd#
         WHERE inv_seq = #inv_seq#

    </update>

    <!-- A/P MASTER 테이블 수정   -->
    <update id="updateFRTAMT_APAMT_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv
           SET   inv_ttl_amt		= #inv_ttl_amt#
                ,inv_ttl_vat_amt	= #inv_ttl_vat_amt#
                ,inv_ttl_sum_amt	= #inv_ttl_sum_amt#
                ,perf_ttl_amt		= #inv_ttl_sum_amt#
         WHERE inv_seq = #inv_seq#

    </update>


    <!--INVOICE DETAIL 테이블 수정   -->
    <update id="updateINV_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,last_pay_dt        = #last_pay_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,buy_inv_no			= #buy_inv_no#
                ,buy_inv_rcv		= #buy_inv_rcv#
                ,inv_no				= #inv_no#
                ,inv_sts_cd         = CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms		= getdate()
			    <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가  -->
			    <isNotEmpty property="vchr_no">
			    ,vchr_no			= #vchr_no#
			    </isNotEmpty>
			    <isEmpty property="vchr_no"> <!-- #2110 [PATENT] VOUCHER PRINT 버튼 추가, VOUCHER 양식 업데이트, VOUCHER NO 자동생성 -->
			    ,vchr_no			= (select SLIP_NO from tb_inv_dtl WHERE inv_seq = #inv_seq# )
			    </isEmpty>
			    ,vchr_tp_cd			= #vchr_tp_cd#
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_ttl_amt       = CASE WHEN #locl_ttl_amt# = '' then 0 else convert(float,#locl_ttl_amt#) end   	
				<!-- #3505_ [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_curr_cd       =#locl_curr_cd#
				,locl_xcrt          = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 

         WHERE inv_seq = #inv_seq#

    </update>

    <update id="upateJnrPayAmtUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_jnr_dtl
           SET   pay_amt			= pay_amt * -1
                ,ttl_pay_amt		= ttl_pay_amt * -1
                ,gl_no				= (case when #sell_buy_tp_cd# = 'D' then gl_agent_ar else gl_agent_ap end)
			    ,modi_tms			= GETUTCDATE()
		  FROM  tb_ofc ofc
         WHERE  tb_jnr_dtl.ofc_cd = ofc.ofc_cd
           AND  inv_seq = #inv_seq#
    </update>

    <update id="upateInvPayAmtUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   pay_amt			= pay_amt * -1
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>

    <update id="upateInvStsUpdate" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET inv_sts_cd		= (CASE WHEN ISNULL(pay_amt, 0) = 0 THEN 'IS' ELSE 'IC' END)
			  ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
           AND bal_amt != 0
    </update>

    <!--INVOICE DETAIL 테이블 수정   -->
    <update id="updateFRTAMT_INVAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>

    <!--CR/DB DETAIL 테이블 수정   -->
    <update id="updateFRTAMT_CRDBAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>



    <!--INVOICE DETAIL AP 테이블 수정   -->
    <update id="updateINV_DTL_AP" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,buy_inv_no			= #buy_inv_no#
                ,buy_inv_rcv		= #buy_inv_rcv#
                ,inv_sts_cd			= CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms		= getdate()
			    <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			    <isNotEmpty property="vchr_no">
			    ,vchr_no			= #vchr_no#
			    </isNotEmpty>
			    <isEmpty property="vchr_no"> <!-- #2110 [PATENT] VOUCHER PRINT 버튼 추가, VOUCHER 양식 업데이트, VOUCHER NO 자동생성 -->
			    ,vchr_no			= (select SLIP_NO from tb_inv_dtl WHERE inv_seq = #inv_seq# )
			    </isEmpty>
			    ,vchr_tp_cd			= #vchr_tp_cd#
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_ttl_amt       = CASE WHEN #locl_ttl_amt# = '' then 0 else convert(float,#locl_ttl_amt#) end   	
				<!-- #3505_ [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_curr_cd       =#locl_curr_cd#
				,locl_xcrt          = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end     		
    		   			    
         WHERE inv_seq = #inv_seq#

    </update>

    <!--INVOICE DETAIL AR 테이블 수정   -->
    <update id="updateINV_DTL_AR" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,inv_aply_curr_cd   = #inv_aply_curr_cd#
                ,frgn_curr_cd		= #frgn_curr_cd#
                ,frgn_amt			= #frgn_amt#
                ,frgn_vat_amt		= #frgn_vat_amt#
                ,frgn_sum_amt		= #frgn_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,bal_vat_amt		= #bal_vat_amt#
                ,bal_frgn_amt		= #bal_frgn_amt#
                ,bal_frgn_vat_amt	= #bal_frgn_vat_amt#
                ,inv_krw_amt		= #inv_krw_amt#
                ,profit_share		= #profit_share#
                ,inv_dt				= #inv_dt#
                ,inv_post_dt		= #inv_post_dt#
                ,inv_due_dt			= #inv_due_dt#
                ,cust_ref_no		= #cust_ref_no#
                ,inv_no				= #inv_no#
                ,inv_sts_cd			= CASE WHEN inv_sts_cd = 'IE' AND CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0')) != 0 THEN 'IC' ELSE inv_sts_cd END
                ,modi_usrid			= #proc_usrid#
			    ,modi_ofc_cd		= #proc_ofccd#
			    ,modi_tms			= GETUTCDATE()
			    ,inv_modi_tms			= getdate()
			    <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			    <isNotEmpty property="vchr_no">
			    ,vchr_no			= #vchr_no#
			    </isNotEmpty>
			    <isEmpty property="vchr_no"> <!-- #2110 [PATENT] VOUCHER PRINT 버튼 추가, VOUCHER 양식 업데이트, VOUCHER NO 자동생성 -->
			    ,vchr_no			= (select SLIP_NO from tb_inv_dtl WHERE inv_seq = #inv_seq# )
			    </isEmpty>
			    ,vchr_tp_cd			= #vchr_tp_cd#
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_ttl_amt       = CASE WHEN #locl_ttl_amt# = '' then 0 else convert(float,#locl_ttl_amt#) end   	
				<!-- #3505_ [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
				,locl_curr_cd       =#locl_curr_cd#
				,locl_xcrt          = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end     		  		    		    
         WHERE inv_seq = #inv_seq#

    </update>

    <!--INVOICE DETAIL AP 테이블 수정   -->
    <update id="updateFRTAMT_APAMT_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO">
        UPDATE tb_inv_dtl
           SET   inv_amt			= #inv_amt#
                ,inv_vat_amt		= #inv_vat_amt#
                ,inv_sum_amt		= #inv_sum_amt#
                ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
                ,inv_krw_amt		= #inv_sum_amt#
			    ,modi_tms			= GETUTCDATE()
         WHERE inv_seq = #inv_seq#

    </update>



    <!--FREIGHT 등록   -->
    <insert id="insertFRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,
    			inv_seq,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)
    	-->
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(
    			<!-- frt_seq,	 -->
    			inv_seq,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt, 		sls_ofc_cd,
    			whld_vat_rt,		vat_rt_cd
    			<!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    			, vat_rt1, vat_rt_cd1, vat_rt2, vat_rt_cd2
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,locl_curr_cd,locl_xcrt,locl_amt
    			<!-- #4194 [JAPT] VAT checked missing, Freight name 's not being copied. -->
    			,reserve_field01
    	) SELECT
    			<!-- (SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt), -->
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,      #sls_ofc_cd#,
    			#whld_vat_rt# ,		#vat_rt_cd#
    			<!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    			, #vat_rt1#, #vat_rt_cd1#, #vat_rt2#, #vat_rt_cd2#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,#locl_curr_cd#
    			,CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end  
    			,CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#)  end      		
    			<!-- #4194 [JAPT] VAT checked missing, Freight name 's not being copied. -->
    			,#reserve_field01#	
    </insert>

    <!--FREIGHT 등록   -->
    <insert id="insertFRT_LIST_OTHER" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,
    			inv_seq,			frt_cd_nm,
    			oth_seq,			frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#oth_seq#,			#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)
    	-->
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    	INSERT INTO tb_frt(

    			inv_seq,			frt_cd_nm,
    			oth_seq,			frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,        sls_ofc_cd,
    			wms_seq,			whld_vat_rt,		vat_rt_cd
    			<!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    			, vat_rt1, vat_rt_cd1, vat_rt2, vat_rt_cd2
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,locl_curr_cd,locl_xcrt,locl_amt    			
    	) SELECT

    			#inv_seq#,			#frt_cd_nm#,
    			#oth_seq#,			#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,      #sls_ofc_cd#,
    			#wms_seq#,			#whld_vat_rt#,		#vat_rt_cd#
    			<!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    			, #vat_rt1#, #vat_rt_cd1#, #vat_rt2#, #vat_rt_cd2#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,#locl_curr_cd#	
    			,CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end  
    			,CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#)  end    				    			
    </insert>


    <!--FREIGHT CR/DB등록   -->
    <insert id="insertCRDB_FRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,
    			inv_seq,
    			intg_bl_seq,		frt_cd,				frt_cd_nm,
    			aply_ut_cd,
    			cntr_tpsz_cd,		qty,
    			ru,
    			agent_ru,
    			trf_cur_sum_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    			<isNotEmpty property="intg_bl_seq_2">
    				,intg_bl_seq_2
    			</isNotEmpty>
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,
    			#intg_bl_seq#,		#frt_cd#,			#frt_cd_nm#,
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,
    			<isEqual property="sell_buy_tp_cd" compareValue="D">
				 #ru#,
				 0,
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C">
				 #ru#,
				 #ru#,
			   </isEqual>
    			#trf_cur_sum_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    	)
    	-->
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(

    			inv_seq,
    			intg_bl_seq,		frt_cd,				frt_cd_nm,
    			aply_ut_cd,
    			cntr_tpsz_cd,		qty,
    			ru,
    			agent_ru,
    			trf_cur_sum_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,
    			vat_rt,             vat_amt,            inv_vat_amt
    			<isNotEmpty property="intg_bl_seq_2">
    				,intg_bl_seq_2
    			</isNotEmpty>
    			,sls_ofc_cd
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,locl_curr_cd    
    			,locl_xcrt  
    			,locl_amt       						
    	) SELECT

    			#inv_seq#,
    			#intg_bl_seq#,		#frt_cd#,			#frt_cd_nm#,
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,
    			<isEqual property="sell_buy_tp_cd" compareValue="D">
				 #ru#,
				 0,
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C">
				 #ru#,
				 #ru#,
			   </isEqual>
    			#trf_cur_sum_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,
    			#vat_rt#,           #vat_amt#,          #inv_vat_amt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    			,#sls_ofc_cd#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,#locl_curr_cd#	
    			,CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end  
    			,CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#)  end       				
    </insert>



    <!--FREIGHT 등록   -->
    <insert id="insertCRDB_FRT_OTHER" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,
    			inv_seq,
    			oth_seq,		frt_cd,				frt_cd_nm,
    			aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    			<isNotEmpty property="intg_bl_seq_2">
    				,intg_bl_seq_2
    			</isNotEmpty>
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,
    			#oth_seq#,			#frt_cd#,			#frt_cd_nm#,
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    	)
    	-->
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(

    			inv_seq,
    			oth_seq,		frt_cd,				frt_cd_nm,
    			aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_sum_amt,		agent_amt,		cr_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt,
    			vat_rt,             vat_amt,            inv_vat_amt
    			<isNotEmpty property="intg_bl_seq_2">
    				,intg_bl_seq_2
    			</isNotEmpty>
    			,sls_ofc_cd
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,locl_curr_cd,locl_xcrt,locl_amt    			
    	) SELECT

    			#inv_seq#,
    			#oth_seq#,			#frt_cd#,			#frt_cd_nm#,
    			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#debit_amt#,		#debit_amt#,		#agent_amt#,	#credit_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,
    			#vat_rt#,           #vat_amt#,          #inv_vat_amt#
    			<isNotEmpty property="intg_bl_seq_2">
    				,isnull(#intg_bl_seq_2#, 0)
    			</isNotEmpty>
    			,#sls_ofc_cd#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    			,#locl_curr_cd#	
    			,CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end  
    			,CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#)  end       				    			
    </insert>


    <!--FREIGHT INVOICE 정보 포함 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_LIST" parameterClass="FrtVO">
    	/* acc.inv.invoice.updateFRT_LIST */
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt     = #whld_vat_rt#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
			   ,vat_rt1         = #vat_rt1#
			   ,vat_rt_cd1      = #vat_rt_cd1#
			   ,vat_rt2         = #vat_rt2#
			   ,vat_rt_cd2      = #vat_rt_cd2#
			   
			   <!-- JPT 요구사항 2018.01.11 -->
			   ,vat_rt_cd       = #vat_rt_cd#
			   
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  
    						   
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT INVOICE EXPENSE 정보 포함 테이블 수정   -->
    <update id="updateEXP_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
			   ,vat_rt1			= #vat_rt1#
			   ,vat_rt_cd1			= #vat_rt_cd1#
			   ,vat_rt2			= #vat_rt2#
			   ,vat_rt_cd2			= #vat_rt_cd1#
			   
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>




    <!--FREIGHT INVOICE 정보중 INV_CURR_CD 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	       ,trdp_cd			= #trdp_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT INVOICE EXPENSE 정보중 INV_CURR_CD 수정   -->
    <update id="updateEXP_FRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>


    <!--FREIGHT INVOICE 정보 포함 테이블 수정   -->
    <update id="updateCRDB_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       <isEqual property="sell_buy_tp_cd" compareValue="D"><!-- Debit ��ru �명똿 OJG 20130321  -->
				 ,ru				= #ru#
				  ,agent_ru		= 0
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> <!-- Credit ��agent_ru �명똿 OJG 20130321  -->
				 ,ru		= #ru#
				 ,agent_ru		= #ru#
			   </isEqual>
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #debit_amt#
    	       ,inv_sum_amt		= #debit_amt#
    	       ,agent_amt		= #agent_amt#
    	       ,cr_amt			= #credit_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,sell_buy_tp_cd  = #sell_buy_tp_cd#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd		    = #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	       <isNotEmpty property="intg_bl_seq_2">
    	       	,intg_bl_seq_2   = isnull(#intg_bl_seq_2#, 0)
    	       </isNotEmpty>
    	       ,sls_ofc_cd		= #sls_ofc_cd#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end   			 
				     	       
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT INVOICE 정보 포함 테이블 수정  A/P용  -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateAPFRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_rt_cd		= #vat_rt_cd#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    	       ,vat_rt1			= #vat_rt1#
    	       ,vat_rt_cd1		= #vat_rt_cd1#
    	       ,vat_rt2			= #vat_rt2#
    	       ,vat_rt_cd2		= #vat_rt_cd2#
    	       
    	        <!-- #3971 Local Amount 항목 미입력 상황/원인 파악 -->
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  
    		       	       
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT 정보 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_rt_cd		= #vat_rt_cd#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
    	       ,vat_rt1			= #vat_rt1#
    	       ,vat_rt_cd1		= #vat_rt_cd1#
    	       ,vat_rt2			= #vat_rt2#
    	       ,vat_rt_cd2		= #vat_rt_cd2#
				
				<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>



    <!--FREIGHT EXPENSE용 정보 테이블 수정   -->
    <update id="updateEXP_FRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_rt_cd		= #vat_rt_cd#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
			   ,vat_rt1			= #vat_rt1#
			   ,vat_rt_cd1			= #vat_rt_cd1#
			   ,vat_rt2			= #vat_rt2#
			   ,vat_rt_cd2			= #vat_rt_cd1#

    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  			
    		   
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>


    <!--FREIGHT 정보 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateAPFRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_rt_cd		= #vat_rt_cd#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
			   ,sls_ofc_cd		= #sls_ofc_cd#
			   ,whld_vat_rt		= #whld_vat_rt#

			   <!-- #1098 [BNX] INDIA 오피스 - 요구사항 항목 -->
			   ,vat_rt1			= #vat_rt1#
			   ,vat_rt_cd1			= #vat_rt_cd1#
			   ,vat_rt2			= #vat_rt2#
			   ,vat_rt_cd2			= #vat_rt_cd1#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end   				 			   
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT 정보 테이블 수정   -->
    <update id="updateCRDB_FRTINFO_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       <isEqual property="sell_buy_tp_cd" compareValue="D"><!-- Debit ��ru �명똿 OJG 20130321  -->
				 ,ru				= #ru#
				 ,agent_ru		= 0
			   </isEqual>
    	       <isEqual property="sell_buy_tp_cd" compareValue="C"> <!-- Credit ��agent_ru �명똿 OJG 20130321  -->
				 ,ru		= #ru#
				 ,agent_ru		= #ru#
			   </isEqual>
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #debit_amt#
    	       ,inv_sum_amt		= #debit_amt#
    	       ,agent_amt		= #agent_amt#
    	       ,cr_amt			= #credit_amt#
    	       ,sell_buy_tp_cd  = #sell_buy_tp_cd#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,trdp_cd			= #trdp_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	       <isNotEmpty property="intg_bl_seq_2">
    	       	,intg_bl_seq_2   = isnull(#intg_bl_seq_2#, 0)
    	       </isNotEmpty>
    	       ,sls_ofc_cd		= #sls_ofc_cd#
    			<!-- #3505 [JTC]ACCT - Local Currency 금액 환산 & SLIP 반영 -->
    		   ,locl_curr_cd    = #locl_curr_cd#
    		   ,locl_xcrt       = CASE WHEN #locl_xcrt# = '' then 0 else convert(float,#locl_xcrt#) end 
    		   ,locl_amt        = CASE WHEN #locl_amt# = '' then 0 else convert(float,#locl_amt#) end  				 
				     	       
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>

    	   AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="updateFRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
			  ,delt_flg		= 'Y'
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	   AND frt_seq 		= #frt_seq#
    </update>



    <!--FREIGHT 테이블 수정   -->
    <update id="updateEXPFRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	   AND inv_seq = #inv_seq#
    	   AND frt_seq = #frt_seq#
    </update>


    <!--FREIGHT EXPENSE 용 테이블 수정   -->
    <update id="updateEXP_FRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>


    <!--FREIGHT EXPENSE 용 테이블 수정   -->
    <update id="updateEXPLIST_FRT_INVSEQ" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= #inv_sts_cd#
    	      ,inv_post_dt	= null
    	      ,modi_usrid	= #proc_usrid#
			  ,modi_ofc_cd	= #proc_ofccd#
			  ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	 <isNotEmpty property="f_inv_seq">
    	 	AND inv_seq = #f_inv_seq#
    	 </isNotEmpty>
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND air_sea_clss_cd = 'G'
    	   AND frt_seq 		   = #frt_seq#
    </update>



	<!--FREIGHT 테이블 삭제   -->
	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    <update id="deleteFRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 <isNotEmpty property="wms_seq">
    	 	AND wms_seq = #wms_seq#
    	 </isNotEmpty>
    	 AND frt_seq 		= #frt_seq#
    </update>


    <!--FREIGHT EXPENSE 용 테이블 삭제   -->
    <update id="deleteEXP_FRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	 <isNotEmpty property="intg_bl_seq">
    	 	AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	 </isNotEmpty>
    	 <isNotEmpty property="oth_seq">
    	 	AND oth_seq = #oth_seq#
    	 </isNotEmpty>
    	 AND rgst_ofc_cd	 = #proc_ofccd#
    	 AND air_sea_clss_cd = 'G'
    	 AND frt_seq 		 = #frt_seq#
    </update>


    <!--INVOICE MST 테이블 삭제   -->
    <update id="deleteINV_MST_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_INV
    	   SET DELT_FLG = 'Y'
    	      ,modi_usrid		= #proc_usrid#
			  ,modi_ofc_cd		= #proc_ofccd#
			  ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #f_inv_seq#
    </update>

    <!--INVOICE DTL 테이블 삭제   -->
    <update id="deleteINV_DTL_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
    	   SET DELT_FLG = 'Y'
			    ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #f_inv_seq#
    </update>



    <!-- House B/L Info select ajax  Chungrue 2011.11.02  -->
    <select id="selectBL_CommonInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectBL_CommonInfo  */
        SELECT  bl.intg_bl_seq,     				bl.bl_no,
        		bl.biz_clss_cd,						bl.air_sea_clss_cd,
        		bnd.bnd_clss_cd
        		, ISNULL(BLCK.BL_STS_CD1, BL.BL_STS_CD) AS bl_sts_cd
          FROM  tb_intg_bl bl
				LEFT OUTER JOIN tb_add_info_bnd bnd
            ON  bl.intg_bl_seq = bnd.intg_bl_seq
          		LEFT OUTER JOIN(SELECT INTG_BL_SEQ AS INTG_BL_SEQ1, BL_STS_CD AS BL_STS_CD1 FROM TB_INTG_BL_BLCK) BLCK
          	ON BL.INTG_BL_SEQ = BLCK.INTG_BL_SEQ1
         WHERE  bl.bl_no = #s_bl_no#
         <isNotNull property="s_biz_cls_cd">
    	 	AND bl.biz_clss_cd = #s_biz_cls_cd#
    	 </isNotNull>
    	 <isNotNull property="s_ref_no">
    	 	AND bl.ref_no = #s_ref_no#
    	 </isNotNull>
    	 <!-- OFVFOUR-8124 [OceanBlue] Filing NO - I1OBOI-21083 Invoice has been added after file block -->
    	 <isNotNull property="air_sea_clss_cd">
    	 	AND bl.air_sea_clss_cd = #air_sea_clss_cd#
    	 </isNotNull>
    	 <isNotNull property="bnd_clss_cd">
    	 	AND bnd.bnd_clss_cd = #bnd_clss_cd#
    	 </isNotNull>
           AND  ISNULL(bl.DELT_FLG, 'N') = 'N'
    </select>

    <!-- REF Info select ajax  Chungrue 2012.01.03  -->
    <select id="selectRefInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectRefInfo  */
        SELECT  bl.intg_bl_seq,     				bl.bl_no,
        		bl.biz_clss_cd,						bl.air_sea_clss_cd,
        		bnd.bnd_clss_cd,				    bl.ref_no
        		, ISNULL(BLCK.BL_STS_CD1, BL.BL_STS_CD) AS bl_sts_cd
          FROM  tb_intg_bl bl
				LEFT OUTER JOIN tb_add_info_bnd bnd
            ON  bl.intg_bl_seq = bnd.intg_bl_seq
                LEFT OUTER JOIN(SELECT INTG_BL_SEQ AS INTG_BL_SEQ1, BL_STS_CD AS BL_STS_CD1 FROM TB_INTG_BL_BLCK) BLCK
            ON  BL.INTG_BL_SEQ = BLCK.INTG_BL_SEQ1
         WHERE  bl.ref_no = #s_ref_no#
           AND  bl.biz_clss_cd = 'M'
           AND  ISNULL(bl.DELT_FLG, 'N') = 'N'
           <!-- OFVFOUR-8124 [OceanBlue] Filing NO - I1OBOI-21083 Invoice has been added after file block -->
         <isNotNull property="air_sea_clss_cd">
    	 	AND bl.air_sea_clss_cd = #air_sea_clss_cd#
    	 </isNotNull>
    	 <isNotNull property="bnd_clss_cd">
    	 	AND bnd.bnd_clss_cd = #bnd_clss_cd#
    	 </isNotNull>
    </select>

    <!-- Other Info select ajax  Chungrue 2011.11.02  -->
    <select id="selectOther_Info" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectOther_Info  */
        SELECT  oth_seq,
        		ref_no
        		, ISNULL(BLCK.STS_CD1, OTH.STS_CD) AS sts_cd
          FROM  TB_OTH_SALES OTH
          LEFT OUTER JOIN (SELECT OTH_SEQ AS OTH_SEQ1, STS_CD AS STS_CD1 FROM TB_OTH_SALES_BLCK) BLCK
                ON OTH.OTH_SEQ = BLCK.OTH_SEQ1
         WHERE  ref_no = #s_oth_no#
           AND  ISNULL(DELT_FLG, 'N') = 'N'

    </select>

    <!-- WMS ACCOUNT LKH 2015.01.20  -->
    <select id="searchWarehouseInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchWarehouseInfo  */
        SELECT  top 1
        		wm_doc_seq AS wms_seq,
        		doc_ref_no AS ref_no,
        		sts_cd
          FROM  TB_WM_DOC_MST
         WHERE  doc_ref_no = #s_wms_no#
           AND  ISNULL(DELT_FLG, 'N') = 'N'

           <!--vinh.vo 2015/08/10 (S)  -->
           order by wms_seq desc
           <!--vinh.vo 2015/08/10 (E)  -->

    </select>

    <!-- Invoice Info select  ajax Chungrue 2011.11.02  -->
    <select id="selectInvInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectInvInfo  */
        SELECT   dtl.inv_seq
                ,dtl.inv_no
		  FROM  tb_inv_dtl dtl
		 LEFT JOIN tb_inv mst ON dtl.inv_seq = mst.inv_seq AND ISNULL(mst.DELT_FLG, 'N') = 'N'
		 WHERE inv_no = #s_inv_no#
		   AND (mst.sell_buy_tp_cd = #type1# OR mst.sell_buy_tp_cd = #type2#)
    </select>



    <!-- InvoiceNO로 BL정보인지 OTHER 정보인지를 구분한다.   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="selectINV_BL_OTHER_INFO" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectINV_BL_OTHER_INFO  */
    	SELECT MAX(intg_bl_seq) AS intg_bl_seq
    	      ,MAX(oth_seq)		AS oth_seq
    	      ,MAX(wms_seq)     AS wms_seq
    	  FROM tb_frt
    	 WHERE inv_seq 		= #f_inv_seq#
    	 GROUP BY intg_bl_seq, oth_seq, isnull(wms_seq, '')
    </select>

    <!-- Invoice BL Info select  Chungrue 2011.11.02  -->
    <select id="selectBL_INFO_INV" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > selectBL_INFO_INV  */
        SELECT TOP 1
               x.*
          FROM (
	              SELECT distinct(bl.intg_bl_seq)
			        	,bl.bl_no
				        ,bl.AIR_SEA_CLSS_CD
				        ,bl.BIZ_CLSS_CD
				        ,bnd.BND_CLSS_CD
				        <!-- //2016.04.20 C.W.Park Added #52109 -->
				        ,fr.SLS_OFC_CD as ref_ofc_cd
				  FROM  TB_INTG_BL bl
				LEFT OUTER JOIN TB_FRT fr ON bl.INTG_BL_SEQ = fr.INTG_BL_SEQ AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				LEFT OUTER JOIN TB_ADD_INFO_BND bnd ON bl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
				 WHERE fr.INV_SEQ     = #f_inv_seq#
			   ) x

    </select>


    <!-- Invoice OTHER Info select  Chungrue 2011.11.02  -->
    <select id="selectOTHER_INFO_INV" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > selectOTHER_INFO_INV  */
        SELECT TOP 1
               x.*
          FROM (
		        SELECT   distinct(bl.oth_seq)
				        ,bl.ref_no
				        <!-- //2016.04.20 C.W.Park Added #52109 -->
				        ,fr.SLS_OFC_CD  as ref_ofc_cd
				  FROM  TB_OTH_SALES bl
				LEFT OUTER JOIN TB_FRT fr ON bl.oth_seq = fr.oth_seq AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				 WHERE fr.inv_seq = #f_inv_seq#
			   ) x

    </select>

    <!-- WMS ACCOUNT LKH 2015.01.20  -->
    <select id="searchWmsInfoInv" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.BLINFOVO">
		/*  AccInvInvoiceSQL.xml > searchWmsInfoInv  */
        SELECT TOP 1
               x.*
          FROM (
		        SELECT   distinct(bl.wm_doc_seq) AS wms_seq
				        ,bl.doc_ref_no as ref_no
				        <!-- //2016.04.20 C.W.Park Added #52109 -->
				        ,fr.SLS_OFC_CD  as ref_ofc_cd
				  FROM  TB_WM_DOC_MST bl
				LEFT OUTER JOIN TB_FRT fr ON bl.wm_doc_seq = fr.wms_seq AND ISNULL(bl.DELT_FLG, 'N') = 'N'
				 WHERE fr.inv_seq = #f_inv_seq#
			   ) x

    </select>

    <!-- Invoice BL CONTAINER TP_SZ  Chungrue 2011.11.02  -->
    <select id="searchBlCntrInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBlCntrInfo  */
        SELECT   count(*) AS cntr_cnt
        		,cntr_tpsz_cd
		  FROM  TB_CNTR_LIST
		 WHERE intg_bl_seq = #f_intg_bl_seq#
		   AND delt_flg = 'N'
		 GROUP BY cntr_tpsz_cd
    </select>




    <!-- InvoiceList Default 조회 200건만 조회한다.  -->
    <select id="searchDefaultInvoiceList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchDefaultInvoiceList  */
		SELECT TOP 200
		       A.*
		  FROM(
				SELECT 	TOP 200
						dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       
				       <!-- Jeong-Il Park Order - Name Change  -->
				       <!-- ,MAX(prnr.eng_nm)  			AS trdp_nm -->
				       ,MAX(prnr.locl_nm)  			AS trdp_nm
				       
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
				             ELSE MAX(dtl.inv_sum_amt)
				        END AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1
				             ELSE MAX(dtl.bal_amt)
				        END AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
		        		     ELSE MAX(mbl.bl_no)
		        		END AS mbl_no
		        	   ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
		        		     ELSE MAX(bl.bl_no)
		        		end AS hbl_no
				       ,MAX(bl.ref_no)				AS ref_no
				       ,''							AS oth_ref_no
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,CONVERT(VARCHAR, MAX(mst.rgst_tms), 101) AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,CONVERT(VARCHAR, MAX(mst.modi_tms), 101) AS modi_tms
				       ,CONVERT(VARCHAR, MAX(mst.inv_modi_tms), 101) AS inv_modi_tms
				       ,MAX(prnr.shrt_nm)			AS shrt_nm
				       ,MAX(bl.intg_bl_seq)			AS intg_bl_seq
				       ,''							AS oth_seq
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd
				       ,MAX(bl.ref_ofc_cd)			AS ref_ofc_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
				       ,MAX(jnr.jnr_no)				AS jnr_no
				       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
				 FROM TB_INV mst
				 JOIN TB_INV_DTL dtl
					ON mst.INV_SEQ = dtl.INV_SEQ
				 JOIN TB_FRT frt
					ON dtl.INV_SEQ = frt.INV_SEQ
				 JOIN TB_INTG_BL bl
					ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
				 JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd
				LEFT JOIN tb_intg_bl_rlt rlt
		            ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
				LEFT JOIN tb_intg_bl mbl
					ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
				LEFT JOIN TB_JNR_DTL jnr
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
				WHERE mst.DELT_FLG = 'N'
				    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
				    AND frt.oth_seq is null
				GROUP BY dtl.inv_seq
				ORDER BY rgst_tms desc, post_dt, inv_no

				UNION ALL

				SELECT 	TOP 200
						dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       
				  	   <!-- Jeong-Il Park Order - Name Change  -->
				       <!-- ,MAX(prnr.eng_nm)  			AS trdp_nm -->
				       ,MAX(prnr.locl_nm)  			AS trdp_nm
				       
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
				             ELSE MAX(dtl.inv_sum_amt)
				        END AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1
				             ELSE MAX(dtl.bal_amt)
				        END AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,MAX(bl.mbl_no)				AS mbl_no
		        	   ,MAX(bl.hbl_no)				AS hbl_no
		        	   ,''							AS ref_no
				       ,MAX(bl.ref_no)				AS oth_ref_no
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,CONVERT(VARCHAR, MAX(mst.rgst_tms), 101) AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,CONVERT(VARCHAR, MAX(mst.modi_tms), 101) AS modi_tms
				       ,MAX(prnr.shrt_nm)			AS shrt_nm
				       ,''							AS intg_bl_seq
				       ,MAX(bl.OTH_SEQ)				AS oth_seq
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd
				       ,MAX(bl.ofc_cd)				AS ref_ofc_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
				       ,MAX(jnr.jnr_no)				AS jnr_no
				       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
				 FROM TB_INV mst
				 JOIN TB_INV_DTL dtl
					ON mst.INV_SEQ = dtl.INV_SEQ
				 JOIN TB_FRT frt
					ON dtl.INV_SEQ = frt.INV_SEQ
				 JOIN TB_OTH_SALES bl
					ON frt.OTH_SEQ = bl.OTH_SEQ
				 JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd
		        LEFT JOIN TB_JNR_DTL jnr
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
			    LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
			    	ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
				WHERE mst.DELT_FLG = 'N'
				    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
				    AND frt.oth_seq is not null
				GROUP BY dtl.inv_seq
				ORDER BY rgst_tms desc, post_dt, inv_no
			) A
		ORDER BY rgst_tms desc, post_dt, inv_no
    </select>





    <!-- InvoiceList COUNT Default 조회 200건 조회   -->
    <select id="searchDefaultInvoiceList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchDefaultInvoiceList_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM (
				SELECT  TOP 200
						A.*
				  FROM(
						SELECT 	TOP 200
								dtl.inv_seq
							   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
						        END 						AS inv_no
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
						        END 						AS inv_tp
						       ,MAX(dtl.inv_post_dt)		AS post_dt
						       ,MAX(mst.trdp_cd)  			AS trdp_cd
						       
						 		<!-- Jeong-Il Park Order - Name Change  -->
				       			<!-- ,MAX(prnr.eng_nm)  			AS trdp_nm -->
				       			,MAX(prnr.locl_nm)  			AS trdp_nm
				       			
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
						             ELSE MAX(dtl.inv_sum_amt)
						        END AS inv_sum_amt
						       ,MAX(dtl.pay_amt)  			AS pay_amt
						       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1
						             ELSE MAX(dtl.bal_amt)
						        END AS bal_amt
						       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
						             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
						        END AS over_due
						       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
						       ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
				        		     ELSE MAX(mbl.bl_no)
				        		END AS mbl_no
				        	   ,CASE WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
				        		     ELSE MAX(bl.bl_no)
				        		end AS hbl_no
						       ,MAX(bl.ref_no)				AS ref_no
						       ,''							AS oth_ref_no
						       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
						       ,MAX(mst.ofc_cd)				AS ofc_cd
						       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
						       ,MAX(mst.rgst_usrid)			AS rgst_usrid
						       ,MAX(mst.rgst_tms)			AS rgst_tms
						       ,MAX(mst.modi_usrid)			AS modi_usrid
						       ,MAX(mst.modi_tms)			AS modi_tms
						       ,MAX(prnr.shrt_nm)			AS shrt_nm
						       ,MAX(bl.intg_bl_seq)			AS intg_bl_seq
						       ,''							AS oth_seq
						       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
						       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd
						       ,MAX(bl.ref_ofc_cd)			AS ref_ofc_cd
						       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
						       ,MAX(jnr.jnr_no)				AS jnr_no
						       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
						 FROM TB_INV mst
						 JOIN TB_INV_DTL dtl
							ON mst.INV_SEQ = dtl.INV_SEQ
						 JOIN TB_FRT frt
							ON dtl.INV_SEQ = frt.INV_SEQ
						 JOIN TB_INTG_BL bl
							ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
						 JOIN tb_trdp prnr
				           ON   prnr.trdp_cd = mst.trdp_cd
						LEFT JOIN tb_intg_bl_rlt rlt
				            ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
						LEFT JOIN tb_intg_bl mbl
							ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
						LEFT JOIN TB_JNR_DTL jnr
							ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
						LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
							ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
						WHERE mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND frt.OTH_SEQ is null

						GROUP BY dtl.inv_seq

						UNION ALL

						SELECT 	TOP 200
								dtl.inv_seq
							   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
						        END 						AS inv_no
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
						             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
						        END 						AS inv_tp
						       ,MAX(dtl.inv_post_dt)		AS post_dt
						       ,MAX(mst.trdp_cd)  			AS trdp_cd
						       
						       <!-- Jeong Il Park - Order -->
						       <!-- ,MAX(prnr.eng_nm)  			AS trdp_nm -->
						       ,MAX(prnr.locl_nm)  			AS trdp_nm						       
						       
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
						             ELSE MAX(dtl.inv_sum_amt)
						        END AS inv_sum_amt
						       ,MAX(dtl.pay_amt)  			AS pay_amt
						       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
						       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1
						             ELSE MAX(dtl.bal_amt)
						        END AS bal_amt
						       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
						             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
						        END AS over_due
						       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
						       ,MAX(bl.mbl_no)				AS mbl_no
				        	   ,MAX(bl.hbl_no)				AS hbl_no
				        	   ,''							AS ref_no
						       ,MAX(bl.ref_no)				AS oth_ref_no
						       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
						       ,MAX(mst.ofc_cd)				AS ofc_cd
						       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
						       ,MAX(mst.rgst_usrid)			AS rgst_usrid
						       ,MAX(mst.rgst_tms)			AS rgst_tms
						       ,MAX(mst.modi_usrid)			AS modi_usrid
						       ,MAX(mst.modi_tms)			AS modi_tms
						       ,MAX(prnr.shrt_nm)			AS shrt_nm
						       ,''							AS intg_bl_seq
						       ,MAX(bl.OTH_SEQ)				AS oth_seq
						       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
						       ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd
						       ,MAX(bl.ofc_cd)				AS ref_ofc_cd
						       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS CLT_CMPL_FLG
						       ,MAX(jnr.jnr_no)				AS jnr_no
						       ,MAX(mst.cmb_inv_seq)		AS cmb_inv_seq
						 FROM TB_INV mst
						 JOIN TB_INV_DTL dtl
							ON mst.INV_SEQ = dtl.INV_SEQ
						 JOIN TB_FRT frt
							ON dtl.INV_SEQ = frt.INV_SEQ
						 JOIN TB_OTH_SALES bl
							ON frt.OTH_SEQ = bl.OTH_SEQ
						 JOIN tb_trdp prnr
				            ON prnr.trdp_cd = mst.trdp_cd
				        LEFT JOIN TB_JNR_DTL jnr
							ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
						LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
							ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
						WHERE mst.DELT_FLG = 'N'
						    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
						    AND frt.oth_seq is not null
						GROUP BY dtl.inv_seq
					) A

			) x
    </select>



    <!-- InvoiceList 조회  -->
    <!-- ZOOT=2015-01-08 NoPaging 처리  -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchInvoiceList_NOPAGING" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/* AccInvInvoiceSQL.xml > searchInvoiceList_NOPAGING */
   WITH INV_INFO AS (     SELECT
        a1.*
    FROM
        (   
        SELECT
        	ROW_NUMBER() OVER (ORDER BY mst.MODI_TMS DESC) as ROWNUM,
            mst.*
        FROM
            TB_INV mst with(nolock)
        JOIN
            TB_INV_DTL dtl with(index(XAK3TB_INV_DTL),nolock)
                ON mst.INV_SEQ = dtl.INV_SEQ
        WHERE
            mst.DELT_FLG = 'N'
            AND isnull(mst.air_sea_clss_cd,'O') != 'G'
          <isNotEmpty property="s_ofc_cd">
			AND mst.ofc_cd = #s_ofc_cd#
		  </isNotEmpty>

          <isNotEmpty property="f_strdt">
				<isEqual property="f_date_type" compareValue="PDT">
					AND INV_POST_DT BETWEEN #f_strdt# AND #f_enddt#
				</isEqual>
				<isEqual property="f_date_type" compareValue="IDT">
					AND INV_DT BETWEEN #f_strdt# AND #f_enddt#
				</isEqual>
				<isEqual property="f_date_type" compareValue="DDT">
					AND INV_DUE_DT BETWEEN #f_strdt# AND #f_enddt#
				</isEqual>
		  </isNotEmpty>
			      AND dtl.DELT_FLG = 'N'

            <isNotEmpty property="s_inv_no">
				  AND dtl.inv_no LIKE #s_inv_no# + '%'
			</isNotEmpty>
			<isNotEmpty property="s_v_inv_no">
				  AND dtl.buy_inv_no LIKE #s_v_inv_no# + '%'
			</isNotEmpty>
			
			<!-- #3463 OFVFOUR-7374[StarCluster-Mex] Invoice Exchange Rate and Currency Option -->
			<isNotEmpty property="f_curr_cd">
				  AND dtl.inv_aply_curr_cd = #f_curr_cd#
			</isNotEmpty>
			
			<!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
			<isNotEmpty property="s_tax_no">
				  AND mst.tax_no LIKE #s_tax_no# + '%'
			</isNotEmpty>

            <isNotEmpty property="s_hbl_no">
            <!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
                  AND (dtl.INV_SEQ IN
                                  ( SELECT B.INV_SEQ
		        FROM tb_intg_bl  A with(nolock), tb_frt B with(nolock)
		       WHERE 1=1
		         AND A.intg_bl_seq = B.intg_bl_seq
		         AND A.BL_NO LIKE #s_hbl_no# + '%' AND A.BIZ_CLSS_CD = 'H'
		         AND A.delt_flg = 'N'
		         AND B.DELT_FLG = 'N'
		       GROUP BY B.INV_SEQ )
		       OR dtl.INV_SEQ IN
                                  ( SELECT B.INV_SEQ
		        FROM TB_OTH_SALES  A with(nolock), tb_frt B with(nolock)
		       WHERE 1=1
		         AND a.oth_seq = B.oth_seq
		         AND A.HBL_NO LIKE #s_hbl_no# + '%'
		         AND A.delt_flg = 'N'
		         AND B.DELT_FLG = 'N'
		       GROUP BY B.INV_SEQ )

		       )
                </isNotEmpty>

		<isNotEmpty property="s_mbl_no">
           AND dtl.INV_SEQ IN
                    (SELECT INV_SEQ
					   FROM tb_frt with(nolock)
					  WHERE 1 = 1
					  AND (intg_bl_seq IN (

												SELECT intg_bl_seq
												FROM tb_intg_bl with(nolock)
												WHERE REF_NO IN (
																<!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
																	  SELECT A.REF_NO
																		FROM tb_intg_bl  A with(nolock)
																	   WHERE 1=1
																		 AND A.BL_NO LIKE #s_mbl_no# + '%'
																		 AND A.BIZ_CLSS_CD = 'M'
																		 AND A.delt_flg = 'N'
																	   GROUP BY A.REF_NO
							                                     )

                                               )
                           <!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
                           OR oth_seq in (select oth_seq from TB_OTH_SALES  with(nolock) where MBL_NO LIKE #s_mbl_no# + '%' and delt_flg = 'N')
                           )
                      )
                </isNotEmpty>

		<isNotEmpty property="s_ref_no">
           AND dtl.INV_SEQ IN
            ( SELECT B.INV_SEQ
		        FROM tb_intg_bl  A with(nolock), tb_frt B with(nolock)
		       WHERE 1=1
		         AND A.intg_bl_seq = B.intg_bl_seq
		         <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
		         AND A.REF_NO LIKE #s_ref_no#
		         AND A.delt_flg = 'N'
		         AND B.DELT_FLG = 'N'
		       GROUP BY B.INV_SEQ )
		</isNotEmpty>

		<isNotEmpty property="s_oth_ref_no">
		     AND dtl.INV_SEQ IN
		     ( SELECT B.INV_SEQ
		         FROM TB_OTH_SALES A with(nolock), TB_FRT B with(nolock)
		        WHERE 1=1
		          AND A.OTH_SEQ = B.OTH_SEQ
		          <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
		          AND A.REF_NO LIKE #s_oth_ref_no#
		     )

		</isNotEmpty>


		<isNotEmpty property="s_wms_ref_no">

		     AND dtl.INV_SEQ IN
		     ( SELECT B.INV_SEQ
		         FROM TB_WM_DOC_MST A with(nolock), TB_FRT B with(nolock)
		        WHERE 1=1
		          AND A.WM_DOC_SEQ = B.WMS_SEQ
		          <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
		          AND A.DOC_REF_NO LIKE #s_wms_ref_no#
		     )
		</isNotEmpty>

		<isNotEmpty property="s_biz_no">
				AND EXISTS(SELECT 1 FROM TB_TRDP trd with(nolock)
								WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.biz_no LIKE #s_biz_no# + '%'
							)
		</isNotEmpty>

                                                   ) a1
		<![CDATA[ where a1.ROWNUM > #beginIdx# AND a1.ROWNUM <= #topCnt#	]]>      
	)
     SELECT
	 <!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
		TT.ROWNUM,
		TT.inv_aply_curr_cd,
		COUNT(1) OVER() subsum_add_tot_cnt,
		MAX(TT.tot_cnt) tot_cnt,
		MAX(TT.inv_seq) inv_seq,
		MAX(TT.inv_no) inv_no,
		MAX(TT.o_inv_no) o_inv_no,
		MAX(TT.post_dt) post_dt,
		MAX(TT.inv_dt) inv_dt,
		MAX(TT.modi_tms) modi_tms,
		MAX(TT.mbl_no) mbl_no,
		MAX(TT.hbl_no) hbl_no,
		MAX(TT.ref_no) ref_no,
		MAX(TT.oth_ref_no) oth_ref_no,
		MAX(TT.wms_ref_no) wms_ref_no,
		MAX(TT.intg_bl_seq) intg_bl_seq,
		MAX(TT.oth_seq) oth_seq,
		MAX(TT.wms_seq) wms_seq,
		MAX(TT.bl_cnt_cd) bl_cnt_cd,
		MAX(TT.ref_ofc_cd) ref_ofc_cd,
		MAX(TT.m_intg_bl_seq) m_intg_bl_seq,
		MAX(TT.bnd_clss_cd) bnd_clss_cd,
		MAX(TT.sell_buy_tp_cd) sell_buy_tp_cd,
		MAX(TT.air_sea_clss_cd) air_sea_clss_cd,
		MAX(TT.inv_tp) inv_tp,
		MAX(TT.trdp_cd) trdp_cd,
		SUM(TT.duty_tax_amt) duty_tax_amt,
		SUM(TT.non_taxable_amt) non_taxable_amt,
		SUM(TT.taxable_amt) taxable_amt,
		SUM(TT.vat_amt) vat_amt,
		SUM(TT.whd_amt) whd_amt,
		SUM(TT.duty_tax_tot_amt) duty_tax_tot_amt,
		SUM(TT.non_taxable_tot_amt) non_taxable_tot_amt,
		SUM(TT.taxable_tot_amt) taxable_tot_amt,
		SUM(TT.vat_tot_amt) vat_tot_amt,
		SUM(TT.whd_tot_amt) whd_tot_amt,
		SUM(TT.inv_sum_amt) inv_sum_amt,
		SUM(TT.locl_ttl_amt) locl_ttl_amt,
		SUM(TT.locl_ttl_tot_amt) locl_ttl_tot_amt,
		SUM(TT.profit_amt) profit_amt,
		SUM(TT.pay_amt) pay_amt,
		MAX(TT.last_pay_dt) last_pay_dt,
		SUM(TT.bal_amt) bal_amt,
		SUM(TT.pay_tot_amt) pay_tot_amt,
		SUM(TT.bal_tot_amt) bal_tot_amt,
		MAX(TT.over_due) over_due,
		MAX(TT.inv_due_dt) inv_due_dt,
		MAX(TT.vnd_inv_no) vnd_inv_no,
		MAX(TT.ofc_cd) ofc_cd,
		MAX(TT.rgst_usrid) rgst_usrid,
		MAX(TT.rgst_tms) rgst_tms,
		MAX(TT.modi_usrid) modi_usrid,
		MAX(TT.inv_modi_tms) inv_modi_tms,
		MAX(TT.clt_cmpl_flg) clt_cmpl_flg,
		MAX(TT.cmb_inv_seq) cmb_inv_seq,
		MAX(TT.imp_ref_no) imp_ref_no,
		MAX(TT.cust_ref_no) cust_ref_no,
		MAX(TT.inv_rmk) inv_rmk,
		MAX(TT.shrt_nm) shrt_nm,
		MAX(TT.biz_no) biz_no,
		MAX(TT.trdp_nm) trdp_nm,
		MAX(TT.jnr_no) jnr_no,
		MAX(TT.etd_dt_tm) etd_dt_tm,
		MAX(TT.eta_dt_tm) eta_dt_tm,
		MAX(TT.trx_modi_tms) trx_modi_tms,
		MAX(TT.TAX_BIL_FLG) TAX_BIL_FLG,
		MAX(TT.TAX_NO) TAX_NO,
		MAX(TT.FINC_OFC_CD) FINC_OFC_CD,
		MAX(TT.slip_no) slip_no,
		MAX(TT.bloked_by) bloked_by,
		MAX(TT.issued_by) issued_by,
		MAX(TT.block_dt) block_dt,
		MAX(TT.vchr_no) vchr_no,
		MAX(TT.vchr_tp_nm) vchr_tp_nm,
		<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
		MAX(TT.pol_nm) pol_nm,
		MAX(TT.modi_usr_nm) modi_usr_nm,
		MAX(TT.rgst_usr_nm) rgst_usr_nm,
		<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
		MAX(TT.ship_trdp_nm) ship_trdp_nm,
		MAX(TT.last_chk_no) last_chk_no,
		MAX(TT.pod_nm) pod_nm,
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		(CASE
		WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(TT.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(TT.ref_no) AND DELT_FLG = 'N') <![CDATA[ <> ]]> '' THEN (SELECT rlsd_dt_tm FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(TT.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(TT.ref_no) AND DELT_FLG = 'N')
		WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(TT.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(TT.ref_no) AND DELT_FLG = 'N') <![CDATA[ <> ]]> '' AND ISNULL(MAX(TT.hbl_no),'') = '' THEN (SELECT rlsd_dt_tm FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(TT.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(TT.ref_no) AND DELT_FLG = 'N')
		ELSE ('')
		END) as rlsd_dt_tm,
		<!-- OFVFOUR-8196: [BNX] Adding Bank Date Column in AR/AP list -->
        (SELECT top 1 clr_dt FROM TB_JNR_MST mst
		LEFT JOIN TB_JNR_DTL dtl ON dtl.JNR_NO = mst.JNR_NO
		LEFT JOIN TB_INV_DTL inv_dtl ON dtl.INV_SEQ = inv_dtl.INV_SEQ
		WHERE mst.DELT_FLG = 'N' AND dtl.DELT_FLG = 'N' AND inv_dtl.DELT_FLG = 'N' AND dtl.INV_SEQ = MAX(TT.inv_seq)) as clr_dt
	FROM
		(
	 	SELECT
            T1.ROWNUM,
			<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
			COUNT (1) OVER() tot_cnt,
            T1.inv_seq,
            T1.inv_no,
            (select inv_no from tb_inv_dtl with(nolock) where inv_seq = T1.inv_seq) as o_inv_no,
            T1.post_dt,
            T1.inv_dt,
            T1.modi_tms,
            T1.mbl_no,
            T1.hbl_no,
            T1.ref_no,
            T1.oth_ref_no,
            T1.wms_ref_no,
            T1.intg_bl_seq,
            T1.oth_seq,
            T1.wms_seq,
            T1.bl_cnt_cd,
            T1.ref_ofc_cd,
            T1.m_intg_bl_seq,
            T1.bnd_clss_cd,
            MAX(mst.sell_buy_tp_cd) AS sell_buy_tp_cd,
            max(mst.air_sea_clss_cd) AS air_sea_clss_cd,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
                WHEN MAX(mst.sell_buy_tp_cd) = 'D'
                OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
                WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
            END AS inv_tp             ,
            MAX(mst.trdp_cd) AS trdp_cd,
            MAX(T1.duty_tax_amt) AS duty_tax_amt,
            MAX(T1.non_taxable_amt) AS non_taxable_amt,
            MAX(T1.taxable_amt) AS taxable_amt,
            MAX(T1.vat_amt) AS vat_amt,
            MAX(T1.whd_amt) AS whd_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.duty_tax_amt) * -1
                ELSE MAX(T1.duty_tax_amt)
            END AS duty_tax_tot_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.non_taxable_amt) * -1
                ELSE MAX(T1.non_taxable_amt)
            END AS non_taxable_tot_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(T1.taxable_amt) * -1
                ELSE MAX(T1.taxable_amt)
            END AS taxable_tot_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'B'
                OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.vat_amt) * -1
                ELSE MAX(T1.vat_amt)
            END AS vat_tot_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'B'
                OR MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(T1.whd_amt) * -1
                ELSE MAX(T1.whd_amt)
            END AS whd_tot_amt,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
                ELSE MAX(dtl.inv_sum_amt)
            END AS inv_sum_amt,
            
	   		<!-- #5408 [JTC] Invoice List 에 Local Amount 컬럼 추가 -->
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.locl_ttl_amt) * -1
                ELSE Max(dtl.locl_ttl_amt)
            END AS locl_ttl_amt,	
            CASE
              WHEN Max(mst.sell_buy_tp_cd) = 'C'
                    OR Max(mst.sell_buy_tp_cd) = 'B' THEN
              Max(dtl.locl_ttl_amt) * -1
              ELSE Max(dtl.locl_ttl_amt)
            END                                               AS locl_ttl_tot_amt,            
            
                        
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C'
                OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_sum_amt) * -1
                ELSE MAX(dtl.inv_sum_amt)
            END AS profit_amt                 ,
            MAX(dtl.pay_amt)     AS pay_amt             ,
            MAX(dtl.last_pay_dt)  AS last_pay_dt             ,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.bal_amt) * -1
                ELSE MAX(dtl.bal_amt)
            END AS bal_amt             ,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C'
                OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.pay_amt) * -1
                ELSE MAX(dtl.pay_amt)
            END AS pay_tot_amt                ,
            CASE
                WHEN MAX(mst.sell_buy_tp_cd) = 'C'
                OR MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.bal_amt) * -1
                ELSE MAX(dtl.bal_amt)
            END AS bal_tot_amt                ,
            CASE
                WHEN MAX(dtl.bal_amt) = 0 THEN ''
                ELSE datediff(day,
                MAX(dtl.INV_DUE_DT),
                getdate())
            END AS over_due,
            MAX(dtl.inv_due_dt)   AS inv_due_dt,
            MAX(dtl.buy_inv_no)       AS vnd_inv_no,
            MAX(mst.ofc_cd)    AS ofc_cd,
            MAX(dtl.inv_aply_curr_cd) AS inv_aply_curr_cd,
            MAX(mst.rgst_usrid)   AS rgst_usrid,
            MAX(MST.rgst_tms) AS rgst_tms,
            MAX(mst.modi_usrid)   AS modi_usrid ,
            MAX(MST.inv_modi_tms) AS inv_modi_tms,
            MAX(ISNULL(BLCK.CLT_CMPL_FLG1,
            DTL.CLT_CMPL_FLG))  AS clt_cmpl_flg,
            MAX(mst.cmb_inv_seq)  AS cmb_inv_seq,
            CASE
                WHEN isnull(MAX(dtl.CUST_REF_NO), '') != ''
                AND (MAX(mst.sell_buy_tp_cd) IN ('D','C')) THEN MAX(dtl.CUST_REF_NO)
                ELSE MAX(T1.agent_ref_no)
            END AS imp_ref_no,
            CASE
                WHEN isnull(MAX(dtl.CUST_REF_NO), '') != ''
                AND MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)
                ELSE MAX(T1.cust_ref_no)
            END AS cust_ref_no,
            MAX(mst.inv_rmk) AS inv_rmk,
            MAX(prnr.shrt_nm)   AS shrt_nm,
               MAX(prnr.biz_no)   AS biz_no,
            <!-- Jeong Il Park - Order -->
            <!-- MAX(prnr.eng_nm)     AS trdp_nm, -->
            MAX(prnr.locl_nm)     AS trdp_nm,
            
            MAX(jnr.jnr_no)    AS jnr_no,
            T1.etd_dt_tm,
            T1.eta_dt_tm,
            (case
                when MAX(TIDB.MODI_TMS) IS null then T1.modi_tms
                when T1.modi_tms > MAX(TIDB.MODI_TMS) then T1.modi_tms
                else MAX(TIDB.MODI_TMS)
            end)  trx_modi_tms       ,
            MAX(dtl.LAST_CHK_NO) AS LAST_CHK_NO,
            (CASE MAX(mst.TAX_BIL_FLG)
	            WHEN 'Y' THEN 1
	            WHEN 'N' THEN 0
	            ELSE 0
	        END) AS TAX_BIL_FLG,
			MAX(mst.TAX_NO) AS TAX_NO,
			MAX(mst.FINC_OFC_CD) AS FINC_OFC_CD,
            MAX(dtl.slip_no) 								 AS slip_no,
			MAX(blck.bloked_by) 						     AS bloked_by,
			MAX(issued_usr.locl_usr_nm) 					 AS issued_by,
			MAX(blck.block_dt) 								 AS block_dt,
			<!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			MAX(t1.vchr_no) as vchr_no,
			(select cd_nm from tb_com_cd_dtl as a with(nolock) where a.com_cd = 'C225' and MAX(t1.vchr_tp_cd) = a.cd_val) as vchr_tp_nm
			<!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
			,MAX(t1.pol_nm) AS pol_nm
			,MAX(t1.pod_nm) AS pod_nm
			<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
			,MAX(t1.ship_trdp_nm) AS ship_trdp_nm
			<!-- #5610 [Starway] Excel download 시 특정 칼럼 data missing 문제 
			Add user name -->
			,(SELECT eng_usr_nm FROM tb_usr with(nolock) WHERE usrid = MAX(mst.modi_usrid)) as modi_usr_nm
            ,(SELECT eng_usr_nm FROM tb_usr with(nolock) WHERE usrid = MAX(mst.rgst_usrid)) as rgst_usr_nm
        FROM
            (  SELECT
                a1.*
            FROM
                (   SELECT
                    ROW_NUMBER() OVER (
                ORDER BY
                    A.post_dt desc,
                    A.modi_tms desc) as ROWNUM,
                    A.*
                FROM
                    ( SELECT
                        dtl.inv_seq          ,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'D'
                            OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
                        END       AS inv_no             ,
                        MAX(dtl.inv_post_dt)  AS post_dt             ,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD != 'VAT'
                            AND fcd.FRT_CLSS_CD != 'WHD'
                            AND (ISNULL(fcd.PFMC_FLG, 'N') = 'N'
                            OR fcd.PFMC_FLG = '')  THEN  CASE frt.SELL_BUY_TP_CD
                                WHEN 'C' then frt.CR_AMT*-1
                                ELSE frt.INV_AMT
                            END
                            ELSE 0
                        END ) AS duty_tax_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD != 'VAT'
                            	AND fcd.FRT_CLSS_CD != 'WHD'
                            	AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'
                            	<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            	AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '') -->
                            	<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            	AND frt.frt_cd NOT IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
                            	-->
                            	AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) = 0
                            THEN  CASE frt.SELL_BUY_TP_CD
                                WHEN 'C' then frt.CR_AMT*-1
                                ELSE frt.INV_AMT
                            END
                            ELSE 0
                        END ) AS non_taxable_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD != 'VAT'
                            	AND fcd.FRT_CLSS_CD != 'WHD'
                            	AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'
                            	<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            	AND ISNULL(fcd.TAX_FLG, 'N') = 'Y' -->
                            	<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            	AND frt.frt_cd IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
                            	-->
                            	AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) > 0
                            THEN  CASE frt.SELL_BUY_TP_CD
                                WHEN 'C' then frt.CR_AMT*-1
                                ELSE frt.INV_AMT
                            END
                            ELSE 0
                        END ) AS taxable_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS vat_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS whd_amt,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
                            ELSE MAX(dtl.inv_sum_amt)
                        END AS inv_sum_amt                 ,
                        MAX(dtl.modi_tms) AS modi_tms  ,
                        CASE
                            WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
                            ELSE MAX(mbl.bl_no)
                        END AS mbl_no                ,
                        CASE
                            WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(mbl.bl_no)
                            ELSE MAX(bl.bl_no)
                        end AS hbl_no             ,
                        MAX(bl.ref_no)    AS ref_no             ,
                        ''       AS oth_ref_no   ,
                        ''       AS wms_ref_no   ,
                        MAX(bl.intg_bl_seq)   AS intg_bl_seq             ,
                        ''       AS oth_seq             ,
                        ''       AS wms_seq             ,
                        (select
                            upper(x.CNT_CD)
                        from
                            tb_ofc x with(nolock)
                        where
                            x.OFC_CD = MAX(bl.ref_ofc_cd) ) AS bl_cnt_cd             ,
                        MAX(bl.ref_ofc_cd)   AS ref_ofc_cd             ,
                        CASE
                            WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.intg_bl_seq)
                            ELSE MAX(mbl.intg_bl_seq)
                        END AS m_intg_bl_seq          ,
                        CASE
                            WHEN MAX(bl.biz_clss_cd) = 'M' THEN (select max(bnd_clss_cd)
                            from
                                tb_add_info_bnd with(nolock)
                            where
                                intg_bl_seq = max(bl.intg_bl_seq))
                            ELSE (select
                                max(bnd_clss_cd)
                            from
                                tb_add_info_bnd with(nolock)
                            where
                                intg_bl_seq = max(mbl.intg_bl_seq))
                        END AS bnd_clss_cd                  ,
                        CASE
                            WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
                            WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
                        END AS agent_ref_no,
                        MAX(bl.cust_ref_no) AS cust_ref_no,
                        MAX(bl.etd_dt_tm) AS etd_dt_tm,
                        MAX(bl.eta_dt_tm) AS eta_dt_tm,
                        MAX(dtl.inv_dt)   AS inv_dt,
                        MAX(dtl.LAST_CHK_NO) AS LAST_CHK_NO,
                        (CASE MAX(mst.TAX_BIL_FLG)
				            WHEN 'Y' THEN 1
				            WHEN 'N' THEN 0
				            ELSE 0
				        END) AS TAX_BIL_FLG,
						MAX(mst.TAX_NO) AS TAX_NO,
						MAX(mst.FINC_OFC_CD) AS FINC_OFC_CD,
						<!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
						MAX(dtl.vchr_no) as vchr_no,
						MAX(dtl.vchr_tp_cd) as vchr_tp_cd,
						<!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
						MAX(bl.pol_nm) AS pol_nm,
						<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
						MAX(bl.pod_nm) AS pod_nm,
						MAX(mst.ship_trdp_nm) AS ship_trdp_nm
                    FROM
                        INV_INFO mst with(nolock)
                    JOIN
                        TB_INV_DTL dtl with(nolock)
                            ON mst.INV_SEQ = dtl.INV_SEQ
                    JOIN
                        TB_FRT frt with(nolock)
                            ON dtl.INV_SEQ = frt.INV_SEQ
                    LEFT OUTER JOIN
                        TB_FRT_CD fcd with(nolock)
                            ON frt.FRT_CD = fcd.frt_cd
                    JOIN
                        TB_INTG_BL bl with(nolock)
                            ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ
                            AND bl.delt_flg = 'N'
                    LEFT JOIN
                        tb_intg_bl_rlt rlt with(nolock)
                            ON  bl.intg_bl_seq = rlt.intg_bl_seq
                            AND rlt.delt_flg = 'N'
                    LEFT JOIN
                        tb_intg_bl mbl with(nolock)
                            ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq
                            AND mbl.biz_clss_cd = 'M'
                            AND mbl.delt_flg = 'N'
                    WHERE
                        mst.DELT_FLG = 'N'
                        AND isnull(mst.air_sea_clss_cd,'O') != 'G'
                        AND isnull(frt.oth_seq,'') =''
                        AND isnull(frt.WMS_SEQ,'') =''
				<isNotEmpty property="s_ofc_cd">
						AND bl.ref_ofc_cd = #s_ofc_cd#
				</isNotEmpty>
                    GROUP BY
                        dtl.inv_seq
                    UNION ALL
                       SELECT
                        dtl.inv_seq          ,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'D'
                            OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
                        END       AS inv_no             ,
                        MAX(dtl.inv_post_dt)  AS post_dt             ,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD != 'VAT'
                            AND fcd.FRT_CLSS_CD != 'WHD'
                            AND (ISNULL(fcd.PFMC_FLG,
                            'N') = 'N'
                            OR fcd.PFMC_FLG = '')                THEN  CASE frt.SELL_BUY_TP_CD
                                WHEN 'C' then frt.CR_AMT*-1
                                ELSE frt.INV_AMT
                            END
                            ELSE 0
                        END ) AS duty_tax_amt,
                        SUM( CASE
                            	WHEN fcd.FRT_CLSS_CD != 'VAT'
                            		AND fcd.FRT_CLSS_CD != 'WHD'
                            		AND ISNULL(fcd.PFMC_FLG, 'N') = 'Y'
                            		<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            		AND (ISNULL(fcd.TAX_FLG, 'N') = 'N' OR fcd.TAX_FLG = '')  -->
                            		<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            		AND frt.frt_cd NOT IN (frt.vat_rt_cd, frt.vat_rt_cd1, vat_rt_cd2)
                            		-->
                            		AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) = 0
                            	THEN
                            		CASE frt.SELL_BUY_TP_CD
                                		WHEN 'C' then frt.CR_AMT*-1
                                		ELSE frt.INV_AMT
                            		END
                            	ELSE 0
                        	END ) AS non_taxable_amt,
                        SUM( CASE
                            	WHEN fcd.FRT_CLSS_CD != 'VAT'
                            		AND fcd.FRT_CLSS_CD != 'WHD'
                           			AND ISNULL(fcd.PFMC_FLG, 'N') = 'Y'
                            		<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            		AND ISNULL(fcd.TAX_FLG, 'N') = 'Y'  -->
                            		<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            		AND frt.frt_cd IN (frt.vat_rt_cd, frt.vat_rt_cd1, vat_rt_cd2)
                            		-->
                            		AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) > 0
                            	THEN
                            		CASE frt.SELL_BUY_TP_CD
                                		WHEN 'C'
                                		THEN frt.CR_AMT*-1
                                		ELSE frt.INV_AMT
                            		END
                            	ELSE 0
                        	END ) AS taxable_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS vat_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS whd_amt,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
                            ELSE MAX(dtl.inv_sum_amt)
                        END AS inv_sum_amt                 ,
                        MAX(dtl.modi_tms) AS modi_tms  ,
                        MAX(bl.mbl_no)    AS mbl_no                ,
                        MAX(bl.hbl_no)    AS hbl_no                ,
                        ''       AS ref_no             ,
                        MAX(bl.ref_no)    AS oth_ref_no     ,
                        ''       AS wms_ref_no             ,
                        ''       AS intg_bl_seq             ,
                        MAX(bl.OTH_SEQ)    AS oth_seq ,
                        ''    AS wms_seq             ,
                        (select
                            upper(x.CNT_CD)
                        from
                            tb_ofc x with(nolock)
                        where
                            x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
                        MAX(bl.ofc_cd)    AS ref_ofc_cd             ,
                        '' AS m_intg_bl_seq          ,
                        '' AS bnd_clss_cd          ,
                        '' AS agent_ref_no,
                        MAX(bl.cust_ref_no) AS cust_ref_no,
                        MAX(bl.etd_dt_tm) AS etd_dt_tm,
                        MAX(bl.eta_dt_tm) AS eta_dt_tm,
                        MAX(dtl.inv_dt)   AS inv_dt,
                        MAX(dtl.LAST_CHK_NO) AS LAST_CHK_NO,
                        (CASE MAX(mst.TAX_BIL_FLG)
				            WHEN 'Y' THEN 1
				            WHEN 'N' THEN 0
				            ELSE 0
				        END) AS TAX_BIL_FLG,
						MAX(mst.TAX_NO) AS TAX_NO,
						MAX(mst.FINC_OFC_CD) AS FINC_OFC_CD,
						<!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
						MAX(dtl.vchr_no) as vchr_no,
						MAX(dtl.vchr_tp_cd) as vchr_tp_cd,
						<!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
						MAX(bl.pol_nm) AS pol_nm,
						<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
						MAX(bl.pod_nm) AS pod_nm,
						MAX(mst.ship_trdp_nm) AS ship_trdp_nm
                    FROM
                        INV_INFO mst with(nolock)
                    JOIN
                        TB_INV_DTL dtl with(nolock)
                            ON mst.INV_SEQ = dtl.INV_SEQ
                    JOIN
                        TB_FRT frt with(nolock)
                            ON dtl.INV_SEQ = frt.INV_SEQ
                    LEFT OUTER JOIN
                        TB_FRT_CD fcd with(nolock)
                            ON frt.FRT_CD = fcd.frt_cd
                    JOIN
                        TB_OTH_SALES bl with(nolock)
                            ON frt.OTH_SEQ = bl.OTH_SEQ
                    WHERE
                        mst.DELT_FLG = 'N'
                        AND isnull(mst.air_sea_clss_cd,'O') != 'G'
                        AND isnull(frt.oth_seq,'') !=''
				<isNotEmpty property="s_ofc_cd">
						AND bl.ofc_cd = #s_ofc_cd#
				</isNotEmpty>
                    GROUP BY
                        dtl.inv_seq
                    UNION ALL
                    SELECT
                        dtl.inv_seq          ,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'D'
                            OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
                            WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
                        END       AS inv_no             ,
                        MAX(dtl.inv_post_dt)  AS post_dt             ,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD != 'VAT'
                            AND fcd.FRT_CLSS_CD != 'WHD'
                            AND (ISNULL(fcd.PFMC_FLG,
                            'N') = 'N'
                            OR fcd.PFMC_FLG = '')                THEN  CASE frt.SELL_BUY_TP_CD
                                WHEN 'C' then frt.CR_AMT*-1
                                ELSE frt.INV_AMT
                            END
                            ELSE 0
                        END ) AS duty_tax_amt,
                        SUM( CASE
                            	WHEN fcd.FRT_CLSS_CD != 'VAT'
                            		AND fcd.FRT_CLSS_CD != 'WHD'
                            		AND ISNULL(fcd.PFMC_FLG, 'N') = 'Y'
                            		<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            		AND (ISNULL(fcd.TAX_FLG, 'N') = 'N' OR fcd.TAX_FLG = '')-->
                            		<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            		AND frt.frt_cd NOT IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
                            		-->
                            		AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) = 0
                            	THEN
                            		CASE frt.SELL_BUY_TP_CD
                                		WHEN 'C'
                                		THEN frt.CR_AMT*-1
                                		ELSE frt.INV_AMT
                            		END
                            	ELSE 0
                        	END ) AS non_taxable_amt,
                        SUM( CASE
                            	WHEN fcd.FRT_CLSS_CD != 'VAT'
                            		AND fcd.FRT_CLSS_CD != 'WHD'
                            		AND ISNULL(fcd.PFMC_FLG, 'N') = 'Y'
                            		<!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
                            		AND ISNULL(fcd.TAX_FLG, 'N') = 'Y'                		-->
                            		<!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
                            		AND frt.frt_cd IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
                            		-->
                            		AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) > 0
                            	THEN
                            		CASE frt.SELL_BUY_TP_CD
                                		WHEN 'C'
                                		THEN frt.CR_AMT*-1
                                	ELSE frt.INV_AMT
                            		END
                            	ELSE 0
                        	END ) AS taxable_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS vat_amt,
                        SUM( CASE
                            WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt.INV_AMT
                            ELSE 0
                        END ) AS whd_amt,
                        CASE
                            WHEN MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_sum_amt) * -1
                            ELSE MAX(dtl.inv_sum_amt)
                        END AS inv_sum_amt             ,
                        MAX(dtl.modi_tms) AS modi_tms  ,
                        MAX(bl.mbl_no)    AS mbl_no    ,
                        MAX(bl.hbl_no)    AS hbl_no    ,
                        ''       AS ref_no             ,
                        ''    AS oth_ref_no     ,
                        MAX(bl.doc_ref_no)    AS wms_ref_no     ,
                        ''       AS intg_bl_seq             ,
                        ''    AS oth_seq             ,
                        MAX(bl.WM_DOC_SEQ)    AS WMS_SEQ ,
                        (select
                            upper(x.CNT_CD)
                        from
                            tb_ofc x with(nolock)
                        where
                            x.OFC_CD = MAX(bl.ofc_cd) ) AS bl_cnt_cd             ,
                        MAX(bl.ofc_cd)    AS ref_ofc_cd             ,
                        '' AS m_intg_bl_seq          ,
                        '' AS bnd_clss_cd          ,
                        '' AS agent_ref_no,
                        MAX(bl.cust_ref_no) AS cust_ref_no,
                        '' AS etd_dt_tm,
                        '' AS eta_dt_tm,
                        MAX(dtl.inv_dt) AS inv_dt,
                        MAX(dtl.LAST_CHK_NO) AS LAST_CHK_NO,
                        (CASE MAX(mst.TAX_BIL_FLG)
				            WHEN 'Y' THEN 1
				            WHEN 'N' THEN 0
				            ELSE 0
				        END) AS TAX_BIL_FLG,
						MAX(mst.TAX_NO) AS TAX_NO,
						MAX(mst.FINC_OFC_CD) AS FINC_OFC_CD,
						<!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
						MAX(dtl.vchr_no) as vchr_no,
						MAX(dtl.vchr_tp_cd) as vchr_tp_cd,
						<!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
						'' AS pol_nm,
						<!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
						'' AS pod_nm,
						MAX(mst.ship_trdp_nm) AS ship_trdp_nm
                    FROM
                        INV_INFO mst with(nolock)
                    JOIN
                        TB_INV_DTL dtl with(nolock)
                            ON mst.INV_SEQ = dtl.INV_SEQ
                    JOIN
                        TB_FRT frt with(nolock)
                            ON dtl.INV_SEQ = frt.INV_SEQ
                    LEFT OUTER JOIN
                        TB_FRT_CD fcd with(nolock)
                            ON frt.FRT_CD = fcd.frt_cd
                    JOIN
                        TB_WM_DOC_MST bl with(nolock)
                            ON frt.WMS_SEQ = bl.WM_DOC_SEQ
                    WHERE
                        mst.DELT_FLG = 'N'
                        AND isnull(mst.air_sea_clss_cd,'O') != 'G'
                        AND isnull(frt.WMS_SEQ,'') !=''
					<isNotEmpty property="s_ofc_cd">
						AND bl.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
                    GROUP BY
                        dtl.inv_seq,
                        dtl.inv_dt                 ) A
                ) a1
            )  T1
        JOIN
            TB_INV mst with(nolock)
                ON T1.INV_SEQ = mst.INV_SEQ
        JOIN
            TB_INV_DTL dtl with(nolock)
                ON mst.INV_SEQ = dtl.INV_SEQ
        LEFT JOIN
            tb_trdp prnr with(nolock)
                ON prnr.trdp_cd = MST.trdp_cd
        LEFT JOIN
            TB_JNR_DTL jnr with(nolock)
                ON T1.INV_SEQ = jnr.INV_SEQ
                AND isnull(jnr.DELT_FLG, 'N') != 'Y'
        LEFT OUTER JOIN
            (
                SELECT
                    INV_SEQ AS INV_SEQ1,
                    INV_NO AS INV_NO1,
                    CLT_CMPL_FLG AS CLT_CMPL_FLG1,
                    CASE WHEN CLT_CMPL_FLG = 'Y' THEN
                    	blcked_usr.locl_usr_nm
                    ELSE '' END AS BLOKED_BY,
                    CASE WHEN CLT_CMPL_FLG = 'Y' THEN
			     		ISNULL(CONVERT(VARCHAR(23), CONVERT(DATETIME, block_dt), 110), CONVERT(VARCHAR(23), CONVERT(DATETIME, idb.modi_tms), 110))
			     	ELSE '' END AS BLOCK_DT
			    FROM tb_inv_dtl_blck idb with(nolock)
			 	LEFT OUTER JOIN tb_usr blcked_usr with(nolock)
			 		ON idb.rgst_usrid = blcked_usr.usrid
            ) BLCK
                ON DTL.INV_SEQ = BLCK.INV_SEQ1
                AND DTL.INV_NO = BLCK.INV_NO1
        LEFT OUTER JOIN
            (
                SELECT
                    MODI_TMS,
                    INV_SEQ
                FROM
                    TB_INV_DTL_BLCK with(nolock)
            ) TIDB
                ON TIDB.INV_SEQ = DTL.INV_SEQ
        LEFT OUTER JOIN TB_USR issued_usr with(nolock)
			 ON mst.rgst_usrid = issued_usr.usrid
        GROUP BY
            T1.inv_seq,
            T1.inv_no,
            T1.post_dt,
            T1.modi_tms,
            T1.mbl_no,
            T1.hbl_no,
            T1.ref_no,
            T1.oth_ref_no,
            T1.wms_ref_no,
            T1.intg_bl_seq,
            T1.oth_seq,
            T1.wms_seq,
            T1.bl_cnt_cd,
            T1.ref_ofc_cd,
            T1.m_intg_bl_seq,
            T1.bnd_clss_cd,
            T1.cust_ref_no,
            T1.ROWNUM,
            T1.etd_dt_tm,
            T1.eta_dt_tm,
            T1.inv_dt
			<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
		) TT
		GROUP BY
			TT.inv_aply_curr_cd,
			ROLLUP(TT.rownum)
        ORDER BY
		<isNotEmpty property="f_orderByInfo">
		 $f_orderByInfo$
		</isNotEmpty>
        <isEmpty property="f_orderByInfo">
				<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
				<!-- T1.post_dt desc, T1.inv_dt desc, T1.modi_tms desc -->
				CASE WHEN ISNULL(TT.ROWNUM,'') = '' THEN 'XX' ELSE 'AA' END,
		    	MAX(TT.post_dt) desc,
		    	MAX(TT.inv_dt) desc,
		    	MAX(TT.modi_tms) desc
		</isEmpty>

	</select>
	<!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchInvoiceList" parameterClass="java.util.HashMap" resultClass="InvListVO">
    <!-- #1826 [BINEX V4421] CANNOT SEARCH INVOICE WITH 1) POST DATE 2) AMOUNT INPUTTED -->

		/*  AccInvInvoiceSQL.xml > searchInvoiceList  */
		<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
		SELECT <!-- Row_number()
               OVER( ORDER BY T2.post_dt DESC, T2.modi_tms DESC) AS RNUM, 
               T2.* -->
			   T2.rownum,
			   T2.inv_aply_curr_cd,
			   COUNT(1) OVER() subsum_add_tot_cnt,
			   MAX(T2.tot_cnt) tot_cnt,
			   MAX(T2.TRNK_VOY) trnk_voy,
			   MAX(T2.TRNK_VSL_NM) trnk_vsl_nm,
			   MAX(T2.LNR_BKG_NO)  lnr_bkg_no,
			   MAX(T2.inv_seq) inv_seq,
			   MAX(T2.inv_no) inv_no,
			   <!-- OFVFOUR-7763 [PQC][Invoice List] - Invoice List does not show full information -->
			   MAX(T2.trdp_nm) trdp_nm,
			   MAX(T2.post_dt) post_dt,
			   MAX(T2.o_inv_no) o_inv_no,
			   MAX(T2.modi_tms) modi_tms,
			   MAX(T2.mbl_no) mbl_no,
			   MAX(T2.hbl_no) hbl_no,
			   MAX(T2.ref_no) ref_no,
			   MAX(T2.oth_ref_no) oth_ref_no,
			   MAX(T2.wms_ref_no) wms_ref_no,
			   MAX(T2.oth_seq) oth_seq,
			   MAX(T2.wms_seq) wms_seq,
			   MAX(T2.intg_bl_seq) intg_bl_seq,
			   MAX(T2.bl_cnt_cd) bl_cnt_cd,
			   MAX(T2.ref_ofc_cd) ref_ofc_cd,
			   MAX(T2.m_intg_bl_seq) m_intg_bl_seq,
			   MAX(T2.bnd_clss_cd) bnd_clss_cd,
			   MAX(T2.sell_buy_tp_cd) sell_buy_tp_cd,
			   MAX(T2.air_sea_clss_cd) air_sea_clss_cd,
			   MAX(T2.inv_tp) inv_tp,
			   MAX(T2.trdp_cd) trdp_cd,
			   SUM(T2.duty_tax_amt) duty_tax_amt,
			   SUM(T2.non_taxable_amt) non_taxable_amt,
			   SUM(T2.taxable_amt) taxable_amt,
			   SUM(T2.vat_amt) vat_amt,
			   SUM(T2.whd_amt) whd_amt,
			   SUM(T2.duty_tax_tot_amt) duty_tax_tot_amt,
			   SUM(T2.non_taxable_tot_amt) non_taxable_tot_amt,
			   SUM(T2.taxable_tot_amt) taxable_tot_amt,
			   SUM(T2.vat_tot_amt) vat_tot_amt,
			   SUM(T2.whd_tot_amt) whd_tot_amt,
			   SUM(T2.inv_sum_amt) inv_sum_amt,
			   SUM(T2.locl_ttl_amt) locl_ttl_amt,
			   SUM(T2.locl_ttl_tot_amt) locl_ttl_tot_amt,
			   SUM(T2.profit_amt) profit_amt,
			   SUM(T2.pay_amt) pay_amt,
			   MAX(T2.last_pay_dt) last_pay_dt,
			   SUM(T2.bal_amt) bal_amt,
			   SUM(T2.pay_tot_amt) pay_tot_amt,
			   SUM(T2.bal_tot_amt) bal_tot_amt,
			   MAX(T2.over_due) over_due,
			   MAX(T2.inv_due_dt) inv_due_dt,
			   MAX(T2.vnd_inv_no) vnd_inv_no,
			   MAX(T2.ofc_cd) ofc_cd,
			   MAX(T2.rgst_usrid) rgst_usrid,
			   MAX(T2.rgst_tms) rgst_tms,
			   MAX(T2.modi_usrid) modi_usrid,
			   MAX(T2.inv_modi_tms) inv_modi_tms,
			   MAX(T2.clt_cmpl_flg) clt_cmpl_flg,
			   MAX(T2.cmb_inv_seq) cmb_inv_seq,
			   MAX(T2.imp_ref_no) imp_ref_no,
			   MAX(T2.cust_ref_no) cust_ref_no,
			   MAX(T2.inv_rmk) inv_rmk,
			   MAX(T2.shrt_nm) shrt_nm,
			   MAX(T2.biz_no) biz_no,
			   MAX(T2.ship_trdp_nm) ship_trdp_nm,
			   MAX(T2.jnr_no) jnr_no,
			   MAX(T2.etd_dt_tm) etd_dt_tm,
			   MAX(T2.eta_dt_tm) eta_dt_tm,
			   MAX(T2.inv_dt) inv_dt,
			   MAX(T2.trx_modi_tms) trx_modi_tms,
			   MAX(T2.last_chk_no) last_chk_no,
			   MAX(T2.TAX_BIL_FLG) TAX_BIL_FLG,
			   MAX(T2.TAX_NO) TAX_NO,
			   MAX(T2.FINC_OFC_CD) FINC_OFC_CD,
			   MAX(T2.total_rows_cnt) total_rows_cnt,
			   MAX(T2.slip_no) slip_no,
			   MAX(T2.bloked_by) bloked_by,
			   MAX(T2.issued_by) issued_by,
			   MAX(T2.block_dt) block_dt,
			   MAX(T2.vchr_no) vchr_no,
			   MAX(T2.vchr_tp_nm) vchr_tp_nm,
			   MAX(T2.pol_nm) pol_nm,
			   MAX(T2.pod_nm) pod_nm
               ,(SELECT eng_usr_nm FROM tb_usr WITH(nolock) WHERE usrid = MAX(T2.modi_usrid)) as modi_usr_nm
               ,(SELECT eng_usr_nm FROM tb_usr WITH(nolock) WHERE usrid = MAX(T2.rgst_usrid)) as rgst_usr_nm
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
				,(CASE
					WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(T2.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N') <![CDATA[ <> ]]> '' THEN (SELECT rlsd_dt_tm FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(T2.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N')
					WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(T2.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N') <![CDATA[ <> ]]> '' AND ISNULL(MAX(T2.hbl_no),'') = '' THEN (SELECT rlsd_dt_tm FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[ <> ]]> '' AND bl_no = MAX(T2.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N')
					ELSE ('')
				END) as rlsd_dt_tm,
				<!-- OFVFOUR-8196: [BNX] Adding Bank Date Column in AR/AP list -->
                (SELECT top 1 clr_dt FROM TB_JNR_MST mst
				LEFT JOIN TB_JNR_DTL dtl ON dtl.JNR_NO = mst.JNR_NO
				LEFT JOIN TB_INV_DTL inv_dtl ON dtl.INV_SEQ = inv_dtl.INV_SEQ
				WHERE mst.DELT_FLG = 'N' AND dtl.DELT_FLG = 'N' AND inv_dtl.DELT_FLG = 'N' AND dtl.INV_SEQ = MAX(T2.inv_seq)) as clr_dt
		FROM   (SELECT
					<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
						   COUNT(1) OVER() tot_cnt,
			        <!-- 6301 [JAPT] Mail sending function related request -->
			        	   T1.TRNK_VOY,
                           T1.TRNK_VSL_NM,
		                   T1.LNR_BKG_NO,
			               T1.rownum,
			               T1.inv_seq,
			               T1.inv_no,
			               (select inv_no from tb_inv_dtl WITH(nolock) where inv_seq = T1.inv_seq) as o_inv_no,
			               T1.post_dt,
			               T1.modi_tms,
			               Isnull(T1.mbl_no, '')                             AS mbl_no,
			               T1.hbl_no                                         AS hbl_no,
			               T1.ref_no,
			               T1.oth_ref_no,
			               T1.wms_ref_no,
			               T1.intg_bl_seq,
			               T1.oth_seq,
			               T1.wms_seq,
			               T1.bl_cnt_cd,
			               T1.ref_ofc_cd,
			               T1.m_intg_bl_seq,
			               Isnull(T1.bnd_clss_cd, '')                        AS bnd_clss_cd,
			               Max(mst.sell_buy_tp_cd)                           AS
			               sell_buy_tp_cd,
			               Max(mst.air_sea_clss_cd)                          AS
			               air_sea_clss_cd,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
			                 WHEN Max(mst.sell_buy_tp_cd) = 'D'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
			               END                                               AS inv_tp,
			               Max(mst.trdp_cd)                                  AS trdp_cd,
			               Max(T1.duty_tax_amt)                              AS duty_tax_amt,
			               Max(T1.non_taxable_amt)
			               AS non_taxable_amt,
			               Max(T1.taxable_amt)                               AS taxable_amt,
			               Max(T1.vat_amt)                                   AS vat_amt,
			               Max(T1.whd_amt)                                   AS whd_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.duty_tax_amt) * -1
			                 ELSE Max(T1.duty_tax_amt)
			               END                                               AS
			               duty_tax_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.non_taxable_amt) * -1
			                 ELSE Max(T1.non_taxable_amt)
			               END                                               AS
			               non_taxable_tot_amt
			                      ,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.taxable_amt) * -1
			                 ELSE Max(T1.taxable_amt)
			               END                                               AS
			               taxable_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(T1.vat_amt) * -1
			                 ELSE Max(T1.vat_amt)
			               END                                               AS vat_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(T1.whd_amt) * -1
			                 ELSE Max(T1.whd_amt)
			               END                                               AS whd_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(dtl.inv_sum_amt) * -1
			                 ELSE Max(dtl.inv_sum_amt)
			               END                                               AS inv_sum_amt,

 						   <!-- #5408 [JTC] Invoice List 에 Local Amount 컬럼 추가 -->
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(dtl.locl_ttl_amt) * -1
			                 ELSE Max(dtl.locl_ttl_amt)
			               END                                               AS locl_ttl_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.locl_ttl_amt) * -1
			                 ELSE Max(dtl.locl_ttl_amt)
			               END                                               AS locl_ttl_tot_amt,


			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.inv_sum_amt) * -1
			                 ELSE Max(dtl.inv_sum_amt)
			               END                                               AS profit_amt,
			               Max(dtl.pay_amt)                                  AS pay_amt,
			               Max(dtl.last_pay_dt)                              AS last_pay_dt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN Max(dtl.bal_amt) * -1
			                 ELSE Max(dtl.bal_amt)
			               END                                               AS bal_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.pay_amt) * -1
			                 ELSE Max(dtl.pay_amt)
			               END                                               AS pay_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.bal_amt) * -1
			                 ELSE Max(dtl.bal_amt)
			               END                                               AS bal_tot_amt,
			               CASE
			                 WHEN Max(dtl.bal_amt) = 0 THEN ''
			                 ELSE Datediff(day, Max(dtl.inv_due_dt), Getdate())
			               END                                               AS over_due,
			               Max(dtl.inv_due_dt)                               AS inv_due_dt,
			               Max(dtl.buy_inv_no)                               AS vnd_inv_no,
			               Max(mst.ofc_cd)                                   AS ofc_cd,
			               Max(dtl.inv_aply_curr_cd)                         AS
			               inv_aply_curr_cd,
			               Max(mst.rgst_usrid)                               AS rgst_usrid,
			               Max(mst.rgst_tms)                                 AS rgst_tms,
			               Max(mst.modi_usrid)                               AS modi_usrid,
			               Max(mst.inv_modi_tms)                             AS inv_modi_tms
			               ,
			               Max(Isnull(BLCK.clt_cmpl_flg1, DTL.clt_cmpl_flg))
			               AS clt_cmpl_flg,
			               Max(mst.cmb_inv_seq)                              AS cmb_inv_seq,
			               CASE
			                 WHEN Isnull(Max(dtl.cust_ref_no), '') != ''
			                      AND ( Max(mst.sell_buy_tp_cd) IN ( 'D', 'C' ) ) THEN Max(
			                 Isnull(dtl.cust_ref_no, ''))
			                 ELSE Max(T1.bl_agent_ref_no)
			               END                                               AS imp_ref_no,
			               CASE
			                 WHEN Isnull(Max(dtl.cust_ref_no), '') != ''
			                      AND Max(mst.sell_buy_tp_cd) = 'S' THEN
			                 Max(dtl.cust_ref_no)
			                 ELSE Max(T1.bl_cust_ref_no)
			               END                                               AS cust_ref_no,
			               Max(mst.inv_rmk)                                  AS inv_rmk,
			               Max(prnr.shrt_nm)                                 AS shrt_nm,
			                  Max(prnr.biz_no)                                 AS biz_no,
			               <!-- Jeong Il Park - Order -->
			               <!-- Max(prnr.eng_nm)                                  AS trdp_nm, -->
			               <!-- Max(prnr.locl_nm)                                  AS trdp_nm, -->
			               <!-- #3488 Accounting Multi Language 적용 -->
							CASE WHEN EXISTS(SELECT 1 FROM TB_SYS_OPT WITH(nolock)
								WHERE 1=1
								AND OPT_KEY ='MULTI_LANGUAGE'
								AND OPT_VAL = 'Y')
							THEN
								CASE WHEN Max(mst.sell_buy_tp_cd) = 'S' OR Max(mst.sell_buy_tp_cd) = 'B'
									THEN Max(prnr.locl_nm)
									ELSE Max(prnr.ENG_NM)
								END
							ELSE Max(prnr.ENG_NM)
							END trdp_nm,

			               Max(mst.ship_trdp_nm)                             AS ship_trdp_nm,  <!-- #874 [STARWAY] SHIP TO COLUMN ADD ON AR/AP LIST SCREEN -->
			               Max(jnr.jnr_no)                                   AS jnr_no,
			               T1.etd_dt_tm,
			               T1.eta_dt_tm,
			               T1.inv_dt,
			               ( CASE
			                   WHEN Max(TIDB.modi_tms) IS NULL THEN T1.modi_tms
			                   WHEN T1.modi_tms > Max(TIDB.modi_tms) THEN T1.modi_tms
			                   ELSE Max(TIDB.modi_tms)
			                 END )                                           AS trx_modi_tms,
			               Max(dtl.last_chk_no)                              AS LAST_CHK_NO,
			               <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
			               (CASE MAX(mst.TAX_BIL_FLG)
								WHEN 'Y' THEN 1
								WHEN 'N' THEN 0
								ELSE 0
							END) AS TAX_BIL_FLG,
							MAX(mst.TAX_NO) AS TAX_NO,
							MAX(mst.FINC_OFC_CD) AS FINC_OFC_CD,
			               Max(total_rows_cnt)                               AS total_rows_cnt,
			               Max(dtl.slip_no) 								 AS slip_no,
			               MAX(blck.bloked_by) 								 AS bloked_by,
			               MAX(issued_usr.locl_usr_nm) 						 AS issued_by,
			               MAX(blck.block_dt) 								 AS block_dt,
			               <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			               MAX(T1.vchr_no) as vchr_no,
						   (select cd_nm from tb_com_cd_dtl as a WITH(nolock) where a.com_cd = 'C225' and MAX(t1.vchr_tp_cd) = a.cd_val) as vchr_tp_nm,
						   <!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
						   MAX(t1.pol_nm) AS pol_nm,
						   MAX(t1.pod_nm) AS pod_nm
			        FROM   (
			        		SELECT
			        		<!-- #6301 [JAPT] Mail sending function related request -->
			        		bl.trnk_voy, bl.TRNK_VSL_NM, bl.LNR_BKG_NO,
			        		dtl.inv_seq,
			                       Max(dtl.sell_buy_tp_cd)      AS sell_buy_tp_cd,
			                       Max(dtl.air_sea_clss_cd)     AS air_sea_clss_cd,
			                       Max(dtl.trdp_cd)             AS trdp_cd,
			                       CASE
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'S' THEN 'A/R'
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'D'
			                               OR Max(dtl.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'B' THEN 'A/P'
			                       END                          AS inv_tp,
			                       CASE
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'S' THEN Max(dtl.inv_no)
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'D'
			                               OR Max(dtl.sell_buy_tp_cd) = 'C' THEN
			                         Max(dtl.inv_no)
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'B' THEN
			                         Max(dtl.buy_inv_no)
			                       END                          AS inv_no,
			                       Max(dtl.inv_post_dt)         AS post_dt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND ( Isnull(fcd.pfmc_flg, 'N') = 'N'
			                                         OR fcd.pfmc_flg = '' ) THEN
			                               CASE dtl.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS duty_tax_amt,
			                       <!-- #2796 [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경 -->
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND Isnull(fcd.pfmc_flg, 'N') = 'Y'
			                                  <!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
			                                  AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '') -->
			                                  <!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
			                                  AND frt.frt_cd NOT IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
			                                  -->
			                                  AND (ISNULL(frt.VAT_RT,0) + ISNULL(frt.VAT_RT1,0) + ISNULL(frt.VAT_RT2,0)) = 0
			                               THEN
			                               CASE dtl.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS non_taxable_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND Isnull(fcd.pfmc_flg, 'N') = 'Y'
			                                  <!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
			                                  AND ISNULL(fcd.TAX_FLG, 'N') = 'Y' -->
			                                  <!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
			                                  AND frt.frt_cd IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
			                                  -->
			                                  AND (ISNULL(frt.VAT_RT,0) + ISNULL(frt.VAT_RT1,0) + ISNULL(frt.VAT_RT2,0)) > 0
			                               THEN
			                               CASE dtl.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS taxable_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd = 'VAT' THEN frt.inv_amt
			                             ELSE 0
			                           END)                     AS vat_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd = 'WHD' THEN frt.inv_amt
			                             ELSE 0
			                           END)                     AS whd_amt,
			                       CASE
			                         WHEN Max(dtl.sell_buy_tp_cd) = 'C' THEN
			                         Max(dtl.inv_sum_amt) * -1
			                         ELSE Max(dtl.inv_sum_amt)
			                       END                          AS inv_sum_amt,
			                       Max(dtl.modi_tms)            AS modi_tms,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'M' THEN Max(bl.bl_no)

			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN Max(mbl.bl_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.mbl_no)

			                         ELSE ''
			                       END                          AS mbl_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN Max(bl.bl_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.hbl_no)

			                         ELSE NULL
			                       END                          AS hbl_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN Max(bl.ref_no)

			                         ELSE ''
			                       END                          AS ref_no,

			                       CASE
			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.ref_no)

			                         ELSE ''
			                       END                          AS oth_ref_no,

			                       CASE
			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN
			                         Max(wms_doc.doc_ref_no)

			                         ELSE ''
			                       END                          AS wms_ref_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(frt.intg_bl_seq)

			                         ELSE ''
			                       END                          AS intg_bl_seq,

			                       CASE
			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN
			                         Max(oth_doc.oth_seq)

			                         ELSE ''
			                       END                          AS oth_seq,

			                       CASE
			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN
			                         Max(wms_doc.wm_doc_seq)

			                         ELSE ''
			                       END                          AS wms_seq,

			                       (SELECT Upper(x.cnt_cd)
			                        FROM   tb_ofc x WITH(nolock)
			                        WHERE  x.ofc_cd = Max(CASE
			                                                WHEN Len(frt.intg_bl_seq) > 0
			                                              THEN
			                                                bl.ref_ofc_cd
			                                                WHEN Len(frt.oth_seq) > 0 THEN
			                                                oth_doc.ofc_cd

			                                                WHEN Len(frt.wms_seq) > 0 THEN
			                                                wms_doc.ofc_cd

			                                                ELSE ''
			                                              END)) AS bl_cnt_cd,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(bl.ref_ofc_cd)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.ofc_cd)

			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN Max(wms_doc.ofc_cd)

			                         ELSE ''
			                       END                          AS ref_ofc_cd,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'M' THEN
			                         Max(frt.intg_bl_seq)

			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN
			                         Max(mbl.intg_bl_seq)

			                         ELSE ''
			                       END                          AS m_intg_bl_seq,

			                       Max(bnd.bnd_clss_cd)         AS bnd_clss_cd,

			                       CASE
			                         WHEN Max(bl.biz_clss_cd) = 'M' THEN Max(bl.imp_ref_no)
			                         WHEN Max(bl.biz_clss_cd) = 'H' THEN Max(bl.prnr_ref_no)
			                         ELSE ''
			                       END                          AS bl_agent_ref_no,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(bl.cust_ref_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN
			                         Max(oth_doc.cust_ref_no)

			                         ELSE NULL
			                       END                          AS bl_cust_ref_no,
								   <!-- #5610 [Starway] Excel download 시 특정 칼럼 data missing 문제 -->
			                       case when Max(frt.intg_bl_seq) is null then Max(oth_doc.etd_dt_tm) else Max(bl.etd_dt_tm)  end        AS etd_dt_tm,
			                       case when Max(frt.intg_bl_seq) is null then Max(oth_doc.eta_dt_tm) else Max(bl.eta_dt_tm)  end        AS eta_dt_tm,
<!-- 			                       Max(bl.etd_dt_tm)            AS etd_dt_tm, -->
<!-- 			                       Max(bl.eta_dt_tm)            AS eta_dt_tm, -->
			                       Max(dtl.inv_dt)              AS inv_dt,
			                       Max(dtl.last_chk_no)         AS LAST_CHK_NO,
			                       Max(bl.bl_no)                AS bl_no,
                                   Max(bl.biz_clss_cd)          AS biz_clss_cd,
								   <!-- Row_number() OVER ( ORDER BY Max(dtl.inv_post_dt) DESC, Max(dtl.modi_tms) DESC ) AS ROWNUM, -->
								   Max(dtl.ROWNUM) AS ROWNUM,
								   Max(total_rows_cnt) as total_rows_cnt,
								   <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
								   max(dtl.vchr_no) as vchr_no,
								   max(dtl.vchr_tp_cd) as vchr_tp_cd,
								   <!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
								   <!-- #5610 [Starway]  download 시 특정 칼럼 data missing 문제 -->
						   			CASE when MAX(frt.intg_bl_seq) is null THEN MAX(oth_doc.pol_nm) else MAX(bl.pol_nm) end AS pol_nm,
						   			CASE when MAX(frt.intg_bl_seq) is null THEN MAX(oth_doc.pod_nm) else MAX(bl.pod_nm) end AS pod_nm
			                FROM   (
			                SELECT
                			   AA.inv_seq,
                               AA.rownum AS ROWNUM,
                               AA.total_rows_cnt AS total_rows_cnt,
                               AA.inv_no,
                               AA.buy_inv_no,
                               AA.inv_post_dt,
                               AA.modi_tms,
                               AA.inv_sum_amt,
                               AA.inv_dt,
                               AA.last_chk_no,
                               AA.pay_amt,
                               AA.last_pay_dt,
                               AA.bal_amt,
                               AA.inv_due_dt,
                               AA.inv_aply_curr_cd,
                               AA.cust_ref_no,
                               AA.vchr_no,
							   AA.vchr_tp_cd,
							   AA.sell_buy_tp_cd,
							   AA.air_sea_clss_cd,
							   AA.trdp_cd
			                FROM (
			                		SELECT
			                               inv_dtl.inv_seq,
			                               Row_number() OVER ( ORDER BY inv_dtl.inv_post_dt DESC, inv_dtl.modi_tms DESC ) AS ROWNUM,
			                               count(*) over(partition by 1) total_rows_cnt,
			                               inv_dtl.inv_no,
			                               inv_dtl.buy_inv_no,
			                               inv_dtl.inv_post_dt,
			                               inv_dtl.modi_tms,
			                               inv_dtl.inv_sum_amt,
			                               inv_dtl.inv_dt inv_dt,
			                               inv_dtl.last_chk_no,
			                               inv_dtl.pay_amt,
			                               inv_dtl.last_pay_dt,
			                               inv_dtl.bal_amt,
			                               inv_dtl.inv_due_dt,
			                               inv_dtl.inv_aply_curr_cd,
			                               inv_dtl.cust_ref_no,
			                               <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			                               inv_dtl.vchr_no,
										   inv_dtl.vchr_tp_cd,
										   mst.sell_buy_tp_cd,
										   mst.air_sea_clss_cd,
										   mst.trdp_cd trdp_cd
			                        FROM   tb_inv_dtl inv_dtl WITH (NOLOCK, INDEX ($tb_inv_dtl_hint$))
									JOIN tb_inv mst WITH(nolock)
			                         ON inv_dtl.inv_seq = mst.inv_seq AND mst.DELT_FLG = 'N'
									<isNotEmpty property="s_ofc_cd">
							                  AND mst.ofc_cd = #s_ofc_cd#
					                </isNotEmpty>
									<!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
									<isNotEmpty property="s_tax_no">
										  AND mst.tax_no LIKE #s_tax_no# + '%'
									</isNotEmpty>
			                        WHERE  1=1
					<isNotEmpty property="f_strdt">
						<isEqual property="f_date_type" compareValue="PDT">
							AND inv_dtl.INV_POST_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
						<isEqual property="f_date_type" compareValue="IDT">
							AND inv_dtl.INV_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
						<isEqual property="f_date_type" compareValue="DDT">
							AND inv_dtl.INV_DUE_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
					</isNotEmpty>

					         AND inv_dtl.DELT_FLG = 'N'
					         AND EXISTS (SELECT 1 FROM TB_FRT F WITH(nolock)  WHERE F.INV_SEQ = inv_dtl.INV_SEQ)

                    <isNotEmpty property="s_inv_no">
						AND inv_dtl.inv_no LIKE #s_inv_no# + '%'
					</isNotEmpty>
					<isNotEmpty property="s_v_inv_no">
						AND inv_dtl.buy_inv_no LIKE #s_v_inv_no# + '%'
					</isNotEmpty>
					<!-- #3463 OFVFOUR-7374[StarCluster-Mex] Invoice Exchange Rate and Currency Option -->
					<isNotEmpty property="f_curr_cd">
						  AND inv_dtl.inv_aply_curr_cd = #f_curr_cd#
					</isNotEmpty>


					<isNotEmpty property="f_mhbl_no">
						<isEqual property="f_bl_type" compareValue="HBL">
		                   AND (inv_dtl.INV_SEQ IN
		                    ( SELECT B.INV_SEQ
						        FROM tb_intg_bl  A WITH(nolock), tb_frt B WITH(nolock)
						       WHERE 1=1
						         AND A.intg_bl_seq = B.intg_bl_seq
						         <!-- //#6931 [Miragrown] Like search funtion off only when using accounting button -->
						         AND A.BL_NO LIKE CAST (#f_mhbl_no# + <isEqual property="linkFlag" compareValue="Y">''</isEqual> <isNotEqual property="linkFlag" compareValue="Y">'%'</isNotEqual> AS VARCHAR)
						         AND A.BIZ_CLSS_CD = 'H'
						         AND A.delt_flg = 'N'
						         AND B.DELT_FLG = 'N'
						       GROUP BY B.INV_SEQ )
						       OR inv_dtl.INV_SEQ IN
							( SELECT B.INV_SEQ
						        FROM TB_OTH_SALES  A WITH(nolock), tb_frt B WITH(nolock)
						       WHERE 1=1
						         AND A.oth_seq = B.oth_seq
						         <!-- //#6931 [Miragrown] Like search funtion off only when using accounting button -->
						         AND A.HBL_NO LIKE CAST ( #f_mhbl_no# + <isEqual property="linkFlag" compareValue="Y">''</isEqual> <isNotEqual property="linkFlag" compareValue="Y">'%'</isNotEqual> AS VARCHAR)
						         AND A.delt_flg = 'N'
						         AND B.DELT_FLG = 'N'
						       GROUP BY B.INV_SEQ )
						       )
						</isEqual>
						<isEqual property="f_bl_type" compareValue="MBL">
		                   AND inv_dtl.INV_SEQ IN
		                    (SELECT INV_SEQ
							   FROM tb_frt WITH(nolock)
							  WHERE 1 = 1
							  and (intg_bl_seq IN (

														SELECT intg_bl_seq
														FROM tb_intg_bl WITH(nolock)
														WHERE REF_NO IN (
																		<!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
																			  SELECT A.REF_NO
																				FROM tb_intg_bl  A WITH(nolock)
																			   WHERE 1=1
																			   	 <!-- //#6931 [Miragrown] Like search funtion off only when using accounting button -->
																				 AND A.BL_NO LIKE CAST (#f_mhbl_no# + <isEqual property="linkFlag" compareValue="Y">''</isEqual> <isNotEqual property="linkFlag" compareValue="Y">'%'</isNotEqual> AS VARCHAR)
																				 AND A.BIZ_CLSS_CD = 'M'
																				 AND A.delt_flg = 'N'
																			   GROUP BY A.REF_NO
									                                     )
		                                               )
		                             <!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
		                             <!-- //#6931 [Miragrown] Like search funtion off only when using accounting button -->
		                           	OR oth_seq in (select oth_seq from TB_OTH_SALES WITH(nolock) where MBL_NO LIKE CAST ( #f_mhbl_no# + <isEqual property="linkFlag" compareValue="Y">''</isEqual> <isNotEqual property="linkFlag" compareValue="Y">'%'</isNotEqual> AS VARCHAR) and delt_flg = 'N')
		                             )
		                      )
						</isEqual>
					</isNotEmpty>

				<isNotEmpty property="f_ref_no">
                   AND
                   <isEqual property="f_ref_no_type" compareValue="fileNo">
						inv_dtl.INV_SEQ IN
						(
							SELECT B.INV_SEQ
							FROM tb_intg_bl  A WITH(nolock), tb_frt B WITH(nolock)
							WHERE 1=1
							 AND A.intg_bl_seq = B.intg_bl_seq
							 <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							   AND A.REF_NO LIKE CAST (#f_ref_no# AS VARCHAR)
							   AND A.delt_flg = 'N'
							   AND B.DELT_FLG = 'N'
							  GROUP BY B.INV_SEQ
						)

					</isEqual>
					<isEqual property="f_ref_no_type" compareValue="othRefNo">
						  inv_dtl.INV_SEQ IN
							(
								SELECT B.INV_SEQ
							    FROM TB_OTH_SALES A WITH(nolock), TB_FRT B WITH(nolock)
							    WHERE 1=1
							     AND A.OTH_SEQ = B.OTH_SEQ
							      <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							     AND A.REF_NO LIKE CAST ( #f_ref_no# AS VARCHAR)
							)
  				     </isEqual>
					<isEqual property="f_ref_no_type" compareValue="wmsRefNo">
							    inv_dtl.INV_SEQ IN
							     ( SELECT B.INV_SEQ
							         FROM TB_WM_DOC_MST A WITH(nolock), TB_FRT B WITH(nolock)
							        WHERE 1=1
							          AND A.WM_DOC_SEQ = B.WMS_SEQ
							          <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							          AND A.DOC_REF_NO LIKE CAST ( #f_ref_no# AS VARCHAR)
							     )
				    </isEqual>
				</isNotEmpty>

 							AND Isnull(mst.air_sea_clss_cd, 'O') != 'G'
							<isNotEqual property="s_amt_to" compareValue="0">
								AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN inv_dtl.inv_sum_amt * -1 ELSE inv_dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
							</isNotEqual>
							<isNotEmpty property="s_inv_rmk">
								AND mst.inv_rmk LIKE #s_inv_rmk# + '%'
							</isNotEmpty>
							<isEqual property="s_type_cd" compareValue="LC">
								AND mst.sell_buy_tp_cd = 'S'
							</isEqual>
							<isEqual property="s_type_cd" compareValue="CD">
								AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
							</isEqual>
							<isEqual property="s_type_cd" compareValue="AP">
								AND mst.sell_buy_tp_cd = 'B'
							</isEqual>
							<isNotEmpty property="s_inv_seq">
								AND inv_dtl.inv_seq = #s_inv_seq#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_cd">
								AND mst.trdp_cd = #s_bill_to_cd#
							</isNotEmpty>

							<isNotEmpty property="s_bill_to_nm">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd WITH(nolock)
											WHERE trd.TRDP_CD = mst.TRDP_CD
											  AND (trd.ENG_NM LIKE #s_bill_to_nm#
												or trd.SHRT_NM LIKE #s_bill_to_nm#
												or trd.LOCL_NM LIKE #s_bill_to_nm#)
										   )
							</isNotEmpty>
							<isNotEmpty property="s_biz_no">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd WITH(nolock)
													WHERE trd.TRDP_CD = mst.TRDP_CD AND trd.biz_no LIKE #s_biz_no# + '%'
												)
							</isNotEmpty>
							<isNotEmpty property="f_intg_bl_seq">
								AND EXISTS(SELECT 1 FROM tb_frt F WITH(nolock)
													WHERE F.intg_bl_seq = #f_intg_bl_seq# AND inv_dtl.INV_SEQ=F.INV_SEQ
														AND F.DELT_FLG='N'
												)
							</isNotEmpty>
							<isNotEmpty property="f_oth_seq">
								AND EXISTS(SELECT 1 FROM tb_frt F WITH(nolock)
													WHERE F.oth_seq = #f_oth_seq# AND inv_dtl.INV_SEQ=F.INV_SEQ
														AND F.DELT_FLG='N'
												)
							</isNotEmpty>

						    <!-- #874 [STARWAY] SHIP TO COLUMN ADD ON AR/AP LIST SCREEN Start -->
						    <isNotEmpty property="s_ship_to">
						    	AND mst.ship_trdp_nm LIKE '%' + #s_ship_to# + '%'
						    </isNotEmpty>

				            <isNotEmpty property="f_agt_ref_no">
								AND EXISTS(
									 SELECT 1
								        FROM tb_frt B WITH(nolock)
								        LEFT OUTER JOIN tb_intg_bl  A WITH(nolock) on B.intg_bl_seq = A.intg_bl_seq
								       WHERE 1=1
								         AND B.inv_seq = inv_dtl.inv_seq
										 AND (CASE WHEN Isnull(inv_dtl.cust_ref_no, '') != '' AND (mst.sell_buy_tp_cd IN ( 'D', 'C' ) ) THEN Isnull(inv_dtl.cust_ref_no, '')
					                              ELSE
					               			          CASE WHEN A.biz_clss_cd = 'M' THEN A.imp_ref_no
					                                       WHEN A.biz_clss_cd = 'H' THEN A.prnr_ref_no
					                                  ELSE ''
					                                  END
					                         END) LIKE '%' + #f_agt_ref_no# + '%'

								)
						    </isNotEmpty>

				            <isNotEmpty property="f_cust_ref_no">
								AND EXISTS(
									 SELECT 1
								        FROM tb_frt  A WITH(nolock)
								        LEFT OUTER JOIN tb_intg_bl B WITH(nolock) on A.intg_bl_seq = B.intg_bl_seq
								        LEFT OUTER JOIN tb_oth_sales C WITH(nolock)
			                                    ON A.oth_seq = C.oth_seq
								       WHERE 1=1

								         AND A.inv_seq = inv_dtl.inv_seq
										 AND (CASE WHEN Isnull(inv_dtl.cust_ref_no, '') != '' AND mst.sell_buy_tp_cd = 'S' THEN inv_dtl.cust_ref_no
						                           ELSE
						                                CASE WHEN Len(A.intg_bl_seq) > 0 THEN B.cust_ref_no
						                                     WHEN Len(A.oth_seq) > 0 THEN C.cust_ref_no
						                                ELSE NULL
						                                END
						                      END) LIKE '%' + #f_cust_ref_no# + '%'

								)

						    </isNotEmpty>

							<!-- OFVFOUR-8056: [BNX-LA] Adding Search option in AR/AP list and OIH List screen -->
							<isNotEmpty property="f_cntr_no">
								AND inv_dtl.INV_SEQ IN (SELECT INV_SEQ
								FROM TB_FRT WITH(nolock)
								WHERE 1=1 AND (INTG_BL_SEQ IN (SELECT INTG_BL_SEQ
								FROM TB_CNTR_LIST
								WHERE CNTR_NO = #f_cntr_no#)))
							</isNotEmpty>

			                ) AA
			                WHERE 1=1
			                <![CDATA[ AND AA.rownum > #beginIdx# AND AA.rownum <= #topCnt#]]>

                    ) dtl
			                       JOIN tb_frt frt WITH(nolock)
			                         ON dtl.inv_seq = frt.inv_seq
			                       LEFT OUTER JOIN tb_frt_cd fcd WITH(nolock)
			                                    ON frt.frt_cd = fcd.frt_cd
								   LEFT OUTER JOIN tb_intg_bl bl WITH(nolock)
			                                    ON frt.intg_bl_seq = bl.intg_bl_seq
			                                       AND bl.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_add_info_bnd bnd WITH(nolock)
			                                    ON bl.intg_bl_seq = bnd.intg_bl_seq
			                                       AND bnd.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_intg_bl_rlt rlt WITH(nolock)
			                                    ON bl.intg_bl_seq = rlt.intg_bl_seq
			                                       AND rlt.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_intg_bl mbl WITH(nolock)
			                                    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq
			                                       AND mbl.biz_clss_cd = 'M'
			                                       AND mbl.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_oth_sales oth_doc WITH(nolock)
			                                    ON frt.oth_seq = oth_doc.oth_seq
			                       LEFT OUTER JOIN tb_wm_doc_mst wms_doc WITH(nolock)
			                                    ON frt.wms_seq = wms_doc.wm_doc_seq
			                WHERE  1=1
							<!--#6728 : [IMPEX-GER] INVOICE LIST TAX AMOUNT SHOWS WRONGLY -->
			                AND frt.DELT_FLG = 'N'

			                GROUP  BY dtl.inv_seq,
			                 <!-- #6301 [JAPT] Mail sending function related request -->
			                 bl.trnk_voy, bl.TRNK_VSL_NM, bl.LNR_BKG_NO
			                )       T1
			               JOIN tb_inv mst WITH(nolock)
			                 ON T1.inv_seq = mst.inv_seq
			               JOIN tb_inv_dtl dtl WITH(nolock)
			                 ON mst.inv_seq = dtl.inv_seq
			               LEFT JOIN tb_trdp prnr WITH(nolock)
			                      ON prnr.trdp_cd = MST.trdp_cd
			               LEFT JOIN tb_jnr_dtl jnr WITH(nolock)
			                      ON T1.inv_seq = jnr.inv_seq
			                         AND Isnull(jnr.delt_flg, 'N') != 'Y'
			               LEFT OUTER JOIN (SELECT inv_seq      AS INV_SEQ1,
			                                       inv_no       AS INV_NO1,
			                                       clt_cmpl_flg AS CLT_CMPL_FLG1,
			                                	   CASE WHEN CLT_CMPL_FLG = 'Y' THEN
								                    	blcked_usr.locl_usr_nm
								                   ELSE '' END AS BLOKED_BY,
								                   CASE WHEN CLT_CMPL_FLG = 'Y' THEN
											     		ISNULL(CONVERT(VARCHAR(23), CONVERT(DATETIME, block_dt), 110), CONVERT(VARCHAR(23), CONVERT(DATETIME, idb.modi_tms), 110))
											       ELSE '' END AS BLOCK_DT
			                                FROM   tb_inv_dtl_blck idb WITH(nolock)
			                                LEFT OUTER JOIN tb_usr blcked_usr WITH(nolock)
			                                			ON idb.rgst_usrid = blcked_usr.usrid) BLCK
			                            ON DTL.inv_seq = BLCK.inv_seq1
			                               /* AND DTL.inv_no = BLCK.inv_no1 	OFVFOUR-7442 [Binex-AWS] Invoice Block issue */
			               LEFT OUTER JOIN (SELECT modi_tms,
			                                       inv_seq
			                                FROM   tb_inv_dtl_blck WITH(nolock)) TIDB
			                            ON TIDB.inv_seq = DTL.inv_seq
						   LEFT OUTER JOIN TB_USR issued_usr WITH(nolock)
			               				ON mst.rgst_usrid = issued_usr.usrid

					WHERE 	1=1

			        GROUP  BY T1.inv_seq,
			                  T1.inv_no,
			                  T1.post_dt,
			                  T1.modi_tms,
			                  T1.mbl_no,
			                  T1.hbl_no,
			                  T1.ref_no,
			                  T1.oth_ref_no,
			                  T1.wms_ref_no,
			                  T1.intg_bl_seq,
			                  T1.oth_seq,
			                  T1.wms_seq,
			                  T1.bl_cnt_cd,
			                  T1.ref_ofc_cd,
			                  T1.m_intg_bl_seq,
			                  T1.bnd_clss_cd,
			                  T1.bl_cust_ref_no,
			                  T1.rownum,
			                  T1.etd_dt_tm,
			                  T1.eta_dt_tm,
			                  T1.inv_dt,
			                  T1.rownum,
			                 <!-- #6301 [JAPT] Mail sending function related request -->
				           	  T1.LNR_BKG_NO,
				              T1.TRNK_VOY,
				           	  T1.TRNK_VSL_NM) T2
		    WHERE 1=1
			<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
			GROUP BY
				T2.inv_aply_curr_cd,
				ROLLUP(T2.rownum)
			ORDER  BY
			        <isNotEmpty property="f_orderByInfo">
			           $f_orderByInfo$
			        </isNotEmpty>
			        <isEmpty property="f_orderByInfo">
					<!-- OFVFOUR-6122 [Star-Mex] OPUS Invoice List - Invoice Amount Total by Currency -->
			           <!-- Row_number()
			            OVER(
			              ORDER BY T2.post_dt DESC, T2.modi_tms DESC) -->
						CASE WHEN ISNULL(T2.ROWNUM,'') = '' THEN 'XX' ELSE 'AA' END, MAX(T2.post_dt) DESC, MAX(T2.modi_tms) DESC
			        </isEmpty>


    </select>

    <!-- EXCEL ALL YJW 2015.03.23 -->
    <select id="searchInvoiceList_EXCEL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchInvoiceList_EXCEL  */
			SELECT
		T2.rownum,
		T2.inv_seq,
		T2.inv_no,
		T2.o_inv_no,
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		MAX(case when T2.post_dt = '' THEN '' when ISNULL(T2.post_dt,'') = '' then '' else substring(T2.post_dt,5,2)  + '-' +substring(T2.post_dt,7,2) + '-' +substring(T2.post_dt,1,4)END) as post_dt,
		MAX(CONVERT(varchar(10), T2.modi_tms, 110) + ' ' + CONVERT(varchar(5), T2.modi_tms, 108)) as modi_tms ,
		T2.mbl_no,
		T2.hbl_no,
		T2.ref_no,
		T2.oth_ref_no,
		T2.wms_ref_no,
		T2.intg_bl_seq,
		T2.oth_seq,
		T2.wms_seq,
		T2.bl_cnt_cd,
		T2.ref_ofc_cd,
		T2.m_intg_bl_seq,
		T2.bnd_clss_cd,
		T2.sell_buy_tp_cd,
		T2.air_sea_clss_cd,
		T2.inv_tp,
		T2.trdp_cd,
		T2.duty_tax_amt,
		T2.non_taxable_amt,
		T2.taxable_amt,
		T2.vat_amt,
		T2.whd_amt,
		T2.duty_tax_tot_amt,
		T2.non_taxable_tot_amt,
		taxable_tot_amt,
		T2.vat_tot_amt,
		T2.whd_tot_amt,
		T2.inv_sum_amt,
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		MAX(ISNULL(T2.locl_ttl_amt, 0)) as locl_ttl_amt,  	<!-- #5408 [JTC] Invoice List 에 Local Amount 컬럼 추가 -->
		T2.profit_amt,
		MAX(ISNULL(T2.pay_amt,0)) as pay_amt,
		<!-- T2.last_pay_dt, -->
		<!-- Format date when exporting excel file -->
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		MAX(case when len(T2.last_pay_dt) >= 8 then (SUBSTRING(T2.last_pay_dt,5,2)+'-'+SUBSTRING(T2.last_pay_dt,7,2)+'-'+SUBSTRING(T2.last_pay_dt,1,4))
		else ''
		end) as last_pay_dt,
		T2.bal_amt,
		T2.pay_tot_amt,
		T2.bal_tot_amt,
		<!-- T2.over_due -->
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		<![CDATA[ MAX(case when (T2.over_due < 0) then 0 else T2.over_due end) as over_due]]>,
		MAX(case when T2.inv_due_dt = '' THEN '' when ISNULL(T2.inv_due_dt,'') = '' then '' else substring(T2.inv_due_dt,5,2)  + '-' +substring(T2.inv_due_dt,7,2) + '-' +substring(T2.inv_due_dt,1,4)END) as inv_due_dt,
		T2.vnd_inv_no,
		T2.ofc_cd,
		T2.inv_aply_curr_cd,
		T2.rgst_usrid,
		MAX(CONVERT(varchar(10), T2.rgst_tms, 110) + ' ' + CONVERT(varchar(5), T2.rgst_tms, 108)) as rgst_tms ,
		T2.modi_usrid,
		MAX(CONVERT(varchar(10), T2.inv_modi_tms, 110) + ' ' + CONVERT(varchar(5), T2.inv_modi_tms, 108)) as inv_modi_tms ,
		T2.clt_cmpl_flg,
		T2.cmb_inv_seq,
		T2.imp_ref_no,
		T2.cust_ref_no,
		T2.inv_rmk,
		T2.shrt_nm,
		T2.biz_no,
		T2.trdp_nm,

		T2.ship_trdp_nm,  <!-- #874 [STARWAY] SHIP TO COLUMN ADD ON AR/AP LIST SCREEN -->
		T2.jnr_no,
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		MAX(case when T2.etd_dt_tm = '' THEN '' when ISNULL(T2.etd_dt_tm,'') = '' then '' else substring(T2.etd_dt_tm,5,2)  + '-' +substring(T2.etd_dt_tm,7,2) + '-' +substring(T2.etd_dt_tm,1,4)END) as etd_dt_tm,
		MAX(case when T2.eta_dt_tm = '' THEN '' when ISNULL(T2.eta_dt_tm,'') = '' then '' else substring(T2.eta_dt_tm,5,2)  + '-' +substring(T2.eta_dt_tm,7,2) + '-' +substring(T2.eta_dt_tm,1,4)END) as eta_dt_tm,
		MAX(case when T2.inv_dt = '' THEN '' when ISNULL(T2.inv_dt,'') = '' then '' else substring(T2.inv_dt,5,2)  + '-' +substring(T2.inv_dt,7,2) + '-' +substring(T2.inv_dt,1,4)END) as inv_dt,
		MAX(CONVERT(varchar(10), T2.trx_modi_tms, 110) + ' ' + CONVERT(varchar(5), T2.trx_modi_tms, 108)) as trx_modi_tms ,
		T2.last_chk_no,
		T2.TAX_BIL_FLG,
		T2.tax_no, <!-- #6857 [STAR-MEX] TAX INVOICE NO IS BLANK FROM INVOICE LIST EXCEL (ALL) -->
		T2.org_tax_no, <!-- #6857 [STAR-MEX] TAX INVOICE NO IS BLANK FROM INVOICE LIST EXCEL (ALL) -->
		T2.finc_ofc_cd,
		T2.total_rows_cnt,
		T2.slip_no,
		T2.bloked_by,
		T2.issued_by,
		T2.block_dt,
		T2.vchr_no,
		T2.vchr_tp_nm,
		T2.pol_nm,
		T2.pod_nm,
		<!-- #5610 [Starway] Excel download 시 특정 칼럼 data missing 문제 -->
		(SELECT eng_usr_nm FROM tb_usr WITH(nolock) WHERE usrid = T2.modi_usrid) as modi_usr_nm,
		(SELECT eng_usr_nm FROM tb_usr WITH(nolock) WHERE usrid = T2.rgst_usrid) as rgst_usr_nm,
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		(CASE
		WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[<>]]> '' AND bl_no = MAX(T2.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N') <![CDATA[<>]]> '' THEN (SELECT substring(rlsd_dt_tm,5,2)  + '-' +substring(rlsd_dt_tm,7,2) + '-' +substring(rlsd_dt_tm,1,4) FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[<>]]> '' AND bl_no = MAX(T2.hbl_no) AND BIZ_CLSS_CD = 'H' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N')
		WHEN (SELECT bl_no FROM tb_intg_bl where rlsd_dt_tm <![CDATA[<>]]> '' AND bl_no = MAX(T2.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N') <![CDATA[<>]]> '' AND ISNULL(MAX(T2.hbl_no),'') = '' THEN (SELECT substring(rlsd_dt_tm,5,2)  + '-' +substring(rlsd_dt_tm,7,2) + '-' +substring(rlsd_dt_tm,1,4) FROM tb_intg_bl WHERE rlsd_dt_tm <![CDATA[<>]]> '' AND bl_no = MAX(T2.mbl_no) AND BIZ_CLSS_CD = 'M' AND ref_no = MAX(T2.ref_no) AND DELT_FLG = 'N')
		ELSE ('')
		END) as rlsd_dt_tm,
		<!-- OFVFOUR-8196: [BNX] Adding Bank Date Column in AR/AP list -->
		(SELECT top 1 case when clr_dt = '' THEN '' when ISNULL(clr_dt,'') = '' then '' else  substring(clr_dt,5,2)  + '-' +substring(clr_dt,7,2) + '-' +substring(clr_dt,1,4) end FROM TB_JNR_MST mst
		LEFT JOIN TB_JNR_DTL dtl ON dtl.JNR_NO = mst.JNR_NO
		LEFT JOIN TB_INV_DTL inv_dtl ON dtl.INV_SEQ = inv_dtl.INV_SEQ
		WHERE mst.DELT_FLG = 'N' AND dtl.DELT_FLG = 'N' AND inv_dtl.DELT_FLG = 'N' AND dtl.INV_SEQ = MAX(T2.inv_seq)) as clr_dt,
		<!-- #6096 [HOPEWAY] Block mark "Y" no show on Invoice list when exporting files by Excel ALL function -->
		(CASE WHEN T2.clt_cmpl_flg = 'Y' THEN 'Y' ELSE '' END) AS magam_flag
			FROM (
				SELECT T1.rownum,
			               T1.inv_seq,
			               T1.inv_no,
			               (select inv_no from tb_inv_dtl WITH(nolock) where inv_seq = T1.inv_seq) as o_inv_no,
			               T1.post_dt,
			               T1.modi_tms,
			               Isnull(T1.mbl_no, '')                             AS mbl_no,
			               T1.hbl_no                                         AS hbl_no,
			               T1.ref_no,
			               T1.oth_ref_no,
			               T1.wms_ref_no,
			               T1.intg_bl_seq,
			               T1.oth_seq,
			               T1.wms_seq,
			               T1.bl_cnt_cd,
			               T1.ref_ofc_cd,
			               T1.m_intg_bl_seq,
			               Isnull(T1.bnd_clss_cd, '')                        AS bnd_clss_cd,
			               Max(mst.sell_buy_tp_cd)                           AS
			               sell_buy_tp_cd,
			               Max(mst.air_sea_clss_cd)                          AS
			               air_sea_clss_cd,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
			                 WHEN Max(mst.sell_buy_tp_cd) = 'D'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
			               END                                               AS inv_tp,
			               Max(mst.trdp_cd)                                  AS trdp_cd,
			               Max(T1.duty_tax_amt)                              AS duty_tax_amt,
			               Max(T1.non_taxable_amt)
			               AS non_taxable_amt,
			               Max(T1.taxable_amt)                               AS taxable_amt,
			               Max(T1.vat_amt)                                   AS vat_amt,
			               Max(T1.whd_amt)                                   AS whd_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.duty_tax_amt) * -1
			                 ELSE Max(T1.duty_tax_amt)
			               END                                               AS
			               duty_tax_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.non_taxable_amt) * -1
			                 ELSE Max(T1.non_taxable_amt)
			               END                                               AS
			               non_taxable_tot_amt
			                      ,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(T1.taxable_amt) * -1
			                 ELSE Max(T1.taxable_amt)
			               END                                               AS
			               taxable_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(T1.vat_amt) * -1
			                 ELSE Max(T1.vat_amt)
			               END                                               AS vat_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'B'
			                       OR Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(T1.whd_amt) * -1
			                 ELSE Max(T1.whd_amt)
			               END                                               AS whd_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(dtl.inv_sum_amt) * -1
			                 ELSE Max(dtl.inv_sum_amt)
			               END                                               AS inv_sum_amt,

 						   <!-- #5408 [JTC] Invoice List 에 Local Amount 컬럼 추가 -->
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN
			                 Max(dtl.locl_ttl_amt) * -1
			                 ELSE Max(dtl.locl_ttl_amt)
			               END                                               AS locl_ttl_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.locl_ttl_amt) * -1
			                 ELSE Max(dtl.locl_ttl_amt)
			               END                                               AS locl_ttl_tot_amt,

			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.inv_sum_amt) * -1
			                 ELSE Max(dtl.inv_sum_amt)
			               END                                               AS profit_amt,
			               Max(dtl.pay_amt)                                  AS pay_amt,
			               Max(dtl.last_pay_dt)                              AS last_pay_dt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN Max(dtl.bal_amt) * -1
			                 ELSE Max(dtl.bal_amt)
			               END                                               AS bal_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.pay_amt) * -1
			                 ELSE Max(dtl.pay_amt)
			               END                                               AS pay_tot_amt,
			               CASE
			                 WHEN Max(mst.sell_buy_tp_cd) = 'C'
			                       OR Max(mst.sell_buy_tp_cd) = 'B' THEN
			                 Max(dtl.bal_amt) * -1
			                 ELSE Max(dtl.bal_amt)
			               END                                               AS bal_tot_amt,
			               CASE
			                 WHEN Max(dtl.bal_amt) = 0 THEN ''
			                 ELSE Datediff(day, Max(dtl.inv_due_dt), Getdate())
			               END                                               AS over_due,
			               Max(dtl.inv_due_dt)                               AS inv_due_dt,
			               Max(dtl.buy_inv_no)                               AS vnd_inv_no,
			               Max(mst.ofc_cd)                                   AS ofc_cd,
			               Max(dtl.inv_aply_curr_cd)                         AS
			               inv_aply_curr_cd,
			               Max(mst.rgst_usrid)                               AS rgst_usrid,
			               Max(mst.rgst_tms)                                 AS rgst_tms,
			               Max(mst.modi_usrid)                               AS modi_usrid,
			               Max(mst.inv_modi_tms)                             AS inv_modi_tms
			               ,
			               Max(Isnull(BLCK.clt_cmpl_flg1, DTL.clt_cmpl_flg))
			               AS clt_cmpl_flg,
			               Max(mst.cmb_inv_seq)                              AS cmb_inv_seq,
			               CASE
			                 WHEN Isnull(Max(dtl.cust_ref_no), '') != ''
			                      AND ( Max(mst.sell_buy_tp_cd) IN ( 'D', 'C' ) ) THEN Max(
			                 Isnull(dtl.cust_ref_no, ''))
			                 ELSE Max(T1.bl_agent_ref_no)
			               END                                               AS imp_ref_no,
			               CASE
			                 WHEN Isnull(Max(dtl.cust_ref_no), '') != ''
			                      AND Max(mst.sell_buy_tp_cd) = 'S' THEN
			                 Max(dtl.cust_ref_no)
			                 ELSE Max(T1.bl_cust_ref_no)
			               END                                               AS cust_ref_no,
			               Max(mst.inv_rmk)                                  AS inv_rmk,
			               Max(prnr.shrt_nm)                                 AS shrt_nm,
			               Max(prnr.biz_no)                                 AS biz_no,
			               <!-- Jeong Il Park - Order -->
			               <!-- Max(prnr.eng_nm)                                  AS trdp_nm, -->
			               <!-- Max(prnr.locl_nm)                                  AS trdp_nm, -->
			               <!-- #3488 Accounting Multi Language 적용 -->
							CASE WHEN EXISTS(SELECT 1 FROM TB_SYS_OPT WITH(nolock)
								WHERE 1=1
								AND OPT_KEY ='MULTI_LANGUAGE'
								AND OPT_VAL = 'Y')
							THEN
								CASE WHEN Max(mst.sell_buy_tp_cd) = 'S' OR Max(mst.sell_buy_tp_cd) = 'B'
									THEN Max(prnr.locl_nm)
									ELSE Max(prnr.ENG_NM)
								END
							ELSE Max(prnr.ENG_NM)
							END trdp_nm,

			               Max(mst.ship_trdp_nm)                             AS ship_trdp_nm,  <!-- #874 [STARWAY] SHIP TO COLUMN ADD ON AR/AP LIST SCREEN -->
			               Max(jnr.jnr_no)                                   AS jnr_no,
			               T1.etd_dt_tm,
			               T1.eta_dt_tm,
			               T1.inv_dt,
			               ( CASE
			                   WHEN Max(TIDB.modi_tms) IS NULL THEN T1.modi_tms
			                   WHEN T1.modi_tms > Max(TIDB.modi_tms) THEN T1.modi_tms
			                   ELSE Max(TIDB.modi_tms)
			                 END )                                           AS trx_modi_tms,
			               Max(dtl.last_chk_no)                              AS LAST_CHK_NO,
			               <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
			               (CASE MAX(mst.TAX_BIL_FLG)
								WHEN 'Y' THEN 1
								WHEN 'N' THEN 0
								ELSE 0
							END) AS TAX_BIL_FLG,
							MAX(mst.tax_no) AS tax_no, <!-- #6857 [STAR-MEX] TAX INVOICE NO IS BLANK FROM INVOICE LIST EXCEL (ALL) -->
							MAX(mst.tax_no) AS org_tax_no, <!-- #6857 [STAR-MEX] TAX INVOICE NO IS BLANK FROM INVOICE LIST EXCEL (ALL) -->
							MAX(mst.finc_ofc_cd) AS finc_ofc_cd,
			               Max(total_rows_cnt)                               AS total_rows_cnt,
			               Max(dtl.slip_no) 								 AS slip_no,
			               MAX(blck.bloked_by) 								 AS bloked_by,
			               MAX(issued_usr.locl_usr_nm) 						 AS issued_by,
			               MAX(blck.block_dt) 								 AS block_dt,
			               <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			               MAX(T1.vchr_no) as vchr_no,
						   (select cd_nm from tb_com_cd_dtl as a WITH(nolock) where a.com_cd = 'C225' and MAX(t1.vchr_tp_cd) = a.cd_val) as vchr_tp_nm,
						   <!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
						   MAX(t1.pol_nm) AS pol_nm,
						   MAX(t1.pod_nm) AS pod_nm
			        FROM   (SELECT dtl.inv_seq,
			                       Max(mst.sell_buy_tp_cd)      AS sell_buy_tp_cd,
			                       Max(mst.air_sea_clss_cd)     AS air_sea_clss_cd,
			                       Max(mst.trdp_cd)             AS trdp_cd,
			                       CASE
			                         WHEN Max(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
			                         WHEN Max(mst.sell_buy_tp_cd) = 'D'
			                               OR Max(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
			                         WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
			                       END                          AS inv_tp,
			                       CASE
			                         WHEN Max(mst.sell_buy_tp_cd) = 'S' THEN Max(dtl.inv_no)
			                         WHEN Max(mst.sell_buy_tp_cd) = 'D'
			                               OR Max(mst.sell_buy_tp_cd) = 'C' THEN
			                         Max(dtl.inv_no)
			                         WHEN Max(mst.sell_buy_tp_cd) = 'B' THEN
			                         Max(dtl.buy_inv_no)
			                       END                          AS inv_no,
			                       Max(dtl.inv_post_dt)         AS post_dt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND ( Isnull(fcd.pfmc_flg, 'N') = 'N'
			                                         OR fcd.pfmc_flg = '' ) THEN
			                               CASE frt.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS duty_tax_amt,
			                       <!-- #2796 [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경 -->
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND Isnull(fcd.pfmc_flg, 'N') = 'Y'
			                                  <!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
			                                  AND (ISNULL(fcd.TAX_FLG,'N') = 'N' OR fcd.TAX_FLG = '') -->
			                                  <!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
			                                  AND frt.frt_cd NOT IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
			                                  -->
			                                  AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) = 0
			                               THEN
			                               CASE frt.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS non_taxable_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd != 'VAT'
			                                  AND fcd.frt_clss_cd != 'WHD'
			                                  AND Isnull(fcd.pfmc_flg, 'N') = 'Y'
			                                  <!-- 2796 : [LBS] Invoice List 의 Non-Taxable, Taxable 로직 변경
			                                  AND ISNULL(fcd.TAX_FLG, 'N') = 'Y' -->
			                                  <!-- #4452 : [impex 독일] TAXABLE AMOUNT 오류
			                                  AND frt.frt_cd IN (frt.vat_rt_cd, frt.vat_rt_cd1,vat_rt_cd2)
			                                  -->
			                                  AND (ISNULL(FRT.VAT_RT,0) + ISNULL(FRT.VAT_RT1,0) + ISNULL(FRT.VAT_RT2,0)) > 0
			                               THEN
			                               CASE frt.sell_buy_tp_cd
			                                 WHEN 'C' THEN frt.cr_amt *- 1
			                                 ELSE frt.inv_amt
			                               END
			                             ELSE 0
			                           END)                     AS taxable_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd = 'VAT' THEN frt.inv_amt
			                             ELSE 0
			                           END)                     AS vat_amt,
			                       Sum(CASE
			                             WHEN fcd.frt_clss_cd = 'WHD' THEN frt.inv_amt
			                             ELSE 0
			                           END)                     AS whd_amt,
			                       CASE
			                         WHEN Max(mst.sell_buy_tp_cd) = 'C' THEN
			                         Max(dtl.inv_sum_amt) * -1
			                         ELSE Max(dtl.inv_sum_amt)
			                       END                          AS inv_sum_amt,
			                       Max(dtl.modi_tms)            AS modi_tms,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'M' THEN Max(bl.bl_no)

			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN Max(mbl.bl_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.mbl_no)

			                         ELSE ''
			                       END                          AS mbl_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN Max(bl.bl_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.hbl_no)

			                         ELSE NULL
			                       END                          AS hbl_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN Max(bl.ref_no)

			                         ELSE ''
			                       END                          AS ref_no,

			                       CASE
			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.ref_no)

			                         ELSE ''
			                       END                          AS oth_ref_no,

			                       CASE
			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN
			                         Max(wms_doc.doc_ref_no)

			                         ELSE ''
			                       END                          AS wms_ref_no,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(bl.intg_bl_seq)

			                         ELSE ''
			                       END                          AS intg_bl_seq,

			                       CASE
			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN
			                         Max(oth_doc.oth_seq)

			                         ELSE ''
			                       END                          AS oth_seq,

			                       CASE
			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN
			                         Max(wms_doc.wm_doc_seq)

			                         ELSE ''
			                       END                          AS wms_seq,

			                       (SELECT Upper(x.cnt_cd)
			                        FROM   tb_ofc x WITH(nolock)
			                        WHERE  x.ofc_cd = Max(CASE
			                                                WHEN Len(frt.intg_bl_seq) > 0
			                                              THEN
			                                                bl.ref_ofc_cd
			                                                WHEN Len(frt.oth_seq) > 0 THEN
			                                                oth_doc.ofc_cd

			                                                WHEN Len(frt.wms_seq) > 0 THEN
			                                                wms_doc.ofc_cd

			                                                ELSE ''
			                                              END)) AS bl_cnt_cd,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(bl.ref_ofc_cd)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN Max(oth_doc.ofc_cd)

			                         WHEN Len(Max(frt.wms_seq)) > 0 THEN Max(wms_doc.ofc_cd)

			                         ELSE ''
			                       END                          AS ref_ofc_cd,

			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'M' THEN
			                         Max(bl.intg_bl_seq)

			                         WHEN Len(Max(frt.intg_bl_seq)) > 0
			                              AND Max(bl.biz_clss_cd) = 'H' THEN
			                         Max(mbl.intg_bl_seq)

			                         ELSE ''
			                       END                          AS m_intg_bl_seq,

			                       Max(bnd.bnd_clss_cd)         AS bnd_clss_cd,

			                       CASE
			                         WHEN Max(bl.biz_clss_cd) = 'M' THEN Max(bl.imp_ref_no)
			                         WHEN Max(bl.biz_clss_cd) = 'H' THEN Max(bl.prnr_ref_no)
			                         ELSE ''
			                       END                          AS bl_agent_ref_no,
			                       CASE
			                         WHEN Len(Max(frt.intg_bl_seq)) > 0 THEN
			                         Max(bl.cust_ref_no)

			                         WHEN Len(Max(frt.oth_seq)) > 0 THEN
			                         Max(oth_doc.cust_ref_no)

			                         ELSE NULL
			                       END                          AS bl_cust_ref_no,

			                        <!-- #5610 [Starway] Excel download 시 특정 칼럼 data missing 문제 -->
			                       case when Max(frt.intg_bl_seq) is null then Max(oth_doc.etd_dt_tm) else Max(bl.etd_dt_tm)  end        AS etd_dt_tm,
			                       case when Max(frt.intg_bl_seq) is null then Max(oth_doc.eta_dt_tm) else Max(bl.eta_dt_tm)  end        AS eta_dt_tm,

<!-- 			                       Max(bl.etd_dt_tm)            AS etd_dt_tm, -->
<!-- 			                       Max(bl.eta_dt_tm)            AS eta_dt_tm, -->
			                       Max(dtl.inv_dt)              AS inv_dt,
			                       Max(dtl.last_chk_no)         AS LAST_CHK_NO,
			                       Max(bl.bl_no)                AS bl_no,
                                   Max(bl.biz_clss_cd)          AS biz_clss_cd,
								   Row_number() OVER ( ORDER BY Max(dtl.inv_post_dt) DESC, Max(dtl.modi_tms) DESC ) AS ROWNUM,
								   COUNT(*) OVER(PARTITION BY 1) as total_rows_cnt,
								   <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
								   max(dtl.vchr_no) as vchr_no,
								   max(dtl.vchr_tp_cd) as vchr_tp_cd,
								   <!-- #2108 [PATENT] INVOICE LIST - POL/POD 추가 -->
<!-- 						   			MAX(bl.pol_nm) AS pol_nm, -->
<!-- 						   			MAX(bl.pod_nm) AS pod_nm -->
						   			 <!-- #5610 [Starway] Excel download 시 특정 칼럼 data missing 문제 -->
						   			CASE when MAX(frt.intg_bl_seq) is null THEN MAX(oth_doc.pol_nm) else MAX(bl.pol_nm) end AS pol_nm,
						   			CASE when MAX(frt.intg_bl_seq) is null THEN MAX(oth_doc.pod_nm) else MAX(bl.pod_nm) end AS pod_nm
			                FROM   (SELECT
			                               inv_seq,
			                               inv_no,
			                               buy_inv_no,
			                               inv_post_dt,
			                               modi_tms,
			                               inv_sum_amt,
			                               inv_dt,
			                               last_chk_no,
			                               pay_amt,
			                               last_pay_dt,
			                               bal_amt,
			                               inv_due_dt,
			                               inv_aply_curr_cd,
			                               cust_ref_no,
			                               <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
			                               vchr_no,
										   vchr_tp_cd
			                        FROM   tb_inv_dtl WITH(/*INDEX(xak3tb_inv_dtl), */ nolock)
			                        WHERE  1=1
					<isNotEmpty property="f_strdt">
						<isEqual property="f_date_type" compareValue="PDT">
							AND INV_POST_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
						<isEqual property="f_date_type" compareValue="IDT">
							AND INV_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
						<isEqual property="f_date_type" compareValue="DDT">
							AND INV_DUE_DT BETWEEN #f_strdt# AND #f_enddt#
						</isEqual>
					</isNotEmpty>
					<!-- #3463 OFVFOUR-7374[StarCluster-Mex] Invoice Exchange Rate and Currency Option -->
					<isNotEmpty property="f_curr_cd">
						  AND tb_inv_dtl.inv_aply_curr_cd = #f_curr_cd#
					</isNotEmpty>

					         AND DELT_FLG = 'N'

                    <isNotEmpty property="s_inv_no">
						AND inv_no LIKE #s_inv_no# + '%'
					</isNotEmpty>
					<isNotEmpty property="s_v_inv_no">
						AND buy_inv_no LIKE #s_v_inv_no# + '%'
					</isNotEmpty>

					<isNotEmpty property="f_mhbl_no">
						<isEqual property="f_bl_type" compareValue="HBL">
		                   AND (INV_SEQ IN
		                    ( SELECT B.INV_SEQ
						        FROM tb_intg_bl  A WITH(nolock), tb_frt B WITH(nolock)
						       WHERE 1=1
						         AND A.intg_bl_seq = B.intg_bl_seq
						         AND A.BL_NO LIKE #f_mhbl_no# + '%' AND A.BIZ_CLSS_CD = 'H'
						         AND A.delt_flg = 'N'
						         AND B.DELT_FLG = 'N'
						       GROUP BY B.INV_SEQ )
						       OR INV_SEQ IN
							( SELECT B.INV_SEQ
						        FROM TB_OTH_SALES  A WITH(nolock), tb_frt B WITH(nolock)
						       WHERE 1=1
						         AND A.oth_seq = B.oth_seq
						         AND A.HBL_NO LIKE #f_mhbl_no# + '%'
						         AND A.delt_flg = 'N'
						         AND B.DELT_FLG = 'N'
						       GROUP BY B.INV_SEQ )
						       )
						</isEqual>
						<isEqual property="f_bl_type" compareValue="MBL">
		                   AND INV_SEQ IN
		                    (SELECT INV_SEQ
							   FROM tb_frt WITH(nolock)
							  WHERE 1 = 1
							  and (intg_bl_seq IN (

														SELECT intg_bl_seq
														FROM tb_intg_bl WITH(nolock)
														WHERE REF_NO IN (
																		<!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
																			  SELECT A.REF_NO
																				FROM tb_intg_bl  A WITH(nolock)
																			   WHERE 1=1
																				 AND A.BL_NO LIKE #f_mhbl_no# + '%'
																				 AND A.BIZ_CLSS_CD = 'M'
																				 AND A.delt_flg = 'N'
																			   GROUP BY A.REF_NO
									                                     )
		                                               )
		                             <!-- #2976 [Ocean blue] Cannot search AR/AP using MBL/HBL of other file -->
		                           	OR oth_seq in (select oth_seq from TB_OTH_SALES WITH(nolock) where MBL_NO LIKE #f_mhbl_no# + '%' and delt_flg = 'N')
		                             )
		                      )
						</isEqual>
					</isNotEmpty>

				<isNotEmpty property="f_ref_no">
                   AND
                   <isEqual property="f_ref_no_type" compareValue="fileNo">
						INV_SEQ IN
						(
							SELECT B.INV_SEQ
							FROM tb_intg_bl  A WITH(nolock), tb_frt B WITH(nolock)
							WHERE 1=1
							 AND A.intg_bl_seq = B.intg_bl_seq
							 <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							   AND A.REF_NO LIKE #f_ref_no#
							   AND A.delt_flg = 'N'
							   AND B.DELT_FLG = 'N'
							  GROUP BY B.INV_SEQ
						)

					</isEqual>
					<isEqual property="f_ref_no_type" compareValue="othRefNo">
						  INV_SEQ IN
							(
								SELECT B.INV_SEQ
							    FROM TB_OTH_SALES A WITH(nolock), TB_FRT B WITH(nolock)
							    WHERE 1=1
							     AND A.OTH_SEQ = B.OTH_SEQ
							      <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							     AND A.REF_NO LIKE #f_ref_no#
							)
  				     </isEqual>
					<isEqual property="f_ref_no_type" compareValue="wmsRefNo">
							    INV_SEQ IN
							     ( SELECT B.INV_SEQ
							         FROM TB_WM_DOC_MST A WITH(nolock), TB_FRT B WITH(nolock)
							        WHERE 1=1
							          AND A.WM_DOC_SEQ = B.WMS_SEQ
							          <!-- #1981 [BINEX] FILING # 값이 EXACT인것 조회 방법 -->
							          AND A.DOC_REF_NO LIKE #f_ref_no#
							     )
				    </isEqual>
				</isNotEmpty>

                                            ) dtl
			                       JOIN tb_inv mst WITH(nolock)
			                         ON dtl.inv_seq = mst.inv_seq AND mst.DELT_FLG = 'N'
									<isNotEmpty property="s_ofc_cd">
							                  AND mst.ofc_cd = #s_ofc_cd#
					                </isNotEmpty>
									<!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 -->
									<isNotEmpty property="s_tax_no">
										  AND mst.tax_no LIKE #s_tax_no# + '%'
									</isNotEmpty>

			                       JOIN tb_frt frt WITH(nolock)
			                         ON dtl.inv_seq = frt.inv_seq
			                       LEFT OUTER JOIN tb_frt_cd fcd WITH(nolock)
			                                    ON frt.frt_cd = fcd.frt_cd
			                       LEFT OUTER JOIN tb_intg_bl bl WITH(nolock)
			                                    ON frt.intg_bl_seq = bl.intg_bl_seq
			                                       AND bl.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_add_info_bnd bnd WITH(nolock)
			                                    ON frt.intg_bl_seq = bnd.intg_bl_seq
			                                       AND bnd.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_intg_bl_rlt rlt WITH(nolock)
			                                    ON bl.intg_bl_seq = rlt.intg_bl_seq
			                                       AND rlt.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_intg_bl mbl WITH(nolock)
			                                    ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq
			                                       AND mbl.biz_clss_cd = 'M'
			                                       AND mbl.delt_flg = 'N'
			                       LEFT OUTER JOIN tb_oth_sales oth_doc WITH(nolock)
			                                    ON frt.oth_seq = oth_doc.oth_seq
			                       LEFT OUTER JOIN tb_wm_doc_mst wms_doc WITH(nolock)
			                                    ON frt.wms_seq = wms_doc.wm_doc_seq
			                WHERE  1=1
			                       AND Isnull(mst.air_sea_clss_cd, 'O') != 'G'
							<isNotEqual property="s_amt_to" compareValue="0">
								AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
							</isNotEqual>
							<isNotEmpty property="s_inv_rmk">
								AND mst.inv_rmk LIKE #s_inv_rmk# + '%'
							</isNotEmpty>
							<isEqual property="s_type_cd" compareValue="LC">
								AND mst.sell_buy_tp_cd = 'S'
							</isEqual>
							<isEqual property="s_type_cd" compareValue="CD">
								AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
							</isEqual>
							<isEqual property="s_type_cd" compareValue="AP">
								AND mst.sell_buy_tp_cd = 'B'
							</isEqual>
							<isNotEmpty property="s_inv_seq">
								AND dtl.inv_seq = #s_inv_seq#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_cd">
								AND mst.trdp_cd = #s_bill_to_cd#
							</isNotEmpty>
							<isNotEmpty property="s_bill_to_nm">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd WITH(nolock)
											WHERE trd.TRDP_CD = mst.TRDP_CD
											  AND (trd.ENG_NM LIKE #s_bill_to_nm#
												or trd.SHRT_NM LIKE #s_bill_to_nm#
												or trd.LOCL_NM LIKE #s_bill_to_nm#)
										   )
							</isNotEmpty>
								<isNotEmpty property="s_biz_no">
								AND EXISTS(SELECT 1 FROM TB_TRDP trd WITH(nolock)
											WHERE trd.TRDP_CD = mst.TRDP_CD
											  AND trd.biz_no LIKE #s_biz_no# +'%'
										   )
							</isNotEmpty>
							<isNotEmpty property="f_intg_bl_seq">
								AND bl.intg_bl_seq = #f_intg_bl_seq#
							</isNotEmpty>
							<isNotEmpty property="f_oth_seq">
								AND frt.oth_seq = #f_oth_seq#
							</isNotEmpty>

						    <!-- #874 [STARWAY] SHIP TO COLUMN ADD ON AR/AP LIST SCREEN Start -->
						    <isNotEmpty property="s_ship_to">
						    	AND mst.ship_trdp_nm LIKE '%' + #s_ship_to# + '%'
						    </isNotEmpty>

				            <isNotEmpty property="f_agt_ref_no">
							    AND (CASE WHEN Isnull(dtl.cust_ref_no, '') != '' AND (mst.sell_buy_tp_cd IN ( 'D', 'C' ) ) THEN Isnull(dtl.cust_ref_no, '')
			                              ELSE
			               			          CASE WHEN bl.biz_clss_cd = 'M' THEN bl.imp_ref_no
			                                       WHEN bl.biz_clss_cd = 'H' THEN bl.prnr_ref_no
			                                  ELSE ''
			                                  END
			                         END) LIKE '%' + #f_agt_ref_no# + '%'
						    </isNotEmpty>

				            <isNotEmpty property="f_cust_ref_no">
				                 AND (CASE WHEN Isnull(dtl.cust_ref_no, '') != '' AND mst.sell_buy_tp_cd = 'S' THEN dtl.cust_ref_no
				                           ELSE
				                                CASE WHEN Len(frt.intg_bl_seq) > 0 THEN bl.cust_ref_no
				                                     WHEN Len(frt.oth_seq) > 0 THEN oth_doc.cust_ref_no
				                                ELSE NULL
				                                END
				                      END) LIKE '%' + #f_cust_ref_no# + '%'
						    </isNotEmpty>

			                GROUP  BY dtl.inv_seq)       T1

			               JOIN tb_inv mst WITH(nolock)
			                 ON T1.inv_seq = mst.inv_seq
			               JOIN tb_inv_dtl dtl WITH(nolock)
			                 ON mst.inv_seq = dtl.inv_seq
			               LEFT JOIN tb_trdp prnr WITH(nolock)
			                      ON prnr.trdp_cd = MST.trdp_cd
			               LEFT JOIN tb_jnr_dtl jnr WITH(nolock)
			                      ON T1.inv_seq = jnr.inv_seq
			                         AND Isnull(jnr.delt_flg, 'N') != 'Y'
			               LEFT OUTER JOIN (SELECT inv_seq      AS INV_SEQ1,
			                                       inv_no       AS INV_NO1,
			                                       clt_cmpl_flg AS CLT_CMPL_FLG1,
			                                	   CASE WHEN CLT_CMPL_FLG = 'Y' THEN
								                    	blcked_usr.locl_usr_nm
								                   ELSE '' END AS BLOKED_BY,
								                   CASE WHEN CLT_CMPL_FLG = 'Y' THEN
											     		ISNULL(CONVERT(VARCHAR(23), CONVERT(DATETIME, block_dt), 110), CONVERT(VARCHAR(23), CONVERT(DATETIME, idb.modi_tms), 110))
											       ELSE '' END AS BLOCK_DT
			                                FROM   tb_inv_dtl_blck idb WITH(nolock)
			                                LEFT OUTER JOIN tb_usr blcked_usr WITH(nolock)
			                                			ON idb.rgst_usrid = blcked_usr.usrid) BLCK
			                            ON DTL.inv_seq = BLCK.inv_seq1
			                               AND DTL.inv_no = BLCK.inv_no1
			               LEFT OUTER JOIN (SELECT modi_tms,
			                                       inv_seq
			                                FROM   tb_inv_dtl_blck WITH(nolock)) TIDB
			                            ON TIDB.inv_seq = DTL.inv_seq
						   LEFT OUTER JOIN TB_USR issued_usr WITH(nolock)
			               				ON mst.rgst_usrid = issued_usr.usrid

					WHERE 	1=1


			        GROUP  BY T1.inv_seq,
			                  T1.inv_no,
			                  T1.post_dt,
			                  T1.modi_tms,
			                  T1.mbl_no,
			                  T1.hbl_no,
			                  T1.ref_no,
			                  T1.oth_ref_no,
			                  T1.wms_ref_no,
			                  T1.intg_bl_seq,
			                  T1.oth_seq,
			                  T1.wms_seq,
			                  T1.bl_cnt_cd,
			                  T1.ref_ofc_cd,
			                  T1.m_intg_bl_seq,
			                  T1.bnd_clss_cd,
			                  T1.bl_cust_ref_no,
			                  T1.rownum,
			                  T1.etd_dt_tm,
			                  T1.eta_dt_tm,
			                  T1.inv_dt,
			                  T1.rownum
			        ) T2
		<!-- OFVFOUR-8038: [BNX-TOR] Adding Rlsd.Date column into AR/AP list -->
		GROUP BY
		T2.rownum,
		T2.inv_seq,
		T2.inv_no,
		T2.o_inv_no,
		T2.mbl_no,
		T2.hbl_no,
		T2.ref_no,
		T2.oth_ref_no,
		T2.wms_ref_no,
		T2.intg_bl_seq,
		T2.oth_seq,
		T2.wms_seq,
		T2.bl_cnt_cd,
		T2.ref_ofc_cd,
		T2.m_intg_bl_seq,
		T2.bnd_clss_cd,
		T2.sell_buy_tp_cd,
		T2.air_sea_clss_cd,
		T2.inv_tp,
		T2.trdp_cd,
		T2.duty_tax_amt,
		T2.non_taxable_amt,
		T2.taxable_amt,
		T2.vat_amt,
		T2.whd_amt,
		T2.duty_tax_tot_amt,
		T2.non_taxable_tot_amt,
		taxable_tot_amt,
		T2.vat_tot_amt,
		T2.whd_tot_amt,
		T2.inv_sum_amt,
		T2.profit_amt,
		T2.bal_amt,
		T2.pay_tot_amt,
		T2.bal_tot_amt,
		T2.vnd_inv_no,
		T2.ofc_cd,
		T2.inv_aply_curr_cd,
		T2.rgst_usrid,
		T2.modi_usrid,
		T2.clt_cmpl_flg,
		T2.cmb_inv_seq,
		T2.imp_ref_no,
		T2.cust_ref_no,
		T2.inv_rmk,
		T2.shrt_nm,
		T2.biz_no,
		T2.trdp_nm,
		T2.ship_trdp_nm,
		T2.jnr_no,
		T2.last_chk_no,
		T2.TAX_BIL_FLG,
		T2.tax_no,
		T2.org_tax_no,
		T2.finc_ofc_cd,
		T2.total_rows_cnt,
		T2.slip_no,
		T2.bloked_by,
		T2.issued_by,
		T2.block_dt,
		T2.vchr_no,
		T2.vchr_tp_nm,
		T2.pol_nm,
		T2.pod_nm,
		T2.post_dt,
		T2.modi_tms

		<isNotEmpty property="f_orderByInfo">
			ORDER  BY
			$f_orderByInfo$
		</isNotEmpty>
		<isEmpty property="f_orderByInfo">
			ORDER  BY
			Row_number()
			OVER(
			ORDER BY T2.post_dt DESC, T2.modi_tms DESC)
		</isEmpty>

    </select>


    <!-- InvoiceList COUNT 조회  -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchInvoiceList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		<!-- AccInvInvoiceSQL.xml > searchInvoiceList_CNT   -->
		<!-- ZOOT = AR_AP LIST -->
		/*  AccInvInvoiceSQL.xml > searchInvoiceList_CNT */
		SELECT COUNT(x.inv_seq)
          FROM (
          	SELECT
					A.inv_seq,
					CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND (MAX(A.sell_buy_tp_cd) IN ('D', 'C')) THEN MAX(dtl.CUST_REF_NO)
			             ELSE MAX(A.agent_ref_no) END AS imp_ref_no,
		            CASE WHEN isnull(MAX(dtl.CUST_REF_NO),'') != '' AND MAX(A.sell_buy_tp_cd) = 'S' THEN MAX(dtl.CUST_REF_NO)
		                 ELSE MAX(A.cust_ref_no)
		            END AS cust_ref_no
					FROM(
							SELECT
								dtl.inv_seq,
								MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
								CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
								END AS inv_no,
								CASE
									WHEN MAX(bl.BIZ_CLSS_CD) = 'M' THEN MAX(bl.IMP_REF_NO)
									WHEN MAX(bl.BIZ_CLSS_CD) = 'H' THEN MAX(bl.PRNR_REF_NO)
								END AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no
							 FROM TB_INV mst with(nolock)
							 JOIN TB_INV_DTL dtl with(nolock)
								ON mst.INV_SEQ = dtl.INV_SEQ
							 JOIN TB_FRT frt with(nolock)
								ON dtl.INV_SEQ = frt.INV_SEQ
							 JOIN TB_INTG_BL bl with(nolock)
								ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
							LEFT JOIN tb_intg_bl_rlt rlt with(nolock)
					            ON bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
							LEFT JOIN tb_intg_bl mbl with(nolock)
								ON rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
							WHERE mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
								AND isnull(frt.oth_seq,'') ='' AND isnull(frt.WMS_SEQ,'') =''
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>
								<isNotEqual property="s_due_strdt" compareValue="">
									AND dtl.INV_DUE_DT BETWEEN #s_due_strdt# AND #s_due_enddt#
								</isNotEqual>
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd with(nolock)
												WHERE trd.TRDP_CD = mst.TRDP_CD
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ref_ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.bl_no LIKE  #s_hbl_no# + '%'
									AND bl.biz_clss_cd = 'H'
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND (mbl.bl_no LIKE '%'+#s_mbl_no#+'%' or ( bl.bl_no LIKE '%'+#s_mbl_no#+'%'	AND bl.biz_clss_cd = 'M'))
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE #s_v_inv_no# + '%'
								</isNotEmpty>
								<!-- #3463 OFVFOUR-7374[StarCluster-Mex] Invoice Exchange Rate and Currency Option -->
								<isNotEmpty property="f_curr_cd">
									  AND dtl.inv_aply_curr_cd = #f_curr_cd#
								</isNotEmpty>
								
								<isNotEmpty property="s_ref_no">
									AND bl.ref_no like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND bl.intg_bl_seq = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk LIKE #s_inv_rmk# + '%'
								</isNotEmpty>

							GROUP BY dtl.inv_seq

							UNION ALL

							SELECT
									dtl.inv_seq,
									MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
									CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
									     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
									     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
									END AS inv_no,
									'' AS agent_ref_no,
									MAX(bl.cust_ref_no) AS cust_ref_no
							 FROM TB_INV mst with(nolock)
							 JOIN TB_INV_DTL dtl with(nolock)
								ON mst.INV_SEQ = dtl.INV_SEQ
							 JOIN TB_FRT frt with(nolock)
								ON dtl.INV_SEQ = frt.INV_SEQ
							 JOIN TB_OTH_SALES bl with(nolock)
								ON frt.OTH_SEQ = bl.OTH_SEQ
							WHERE mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.oth_seq,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>
								<isNotEqual property="s_due_strdt" compareValue="">
									AND dtl.INV_DUE_DT BETWEEN #s_due_strdt# AND #s_due_enddt#
								</isNotEqual>
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd with(nolock)
												WHERE trd.TRDP_CD = mst.TRDP_CD
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no LIKE  #s_hbl_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no LIKE '%'+#s_mbl_no#+'%'
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'bl.ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND bl.ref_no like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND 's_wms_ref_no' like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk LIKE #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq

							UNION ALL

							SELECT
								dtl.inv_seq,
								MAX(mst.sell_buy_tp_cd) as sell_buy_tp_cd,
								CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
								     WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
								END AS inv_no,
								'' AS agent_ref_no,
								MAX(bl.cust_ref_no) AS cust_ref_no
					        FROM
					            TB_INV mst with(nolock)
					        JOIN
					            TB_INV_DTL dtl with(nolock)
					            ON mst.INV_SEQ = dtl.INV_SEQ
					        JOIN
					            TB_FRT frt with(nolock)
					            ON dtl.INV_SEQ = frt.INV_SEQ
					        LEFT OUTER JOIN
								TB_FRT_CD fcd with(nolock)
									ON frt.FRT_CD = fcd.frt_cd
					        JOIN
					            TB_WM_DOC_MST bl with(nolock)
					            ON frt.WMS_SEQ = bl.WM_DOC_SEQ
							WHERE
								mst.DELT_FLG = 'N'
							    AND isnull(mst.air_sea_clss_cd,'O') != 'G'
							    AND isnull(frt.WMS_SEQ,'') !=''
								<isNotEqual property="s_post_strdt" compareValue="">
									AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
								</isNotEqual>
								<isNotEqual property="s_due_strdt" compareValue="">
									AND dtl.INV_DUE_DT BETWEEN #s_due_strdt# AND #s_due_enddt#
								</isNotEqual>
									AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
								<isNotEmpty property="s_bill_to_cd">
									AND mst.trdp_cd = #s_bill_to_cd#
								</isNotEmpty>
								<isNotEmpty property="s_bill_to_nm">
									AND EXISTS(SELECT 1 FROM TB_TRDP trd with(nolock)
												WHERE trd.TRDP_CD = mst.TRDP_CD
												  AND (trd.ENG_NM LIKE #s_bill_to_nm#
											        or trd.SHRT_NM LIKE #s_bill_to_nm#
									                or trd.LOCL_NM LIKE #s_bill_to_nm#))
								</isNotEmpty>
								<isNotEmpty property="s_ofc_cd">
									AND bl.ofc_cd = #s_ofc_cd#
								</isNotEmpty>
								<isNotEmpty property="s_hbl_no">
									AND bl.hbl_no LIKE  #s_hbl_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_mbl_no">
									AND bl.mbl_no LIKE '%'+#s_mbl_no#+'%'
								</isNotEmpty>
								<isNotEmpty property="s_inv_no">
									AND dtl.inv_no LIKE #s_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_v_inv_no">
									AND dtl.buy_inv_no LIKE #s_v_inv_no# + '%'
								</isNotEmpty>
								<isNotEmpty property="s_ref_no">
									AND 'ref_no' like #s_ref_no#
								</isNotEmpty>
								<isEqual property="s_type_cd" compareValue="LC">
									AND mst.sell_buy_tp_cd = 'S'
								</isEqual>
								<isEqual property="s_type_cd" compareValue="CD">
									AND (mst.sell_buy_tp_cd = 'D' OR mst.sell_buy_tp_cd = 'C')
								</isEqual>
								<isEqual property="s_type_cd" compareValue="AP">
									AND mst.sell_buy_tp_cd = 'B'
								</isEqual>
								<isNotEmpty property="s_inv_seq">
									AND dtl.inv_seq = #s_inv_seq#
								</isNotEmpty>
								<isNotEmpty property="f_intg_bl_seq">
									AND 'f_intg_bl_seq' = #f_intg_bl_seq#
								</isNotEmpty>
								<isNotEmpty property="f_oth_seq">
		 							AND frt.oth_seq = #f_oth_seq#
								</isNotEmpty>
								<isNotEmpty property="s_oth_ref_no">
		 							AND 's_oth_ref_no' like #s_oth_ref_no#
								</isNotEmpty>
								<isNotEmpty property="s_wms_ref_no">
		 							AND bl.doc_ref_no like #s_wms_ref_no#
								</isNotEmpty>
								<isNotEqual property="s_amt_to" compareValue="0">
									AND (CASE WHEN mst.sell_buy_tp_cd = 'C' THEN dtl.inv_sum_amt * -1 ELSE dtl.inv_sum_amt END) BETWEEN #s_amt_fr# AND #s_amt_to#
								</isNotEqual>
								<isNotEmpty property="s_inv_rmk">
									AND mst.inv_rmk LIKE #s_inv_rmk# + '%'
								</isNotEmpty>
							GROUP BY dtl.inv_seq
						) A
						JOIN
							TB_INV_DTL dtl with(nolock)
				            ON A.INV_SEQ = dtl.INV_SEQ
				        GROUP BY A.INV_SEQ
			) x
			<dynamic prepend="WHERE">
				<isNotEmpty property="s_imp_ref_no" prepend="AND">
					x.imp_ref_no LIKE #s_imp_ref_no# + '%'
				</isNotEmpty>
				<isNotEmpty property="s_cust_ref_no" prepend="AND">
					x.cust_ref_no = #s_cust_ref_no#
				</isNotEmpty>
			</dynamic>
    </select>

    <!-- InvoiceList 조회  -->
    <select id="searchExpenseList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchExpenseList  */
		SELECT
	        a1.*
	    FROM
	        (   SELECT
		            ROW_NUMBER() OVER (
		        ORDER BY
		            A.modi_tms desc, A.post_dt, A.inv_no
	            ) as ROWNUM,
	            A.*
	        FROM
	            (
	            SELECT 	dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       <!-- #52420 Accounting > AR/AP > AR/AP List(G&A) Invoice Date 추가  -->
				       ,MAX(dtl.inv_dt)		        AS inv_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       <!-- //#3488 Accounting Multi Language 적용 -->
				 		,CASE WHEN EXISTS(
						SELECT 1
						FROM TB_SYS_OPT
						WHERE 1=1
						AND OPT_KEY = 'MULTI_LANGUAGE'
						AND OPT_VAL = 'Y'
						)
						THEN MAX(prnr.locl_nm)
						ELSE MAX(prnr.eng_nm)
						END AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       <!-- #5859 [StarCluster-Mex] Adding Paid Column -->
				       ,MAX(dtl.last_chk_no)		AS last_chk_no
				       ,MAX(dtl.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				             ELSE MAX(dtl.inv_no)
				        END 						AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       <!-- ,MAX(CONVERT(VARCHAR, mst.rgst_tms, 110) + ' ' + SUBSTRING(CONVERT(VARCHAR, mst.rgst_tms, 108), 0,6)) AS rgst_tms -->
				       ,MAX(mst.rgst_tms) AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(CONVERT(VARCHAR, mst.modi_tms, 120))			AS modi_tms
				       <!-- ,MAX(CONVERT(VARCHAR, mst.inv_modi_tms,  110) + ' ' + SUBSTRING(CONVERT(VARCHAR, mst.inv_modi_tms, 108), 0, 6) ) AS inv_modi_tms -->
				       ,MAX(mst.inv_modi_tms) AS inv_modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS clt_cmpl_flg
				       ,MAX(jnr_mst.jnr_no)			AS jnr_no
		   		       ,MAX(mst.Reserve_field02)   AS reserve_field02
		   		       ,(SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = MAX(mst.ofc_cd)) as bl_cnt_cd
		   		       ,MAX(MST.INV_RMK) AS inv_rmk

		   		        <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
						,(case
						 when MAX(TIDB.MODI_TMS) IS null then MAX(dtl.modi_tms)
						 when MAX(dtl.modi_tms) > MAX(TIDB.MODI_TMS) then MAX(dtl.modi_tms)
						 else MAX(TIDB.MODI_TMS) end)  trx_modi_tms
				 		,MAX(dtl.slip_no) 									 AS slip_no
					    ,MAX(TIDB.bloked_by) 								 AS bloked_by
					    ,MAX(issued_usr.locl_usr_nm) 						 AS issued_by
					    ,MAX(TIDB.block_dt) 								 AS block_dt
					    <!-- #1799 [PATENT] VOUCHER 양식 - Deposit/Payment for CHINA Account Slip [Form] -->
					    ,MAX(dtl.vchr_no) AS vchr_no
						,(select cd_nm from tb_com_cd_dtl as a where a.com_cd = 'C225'  and MAX(dtl.vchr_tp_cd) = a.cd_val) as vchr_tp_nm
						 <!--[CSR #6020] [StarCluster-Mex] 추가 요청/확인 사항 - G&A Invoice List : Tax 필드 추가 -->
						,MAX(new_tab.duty_tax_amt) as duty_tax_amt
						,MAX(new_tab.non_taxable_amt) as non_taxable_amt
						,MAX(new_tab.taxable_amt) as taxable_amt
						,MAX(new_tab.vat_amt) as vat_amt,
						<!-- #6881 - [STAR-MEX] G&A INVOICE LIST - WITHHOLDING AMOUNT COLUMN -->
						MAX(new_tab.whd_amt) as whd_amt
						, <!-- OFVFOUR-7598 [StarCluster-Mex] Adding Total amount in G&A Invoice list -->
						CASE
                        	WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_sum_amt) * -1
                        	ELSE MAX(dtl.inv_sum_amt)
                    	END AS inv_sum_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.pay_amt) * -1
	                        ELSE MAX(dtl.pay_amt)
	                    END AS pay_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.bal_amt) * -1
	                        ELSE MAX(dtl.bal_amt)
	                    END AS bal_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(new_tab.duty_tax_amt) * -1
	                        ELSE MAX(new_tab.duty_tax_amt)
	                    END AS duty_tax_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(new_tab.non_taxable_amt) * -1
	                        ELSE MAX(new_tab.non_taxable_amt)
	                    END AS non_taxable_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(new_tab.taxable_amt) * -1
	                        ELSE MAX(new_tab.taxable_amt)
	                    END AS taxable_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(new_tab.vat_amt) * -1
	                        ELSE MAX(new_tab.vat_amt)
	                    END AS vat_tot_amt,
	                    CASE
	                        WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(new_tab.whd_amt) * -1
	                        ELSE MAX(new_tab.whd_amt)
	                    END AS whd_tot_amt                     
				 FROM TB_INV mst
				LEFT JOIN TB_INV_DTL dtl
					ON mst.INV_SEQ = dtl.INV_SEQ
				LEFT JOIN TB_FRT frt
					ON dtl.INV_SEQ = frt.INV_SEQ
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
				LEFT JOIN TB_JNR_MST jnr_mst
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1

				<!-- #52420 Accounting > AR/AP > AR/AP List(G&A) Invoice Date 추가  -->
				LEFT OUTER JOIN
				(
				SELECT
					 idb.MODI_TMS
					,idb.INV_SEQ
					,CASE WHEN idb.CLT_CMPL_FLG = 'Y' THEN
						blcked_usr.LOCL_USR_NM
		                ELSE '' END AS BLOKED_BY
		               ,CASE WHEN idb.CLT_CMPL_FLG = 'Y' THEN
				     	ISNULL(CONVERT(VARCHAR(23), CONVERT(DATETIME, idb.BLOCK_DT), 110), CONVERT(VARCHAR(23), CONVERT(DATETIME, idb.MODI_TMS), 110))
				     ELSE '' END AS BLOCK_DT
				FROM TB_INV_DTL_BLCK   idb
				LEFT OUTER JOIN tb_usr blcked_usr
					 ON idb.rgst_usrid = blcked_usr.usrid
				) TIDB
					ON TIDB.INV_SEQ = dtl.INV_SEQ
				LEFT OUTER JOIN TB_USR issued_usr
			 		ON mst.RGST_USRID = issued_usr.USRID
			 	<!--[CSR #6020] [StarCluster-Mex] 추가 요청/확인 사항 - G&A Invoice List : Tax 필드 추가 -->
				 LEFT OUTER JOIN (
					SELECT  DTL2.INV_SEQ ,   SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
										AND fcd.FRT_CLSS_CD != 'WHD'
										AND (ISNULL(fcd.PFMC_FLG, 'N') = 'N'
										OR fcd.PFMC_FLG = '')  THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS duty_tax_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
											AND fcd.FRT_CLSS_CD != 'WHD'
											AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'										
											AND (ISNULL(frt2.VAT_RT,0) + ISNULL(frt2.VAT_RT1,0) + ISNULL(frt2.VAT_RT2,0)) = 0
										THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS non_taxable_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
											AND fcd.FRT_CLSS_CD != 'WHD'
											AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'
											AND (ISNULL(frt2.VAT_RT,0) + ISNULL(frt2.VAT_RT1,0) + ISNULL(frt2.VAT_RT2,0)) > 0
										THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS taxable_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt2.INV_AMT
										ELSE 0
									END ) AS vat_amt,
									<!-- #6881 - [STAR-MEX] G&A INVOICE LIST - WITHHOLDING AMOUNT COLUMN -->
									SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt2.INV_AMT ELSE 0 END ) AS whd_amt
									
									FROM TB_INV_DTL DTL2 
									
									LEFT JOIN TB_FRT frt2
									ON dtl2.INV_SEQ = frt2.INV_SEQ
									
									LEFT OUTER JOIN
									TB_FRT_CD fcd with(nolock)
										ON frt2.FRT_CD = fcd.frt_cd
										group by  DTL2.INV_SEQ
				) new_tab    ON    mst.INV_SEQ =   new_tab.INV_SEQ 
                            
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>
					<isNotEmpty property="s_inv_strdt">
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_due_strdt">
					AND dtl.inv_due_dt		BETWEEN #s_due_strdt#  AND #s_due_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
						AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd
									WHERE trd.TRDP_CD = mst.TRDP_CD
									<!-- //#3488 Accounting Multi Language 적용 --> 
									AND(
										trd.ENG_NM LIKE #s_bill_to_nm# + '%'
										or 
										trd.LOCL_NM LIKE #s_bill_to_nm# + '%'
										
									)
								) 
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE #s_inv_no# + '%' OR dtl.inv_no LIKE #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
					 <!-- #5859 [StarCluster-Mex] Adding Paid Column --> 
					<isNotEmpty property="s_last_chk_no">
						AND dtl.last_chk_no		LIKE #s_last_chk_no# + '%'
					</isNotEmpty>
				</dynamic>
				GROUP BY dtl.inv_seq
	            ) A
	    ) a1
		<![CDATA[ where a1.ROWNUM > #beginIdx# AND a1.ROWNUM <= #topCnt#	]]>

		<isNotEmpty property="f_orderByInfo">
		ORDER BY $f_orderByInfo$
		</isNotEmpty>
		<isEmpty property="f_orderByInfo">
		</isEmpty>

    </select>

    <!-- InvoiceList 조회  -->
    <select id="searchExpenseList_EXCEL" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchExpenseList_EXCEL  */
		SELECT
	        a1.*			
	    FROM
	        (   SELECT
		            ROW_NUMBER() OVER (
		        ORDER BY
		            A.modi_tms desc, A.post_dt, A.inv_no
	            ) as ROWNUM,
	            A.inv_seq,			A.inv_no,			A.inv_tp,
				(case when A.post_dt = '' THEN '' when ISNULL(A.post_dt,'') = '' then ''
					else substring(A.post_dt,5,2)  + '-' +substring(A.post_dt,7,2) + '-' +substring(A.post_dt,1,4)END) as post_dt,
				A.trdp_cd, 		A.trdp_nm, 		A.inv_sum_amt,
				ISNULL(A.pay_amt, 0) as pay_amt,
				<!-- A.pay_amt, -->
				(case when A.last_pay_dt = '' THEN '' when ISNULL(A.last_pay_dt,'') = '' then ''
					else substring(A.last_pay_dt,5,2)  + '-' +substring(A.last_pay_dt,7,2) + '-' +substring(A.last_pay_dt,1,4)END) as last_pay_dt,
				<!-- #5859 [StarCluster-Mex] Adding Paid Column -->
				A.last_chk_no,
				A.bal_amt,
				(case when A.inv_dt = '' THEN '' when ISNULL(A.inv_dt,'') = '' then ''
					else substring(A.inv_dt,5,2)  + '-' +substring(A.inv_dt,7,2) + '-' +substring(A.inv_dt,1,4)END) as inv_dt,
				A.over_due,
				(case when A.inv_due_dt = '' THEN '' when ISNULL(A.inv_due_dt,'') = '' then ''
					else substring(A.inv_due_dt,5,2)  + '-' +substring(A.inv_due_dt,7,2) + '-' +substring(A.inv_due_dt,1,4)END) as inv_due_dt,
				A.vnd_inv_no,		A.ofc_cd,			A.inv_aply_curr_cd,
				A.rgst_usrid, 		
				CONVERT(varchar(10), A.rgst_tms, 110) + ' ' + CONVERT(varchar(5), A.rgst_tms, 108) as rgst_tms,
				A.modi_usrid,		A.modi_tms,
				CONVERT(varchar(10), A.inv_modi_tms, 110) + ' ' + CONVERT(varchar(5), A.inv_modi_tms, 108) as inv_modi_tms,	
				A.sell_buy_tp_cd, 	A.clt_cmpl_flg,
				A.jnr_no,			A.dept_cd, A.bl_cnt_cd,
				A.magam_flag,		A.inv_rmk, 'N' as check_flag
			    ,A.duty_tax_amt
			    ,A.non_taxable_amt
			    ,A.taxable_amt
			    ,A.vat_amt 
			    <!-- #6973 : [STAR MEX] G&A INVOICE LIST - WITHHOLDING AMOUNT COLUMN EXCEL DOWNLOAD -->
			    ,A.whd_amt 
	        FROM
	            (
	            SELECT 	dtl.inv_seq
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       <!-- //#3488 Accounting Multi Language 적용 -->
				 		,CASE WHEN EXISTS(
						SELECT 1
						FROM TB_SYS_OPT
						WHERE 1=1
						AND OPT_KEY = 'MULTI_LANGUAGE'
						AND OPT_VAL = 'Y'
						)
						THEN MAX(prnr.locl_nm)
						ELSE MAX(prnr.eng_nm)
						END AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       <!-- #5859 [StarCluster-Mex] Adding Paid Column -->
				       ,MAX(dtl.last_chk_no)		AS last_chk_no
				       ,MAX(dtl.bal_amt)			AS bal_amt
				       ,MAX(dtl.inv_dt)          AS inv_dt
				       <![CDATA[
				       ,CASE
				        	WHEN CASE
						            WHEN MAX(dtl.bal_amt) = 0 THEN ''
						            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        	END < 0 THEN 0
				        	ELSE CASE
						            WHEN MAX(dtl.bal_amt) = 0 THEN ''
						            ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        	END
				        END AS over_due ]]>
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.buy_inv_no)
				             ELSE MAX(dtl.inv_no)
				        END 						AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(ISNULL(mst.inv_modi_tms, mst.modi_tms))		AS inv_modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG))		AS clt_cmpl_flg
				       ,MAX(jnr_mst.jnr_no)			AS jnr_no
		   		       ,MAX(mst.Reserve_field02)   AS dept_cd
		   		       ,(SELECT x.CNT_CD FROM tb_ofc x WHERE x.OFC_CD = MAX(mst.ofc_cd)) as bl_cnt_cd
		   		       ,CASE WHEN MAX(ISNULL(BLCK.CLT_CMPL_FLG1, DTL.CLT_CMPL_FLG)) = 'Y' THEN 'Y' ELSE '' END AS magam_flag
					   ,MAX(MST.INV_RMK) AS inv_rmk
					   	,MAX(new_tab.duty_tax_amt) as duty_tax_amt
						,MAX(new_tab.non_taxable_amt) as non_taxable_amt
						,MAX(new_tab.taxable_amt) as taxable_amt
						,MAX(new_tab.vat_amt) as vat_amt
						<!-- #6973 : [STAR MEX] G&A INVOICE LIST - WITHHOLDING AMOUNT COLUMN EXCEL DOWNLOAD -->
						,MAX(new_tab.whd_amt) as whd_amt   
				 FROM TB_INV mst
				LEFT JOIN TB_INV_DTL dtl
					ON mst.INV_SEQ = dtl.INV_SEQ
				LEFT JOIN TB_FRT frt
					ON dtl.INV_SEQ = frt.INV_SEQ
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
				LEFT JOIN TB_JNR_MST jnr_mst
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'
				LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
					ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
					<!--[CSR #6020] [StarCluster-Mex] 추가 요청/확인 사항 - G&A Invoice List : Tax 필드 추가 -->
				 LEFT OUTER JOIN (
					SELECT  DTL2.INV_SEQ ,   SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
										AND fcd.FRT_CLSS_CD != 'WHD'
										AND (ISNULL(fcd.PFMC_FLG, 'N') = 'N'
										OR fcd.PFMC_FLG = '')  THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS duty_tax_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
											AND fcd.FRT_CLSS_CD != 'WHD'
											AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'										
											AND (ISNULL(frt2.VAT_RT,0) + ISNULL(frt2.VAT_RT1,0) + ISNULL(frt2.VAT_RT2,0)) = 0
										THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS non_taxable_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD != 'VAT'
											AND fcd.FRT_CLSS_CD != 'WHD'
											AND ISNULL(fcd.PFMC_FLG,'N') = 'Y'
											AND (ISNULL(frt2.VAT_RT,0) + ISNULL(frt2.VAT_RT1,0) + ISNULL(frt2.VAT_RT2,0)) > 0
										THEN  CASE frt2.SELL_BUY_TP_CD
											WHEN 'C' then frt2.CR_AMT*-1
											ELSE frt2.INV_AMT
										END
										ELSE 0
									END ) AS taxable_amt,
									
									SUM( CASE
										WHEN fcd.FRT_CLSS_CD = 'VAT' THEN frt2.INV_AMT
										ELSE 0
									END ) AS vat_amt,
									<!-- #6973 : [STAR MEX] G&A INVOICE LIST - WITHHOLDING AMOUNT COLUMN EXCEL DOWNLOAD -->
									SUM( CASE WHEN fcd.FRT_CLSS_CD = 'WHD' THEN frt2.INV_AMT ELSE 0 END ) AS whd_amt
									
									FROM TB_INV_DTL DTL2 
									
									LEFT JOIN TB_FRT frt2
									ON dtl2.INV_SEQ = frt2.INV_SEQ
									
									LEFT OUTER JOIN
									TB_FRT_CD fcd with(nolock)
										ON frt2.FRT_CD = fcd.frt_cd
										group by  DTL2.INV_SEQ
				) new_tab    ON    mst.INV_SEQ =   new_tab.INV_SEQ 
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>
					<isNotEmpty property="s_inv_strdt">
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_due_strdt">
					AND dtl.inv_due_dt		BETWEEN #s_due_strdt#  AND #s_due_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
						AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd
									WHERE trd.TRDP_CD = mst.TRDP_CD
									<!-- //#3488 Accounting Multi Language 적용 --> 
									AND(
										trd.ENG_NM LIKE #s_bill_to_nm# + '%'
										or 
										trd.LOCL_NM LIKE #s_bill_to_nm# + '%'
										
									)
								) 
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE #s_inv_no# + '%' OR dtl.inv_no LIKE #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
					<!-- #5859 [StarCluster-Mex] Adding Paid Column --> 
					<isNotEmpty property="s_last_chk_no">
						AND dtl.last_chk_no		LIKE #s_last_chk_no# + '%'
					</isNotEmpty>
				</dynamic>
				GROUP BY dtl.inv_seq
	            ) A
	    ) a1
    </select>


    <!-- InvoiceList COUNT 조회  -->
    <select id="searchExpenseList_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchExpenseList_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM (
          		SELECT 	dtl.inv_seq
					   <!-- ZOOT 215-01-08
					   ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN MAX(dtl.inv_no)
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN MAX(dtl.inv_no)
				        END 						AS inv_no
				       ,CASE WHEN MAX(mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'D' OR  MAX(mst.sell_buy_tp_cd) = 'C' THEN 'DB/CR'
				             WHEN MAX(mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END 						AS inv_tp
				       ,MAX(dtl.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(prnr.eng_nm)  			AS trdp_nm
				       ,MAX(dtl.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(dtl.pay_amt)  			AS pay_amt
				       ,MAX(dtl.last_pay_dt)		AS last_pay_dt
				       ,MAX(dtl.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(dtl.bal_amt) = 0 THEN ''
				             ELSE datediff(day, MAX(dtl.INV_DUE_DT), getdate())
				        END AS over_due
				       ,MAX(dtl.inv_due_dt)			AS inv_due_dt
				       ,MAX(dtl.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(dtl.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				       ,MAX(dtl.clt_cmpl_flg)		AS clt_cmpl_flg
				       ,MAX(jnr.jnr_no)				AS jnr_no
          		       ,MAX(mst.Reserve_field02)   AS reserve_field02 -->
				 FROM TB_INV mst
				LEFT JOIN TB_INV_DTL dtl
					ON mst.INV_SEQ = dtl.INV_SEQ
				LEFT JOIN TB_FRT frt
					ON dtl.INV_SEQ = frt.INV_SEQ
				LEFT OUTER JOIN tb_trdp prnr
		            ON prnr.trdp_cd = mst.trdp_cd AND prnr.delt_flg = 'N'
		        LEFT JOIN TB_JNR_DTL jnr
					ON dtl.INV_SEQ = jnr.INV_SEQ AND isnull(jnr.DELT_FLG,'N') != 'Y'
				LEFT JOIN TB_JNR_MST jnr_mst
					ON jnr_mst.jnr_no = jnr.jnr_no AND isnull(jnr_mst.DELT_FLG,'N') != 'Y'
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					<isNotEqual property="s_post_strdt" compareValue="">
					AND dtl.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					</isNotEqual>
					<isNotEmpty property="s_inv_strdt">
					AND dtl.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_due_strdt">
					AND dtl.inv_due_dt		BETWEEN #s_due_strdt#  AND #s_due_enddt#
					</isNotEmpty>
					<isNotEmpty property="s_sell_buy_tp_cd">
					AND mst.sell_buy_tp_cd  = #s_sell_buy_tp_cd#
					</isNotEmpty>
					AND mst.air_sea_clss_cd = 'G'
					<isNotEmpty property="s_bill_to_cd">
						AND mst.trdp_cd = #s_bill_to_cd#
					</isNotEmpty>
					<isNotEmpty property="s_bill_to_nm">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd
									WHERE trd.TRDP_CD = mst.TRDP_CD
									<!-- //#3488 Accounting Multi Language 적용 --> 
									AND(
										trd.ENG_NM LIKE #s_bill_to_nm# + '%'
										or 
										trd.LOCL_NM LIKE #s_bill_to_nm# + '%'
										
									)
								) 
					</isNotEmpty>
					<isNotEmpty property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotEmpty>
					<isNotEmpty property="s_inv_no">
						AND (dtl.buy_inv_no LIKE #s_inv_no# + '%' OR dtl.inv_no LIKE #s_inv_no# + '%')
					</isNotEmpty>
					<isNotEmpty property="s_inv_seq">
						AND dtl.inv_seq = #s_inv_seq#
					</isNotEmpty>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND dtl.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY dtl.inv_seq
			) x
    </select>

    <!--INVOICE POST DATE 수정   -->
    <update id="updateINV_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV_DTL
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>

    <!--INVOICE POST DATE 수정   -->
    <update id="updateFRT_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_FRT
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>

    <!--INVOICE POST DATE 수정   -->
    <update id="updateINV_LIST_POSTDATE" parameterClass="java.util.HashMap">
    	UPDATE TB_INV_DTL
    	   SET inv_post_dt  = #post_dt#
    	       <dynamic>
	    	       <isNotNull>
		    	        <isEqual property="post_dt_inv" compareValue="POST">
						,inv_dt  = #post_dt#
						,inv_due_dt   = CONVERT(VARCHAR
						                       ,case when #cr_term_cd# = 'A'
												     then dateadd(d, convert(int, #cr_term_dt#), #post_dt#)
												     when #cr_term_cd# = 'B'
												     then dateadd(month,1,#post_dt#)-(day(#post_dt#))
												     when #cr_term_cd# = 'C'
												     then dateadd(month,2,#post_dt#)-(day(#post_dt#))
												     when #cr_term_cd# = 'D'
												     then dateadd(d, convert(int, #cr_term_dt#), dateadd(month,1,#post_dt#)-(day(#post_dt#)))
												end
											   ,112)
					    </isEqual>
	    	       </isNotNull>
			   </dynamic>
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
		      ,INV_MODI_TMS	= getdate()
         WHERE inv_seq = #inv_seq#
    </update>

    <!-- #1820 [PATENT] Invoice List - Tax Invoice No. Tax Bill, Financial Office 항목 추가 (INVOICE TAX, TAX_BILL 수정)   -->
    <update id="updateINV_LIST_TAX" parameterClass="java.util.HashMap">
    	UPDATE TB_INV
    	   SET tax_no  		= #tax_no#
    	      ,tax_bil_flg	= #tax_bill#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
		      ,INV_MODI_TMS	= getdate()
         WHERE inv_seq = #inv_seq#
    </update>


    <!--INVOICE LIST 삭제시 FREIGHT 테이블 수정   -->
    <!-- WMS ACCOUNT LKH 2015.01.20 :: intg_bl_seq 	= #intg_bl_seq# where조건 제거 함..-->
    <!-- WMS4.0 테스트 시 재수정 2015.11.02 :: intg_bl_seq 	= #intg_bl_seq# where조건 제거 함..-->
    <!-- 3977 [JAPT] A/R vat error - duplicated VAT. -->
    <update id="deleteINV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE FRT
    	   SET FRT.INV_SEQ 		= NULL
    	      ,FRT.INV_STS_CD	= 'FI'
    	      ,FRT.INV_POST_DT  = NULL
    	      ,FRT.MODI_OFC_CD	= #proc_ofccd#
		      ,FRT.MODI_USRID	= #proc_usrid#
		      ,FRT.MODI_TMS		= GETUTCDATE()
		      ,FRT.DELT_FLG     = (CASE WHEN FRT_CD.FRT_CLSS_CD = 'VAT' THEN 'Y' ELSE FRT.DELT_FLG END)
    	 FROM TB_FRT FRT, TB_FRT_CD FRT_CD  
		WHERE FRT.FRT_CD = FRT_CD.FRT_CD
		  AND FRT.INV_SEQ = #inv_seq#
    </update>


    <!--A/P EXPENSE INVOICE LIST 삭제시 FREIGHT 테이블 수정   -->
    <update id="deleteEXPINV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE tb_frt
    	   SET inv_seq 		= null
    	      ,inv_sts_cd	= 'FI'
    	      ,inv_post_dt  = null
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
    	 WHERE inv_seq 		= #inv_seq#
    </update>


    <!--INVOICE LIST MST ��젣   -->
    <update id="deleteINVLIST_MST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV
    	   SET DELT_FLG = 'Y'
    	      ,modi_usrid		= #proc_usrid#
			  ,modi_ofc_cd		= #proc_ofccd#
			  ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#
    </update>

    <!--INVOICE LIST DTL ��젣   -->
    <update id="deleteINVLIST_DTL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_INV_DTL
    	   SET DELT_FLG = 'Y'
			    ,modi_tms			= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#
    </update>




    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다.   -->
    <update id="upateInvCurLmtAmtAdd" parameterClass="java.util.HashMap">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) + #cur_lmt_amt#
    	 WHERE TRDP_CD = #cur_trdp_cd#
    </update>


    <!-- TB_TRDP CUR_LMT_AMT 금액을 UPDATE 한다. VOID CHECK 용  -->
    <update id="upateInvCurLmtAmtDelete" parameterClass="java.util.HashMap">
    	UPDATE TB_TRDP
    	   SET CUR_LMT_AMT = isnull(cur_lmt_amt,0) - #cur_lmt_amt#
    	 WHERE TRDP_CD = #cur_trdp_cd#
    </update>



    <!-- DEBIT/CREDIT BL LIST 조회   -->
    <select id="searchRltBlList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchRltBlList  */
    	SELECT bl.BL_NO
		      ,bl.INTG_BL_SEQ
		  FROM TB_INTG_BL bl
		 WHERE bl.INTG_BL_SEQ = #f_intg_bl_seq#

		 <isEqual property="f_biz_clss_cd" compareValue="H">
		 	UNION ALL

		 	SELECT mbl.BL_NO
			      ,mbl.INTG_BL_SEQ
			  FROM TB_INTG_BL hbl
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
				ON  hbl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl mbl
				ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
			 WHERE hbl.INTG_BL_SEQ = #f_intg_bl_seq#
		 </isEqual>
		 <isEqual property="f_biz_clss_cd" compareValue="M">
		 	UNION ALL

		 	SELECT hbl.BL_NO
			      ,hbl.INTG_BL_SEQ
			  FROM TB_INTG_BL mbl
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
				ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl hbl
				ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'
			 WHERE mbl.INTG_BL_SEQ = #f_intg_bl_seq#
		 </isEqual>
    </select>


    <!-- Invoice 업무별 FrtCd  조회    -->
    <!-- WMS ACCOUNT LKH 2015.01.20 -->
    <select id="searchBlFrtCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBlFrtCdList  */
    	SELECT FRT_CD, FRT_CD_NM, FRT_CD_LOCL_NM, ISNULL(TAX_RATE, 0)  as TAX_RATE ,ISNULL(FRT_CLSS_CD, '') as FRT_CLSS_CD
		  FROM TB_FRT_CD
		 WHERE DELT_FLG  = 'N'
		   AND USE_FLG   = 'Y'
		   AND GNR_FLG  != 'Y'
		   <isEqual property="param" compareValue="AOH">
		   	   AND AEH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AOM">
		   	   AND AEM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AIH">
		   	   AND AIH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="AIM">
		   	   AND AIM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SOH">
		   	   AND OEH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SOM">
		   	   AND OEM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SIH">
		   	   AND OIH_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="SIM">
		   	   AND OIM_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="param" compareValue="WMS">
		   	   AND WMS_FLG   = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AR">
		   	   AND AR_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AP">
		   	   AND AP_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="DC">
		   	   AND DC_FLG    = 'Y'
		   </isEqual>
		   <!-- #2977 [YMI AWS#2] wrong order Freight code on invoice -->
		   order by CASE WHEN ORDER_SEQ IS NOT NULL THEN 0 ELSE 1 END, ORDER_SEQ, FRT_CD
    </select>



    <!-- Invoice EXPENSE FrtCd  조회    -->
    <select id="searchExpFrtCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchExpFrtCdList  */
    	SELECT FRT_CD, FRT_CD_NM, FRT_CD_LOCL_NM, ISNULL(TAX_RATE, 0)  as TAX_RATE ,ISNULL(FRT_CLSS_CD, '') as FRT_CLSS_CD
		  FROM TB_FRT_CD
		 WHERE DELT_FLG  = 'N'
		   AND USE_FLG   = 'Y'
		   AND GNR_FLG   = 'Y'
		   <isEqual property="s_inv_flg" compareValue="AP">
		   	   AND AP_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AR">
		   	   AND AR_FLG    = 'Y'
		   </isEqual>
		 order by CASE WHEN ORDER_SEQ IS NOT NULL THEN 0 ELSE 1 END, ORDER_SEQ, FRT_CD  
    </select>

    <!-- Invoice VAT Code LIST 조회    -->
    <select id="searchVatCdList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchVatCdList  */
    	SELECT frt_cd as vat_cd, tax_rate
		  FROM TB_FRT_CD
		 WHERE FRT_CLSS_CD = 'VAT'
		   AND USE_FLG   = 'Y'
		   AND DELT_FLG  = 'N'
		   <isEqual property="gnr_flg" compareValue="Y">
		   	   AND GNR_FLG   = 'Y'
		   </isEqual>
		   <isNotEqual property="gnr_flg" compareValue="Y">
		   	   AND GNR_FLG   != 'Y'
		   </isNotEqual>
		   <isEqual property="s_inv_flg" compareValue="AP">
		   	   AND AP_FLG    = 'Y'
		   </isEqual>
		   <isEqual property="s_inv_flg" compareValue="AR">
		   	   AND AR_FLG    = 'Y'
		   </isEqual>
    </select>

    <!-- Invoice 업무별 FrtCd  조회    -->
    <select id="getInvFrtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvFrtcd  */
        SELECT 	frt_cd
               ,frt_cd_nm
               ,frt_cd_locl_nm
               ,ISNULL(tax_rate, 0) as tax_rate
               ,ISNULL(tax_rate1, 0) as tax_rate1
               ,ISNULL(tax_rate2, 0) as tax_rate2
		  FROM  tb_frt_cd
		 WHERE  delt_flg = 'N'
		   AND  GNR_FLG != 'Y'
		   AND  frt_cd = #frt_cd#
    </select>

    <!-- Invoice FrtCd  조회    -->
    <!-- #20645 : [BINEX]G/L Validation jsjang 2013.09.10 -->
    <select id="getInvFrtBillingcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvFrtBillingcd  */
        SELECT 	FRT.frt_cd
               ,FRT.frt_cd_nm
               ,FRT.frt_cd_locl_nm
               ,ISNULL(FRT.tax_rate, 0) as tax_rate
               ,ISNULL(FRT.tax_rate1, 0) as tax_rate1
               ,ISNULL(FRT.tax_rate2, 0) as tax_rate2
               ,ISNULL(FRT.whld_tax_rate, 0) as whld_tax_rate
			   ,gl_cd_rev
			   ,gl_cd_cost
			   ,gl_cd_prnr
			   ,FRT.tax_flg
			   ,gl_cd_prnr2
          <isEqual property="air_sea_clss_cd" compareValue="S">
	          <isEqual property="frt_shp_mod" compareValue="FCL">
	          ,fcl_dflt_aply_ut_cd as unit
	          </isEqual>
	          <isNotEqual property="frt_shp_mod" compareValue="FCL">
	          ,lcl_dflt_aply_ut_cd as unit
	          </isNotEqual>
          </isEqual>
          <isEqual property="air_sea_clss_cd" compareValue="A">
          ,air_dflt_aply_ut_cd as unit
          </isEqual>
          <isEmpty property="air_sea_clss_cd" >
          ,'' as unit
          </isEmpty>
          <!-- #2813 [Genesis] after v450, No autofill for freight code -->
          , (case when #tabStr# = '' then sell_rat_amt
                  when #tabStr# = 'b_' then buy_rat_amt
				  <!-- OFVFOUR-7601 [BNX] Adding new function onto A/R and DC Entry screen -->
                  when #tabStr# = 'dc_' then dc_rat_amt
                  else 0 end) as sell_buy_rate
		  FROM  tb_frt_cd FRT
		 <isNotEmpty property="frt_ofc_cd">
		 LEFT OUTER JOIN TB_OFC_FRT_CD OFCFRT
 				ON FRT.FRT_CD = OFCFRT.FRT_CD
 				AND OFCFRT.OFC_CD = #frt_ofc_cd#
 		 </isNotEmpty>
		 WHERE  FRT.delt_flg = 'N'
		   AND  GNR_FLG != 'Y'
		   AND  FRT.frt_cd = #frt_cd#
    </select>

    <!-- VAT CD 조회(Default Set)   -->
	<select id="getInvFrtVatcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
	   SELECT
	        top 1 frt_cd as vat_rt_cd, tax_rate as vat_rt_tax_rate
	    FROM
	        tb_frt_cd
	    WHERE
	        frt_clss_cd = 'VAT'
	        AND use_flg   = 'Y'
	        AND delt_flg  = 'N'
	        <isEqual property="gna_flg" compareValue="Y">
	        AND gnr_flg  = 'Y'
	        </isEqual>
		   <isNotEqual property="gna_flg" compareValue="Y">
		   	   AND gnr_flg   != 'Y'
		   </isNotEqual>

		   <isNotEmpty property="tax_rate">
			AND tax_rate = #tax_rate#
		   </isNotEmpty>

		   <isNotEmpty property="srt_seq">
			AND srt_seq = #srt_seq#
		   </isNotEmpty>

    </select>

    <!-- VAT CD 조회(Default Set)   -->
	<select id="getTaxRateFrVatcd" parameterClass="java.util.HashMap" resultClass="String">
	   SELECT
	        <!-- tax_rate as vat_rt_tax_rate -->
	        tax_rate + '^@@^' + tax_flg as vat_rt_tax_rate
	    FROM
	        tb_frt_cd
	    WHERE
	        frt_clss_cd = 'VAT'
	        AND use_flg   = 'Y'
	        AND delt_flg  = 'N'
			AND frt_cd = #vat_rt_cd#
    </select>

    <!-- Invoice FrtCd  조회    -->
    <select id="getInvGnrFrtcd" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getInvGnrFrtcd  */
        SELECT 	frt_cd
               ,frt_cd_nm
               ,tax_rate
               <isEqual property="sell_buy_tp_cd" compareValue="S">
				,gl_cd_rev as gl_cd
			   </isEqual>
			   <isEqual property="sell_buy_tp_cd" compareValue="B">
				,gl_cd_cost as gl_cd
			   </isEqual>
			   , tax_flg
			   , tax_rate1
			   , tax_rate2
			   , frt_cd_locl_nm
		  FROM  tb_frt_cd
		 WHERE  delt_flg = 'N'
		   AND  GNR_FLG  = 'Y'
		   AND  frt_cd = #frt_cd#
		<isEqual property="sell_buy_tp_cd" compareValue="S">
		   AND  ar_flg = 'Y'
		</isEqual>
		<isEqual property="sell_buy_tp_cd" compareValue="B">
		   AND  ap_flg = 'Y'
		</isEqual>
    </select>



    <!-- CR/DB INVOICE Freight 목록 조회. AUTO 용   -->
    <select id="searchFreightAutoOut" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOut  */
    	SELECT hbl.BL_NO
		      ,hbl.INTG_BL_SEQ
		      ,fr.frt_seq
		      ,fr.sell_buy_tp_cd
		      ,fr.rat_curr_cd
		      ,fr.frt_cd
		      ,  CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,
		  		 isnull(fr.cr_amt,0)             AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 '' as inv_rmk,
				 fr.intg_bl_seq_2
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
		LEFT OUTER JOIN tb_frt_cd fd
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N'
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD IN ('C', 'D')
		   AND (fr.INV_SEQ IS NULL OR fr.INV_SEQ = '')

    </select>

    <!-- CR/DB INVOICE Freight 목록 조회. AUTO 용   -->
    <select id="searchFreightAutoIn" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoIn  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq
		        ,CASE WHEN fr.sell_buy_tp_cd = 'S' THEN 'C'
					ELSE 'D'
				END AS sell_buy_tp_cd
		        ,fr.rat_curr_cd
		        ,fr.frt_cd
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 0                  			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,
		  		 isnull(fr.inv_amt,0)            AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 '' as inv_rmk,
				 fr.intg_bl_seq_2
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
		LEFT OUTER JOIN tb_frt_cd fd
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N'
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.RESERVE_FIELD01  = 'Y'
    </select>


    <!-- CR/DB INVOICE Freight 목록 조회. AUTO O/F 용   -->
    <select id="searchFreightAutoOFOut" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOF  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq
		        ,'D'  as sell_buy_tp_cd
		        ,fr.rat_curr_cd
		        ,fr.frt_cd
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,
                 'CC' as frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 isnull(fr.inv_amt,  0)			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,
		  		 isnull(fr.cr_amt,0)             AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
				 fd.frt_clss_cd
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
		LEFT OUTER JOIN tb_frt_cd fd
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N'
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD   = 'C'
		   AND fr.FRT_TERM_CD      = 'CC'
		   AND mbl.AIR_SEA_CLSS_CD = 'S'
		   AND fd.FRT_CLSS_CD      = 'FC'
    </select>

    <!-- CR/DB INVOICE Freight 목록 조회. AUTO O/F 용   -->
    <select id="searchFreightAutoOFIn" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchFreightAutoOFIn  */
    	SELECT   hbl.BL_NO
		        ,hbl.INTG_BL_SEQ
		        ,fr.frt_seq
		        ,'C' as sell_buy_tp_cd
		        ,fr.rat_curr_cd
		        ,fr.frt_cd
		        ,CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,				fr.agent_ru,
		  		 fr.inv_curr_cd,     fr.inv_xcrt,                fr.inv_xcrt_dt,
		  		 0                  			 AS debit_amt,
		  		 isnull(fr.agent_amt,0)  		 AS agent_amt,
		  		 isnull(fr.inv_amt,0)            AS credit_amt,
		  		 fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 CASE WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN hbl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
				 END AS agent_ps_code,
				 '' as inv_rmk,
				 fr.intg_bl_seq_2,
				 fd.frt_clss_cd
		  FROM TB_INTG_BL mbl
		LEFT OUTER JOIN tb_intg_bl_rlt rlt
			ON  mbl.intg_bl_seq = rlt.rlt_intg_bl_seq AND rlt.delt_flg = 'N'
		LEFT OUTER JOIN tb_intg_bl hbl
			ON  rlt.intg_bl_seq = hbl.intg_bl_seq AND hbl.biz_clss_cd = 'H' AND mbl.delt_flg = 'N'
		LEFT OUTER JOIN TB_FRT fr
			ON  fr.INTG_BL_SEQ = hbl.INTG_BL_SEQ AND fr.DELT_FLG = 'N'
		LEFT OUTER JOIN  TB_ADD_INFO_BND bnd
             ON hbl.INTG_BL_SEQ = bnd.INTG_BL_SEQ
		LEFT OUTER JOIN tb_trdp tp
		    ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
		LEFT OUTER JOIN tb_frt_cd fd
		    ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N'
	    LEFT OUTER JOIN  tb_com_cd_dtl cdl
            ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
		 WHERE 1 = 1
		   AND mbl.INTG_BL_SEQ     = #f_intg_bl_seq#
		   AND fr.SELL_BUY_TP_CD   = 'S'
		   AND fd.FRT_CLSS_CD      = 'FC'
		   AND fr.RESERVE_FIELD01  = 'Y'
    </select>

    <!-- FREIGHT POST DATE UPDATE   -->
    <update id="upateInvFrtPostDt" parameterClass="java.util.HashMap">
    	UPDATE tb_frt
    	   SET  inv_post_dt	  = #inv_post_dt#
    	       ,modi_ofc_cd	  = #proc_ofccd#
		       ,modi_usrid	  = #proc_usrid#
		       ,modi_tms	  = GETUTCDATE()
    	 WHERE inv_seq 		  = #inv_seq#
    </update>



    <!-- FREIGHT POST DATE UPDATE A/P EXPENSE OTHER BRANCH  -->
    <update id="upateInvFrtPostDtAPOB" parameterClass="java.util.HashMap">
    	UPDATE tb_frt
    	   SET  inv_post_dt	  	= #inv_post_dt#
    	       ,trdp_cd			= #trdp_cd#
    	       ,rat_curr_cd		= #curr_cd#
    	       ,inv_curr_cd		= #curr_cd#
    	       ,modi_ofc_cd	  = #proc_ofccd#
		       ,modi_usrid	  = #proc_usrid#
		       ,modi_tms	  = GETUTCDATE()
    	 WHERE reserve_field03 	= #inv_seq#
    </update>




    <!-- INVOICE COMBINE   -->
    <!-- Freight List를 조회함   -->
    <select id="selectNonInvFrtList" parameterClass="HashMap" resultClass="com.clt.apps.fis.see.frt.freight.dto.FrtVO">
		/*  AccInvInvoiceSQL.xml > selectNonInvFrtList  */
			SELECT  inv.inv_seq,      idt.inv_no,                idt.inv_aply_curr_cd AS inv_curr_cd,
					idt.inv_amt,      idt.inv_vat_amt,           idt.inv_sum_amt,
					inv.trdp_cd,      trd.locl_nm AS trdp_nm,
					idt.frgn_curr_cd, idt.frgn_sum_amt,
					idt.inv_post_dt,  idt.buy_inv_no,
					idt.inv_sum_amt-(idt.frgn_sum_amt*idt.inv_aply_xcrt) AS locl_amt,
					usr.eng_usr_nm AS proc_usrnm,   dpt.cd_nm AS proc_dept_nm,
					CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
	        		     ELSE mbl.bl_no
	        		END AS mbl_no,
	        		CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
	        		     ELSE bl.bl_no
	        		end AS hbl_no,
	        		bl.ref_ofc_cd

			FROM(
					SELECT  inv.inv_seq,    inv.trdp_cd,     dtl.inv_no,    max(frt.intg_bl_seq)  AS hbl_bl_seq
					  FROM  tb_inv inv
					  JOIN  tb_inv_dtl dtl
						ON  inv.inv_seq = dtl.inv_seq
					  JOIN  tb_frt frt
						ON  inv.inv_seq = frt.inv_seq
					 WHERE  inv.cmb_inv_seq IS NULL
					   AND  dtl.inv_sts_cd = 'IS'
		               AND  inv.air_sea_clss_cd = #f_air_sea_clss_cd#
					   AND  dtl.inv_dt BETWEEN #f_inv_dt_bgn# AND #f_inv_dt_end#
                       AND  inv.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
				<isNotEmpty property="f_trdp_cd">
		               AND  inv.trdp_cd         = #f_trdp_cd#
				</isNotEmpty>
				<isNotEmpty property="f_ofc_cd">
                       AND  inv.modi_ofc_cd     = #f_ofc_cd#
				</isNotEmpty>
					   AND inv.tax_bil_flg = 'Y'
				  GROUP BY  inv.inv_seq, dtl.inv_no, inv.trdp_cd
			 )inv
			JOIN  tb_inv_dtl idt
			  ON  inv.inv_seq = idt.inv_seq
			JOIN  tb_intg_bl bl
			  ON  inv.hbl_bl_seq   = bl.intg_bl_seq
			LEFT OUTER JOIN tb_intg_bl_rlt rlt
              ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_intg_bl mbl
              ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
			JOIN  tb_add_info_bnd bnd
			  ON  bl.intg_bl_seq = bnd.intg_bl_seq
			JOIN  tb_usr usr
			  ON  usr.usr_tp = 'I' AND idt.modi_usrid = usr.usrid
			JOIN  tb_com_cd_dtl dpt
			  ON  dpt.cd_val = usr.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'
		    JOIN  tb_trdp trd
		      ON  inv.trdp_cd = trd.trdp_cd

		   WHERE  1=1
		<isNotEmpty property="f_bnd_clss_cd">
		     AND  bnd.bnd_clss_cd= #f_bnd_clss_cd#
		</isNotEmpty>
        <isNotEmpty property="f_bl_no">
			 AND  hbl.bl_no      = #f_bl_no#
        </isNotEmpty>
        <isNotEmpty property="f_dpt_cd">
		     AND  usr.dept_cd    = #f_dpt_cd#
		</isNotEmpty>
        <isNotEmpty property="f_pic_id">
		     AND  idt.modi_usrid = #f_pic_id#
		</isNotEmpty>
		ORDER BY idt.inv_no ASC
    </select>



    <!--INV_DTL에서 Foreight Currency를 뺀 INV_AMT를 조회함  -->
    <select id="selectSUM_FRGN_INV_AMT" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectSUM_FRGN_INV_AMT  */
        SELECT inv.inv_amt, inv.inv_vat_amt, inv.inv_sum_amt,
               inv.frgn_amt, inv.frgn_vat_amt, (inv.frgn_amt+inv.frgn_vat_amt) AS frgn_sum_amt,
               inv.inv_krw_amt
          FROM(
                SELECT  sm.frt_amt AS inv_amt,                 sm.frt_vat_amt AS inv_vat_amt,   (sm.frt_amt+sm.frt_vat_amt) AS inv_sum_amt,
                        (iv.tot_amt-sm.frt_amt) AS frgn_amt,   (iv.tot_vat_amt-sm.frt_vat_amt) AS frgn_vat_amt,
                        iv.inv_krw_amt
                 FROM(
                     SELECT  ISNULL(SUM(frt.inv_amt), 0) AS frt_amt, ISNULL(SUM(frt.inv_vat_amt), 0) AS frt_vat_amt
                       FROM(
                          SELECT  inv_seq,  idt.inv_aply_curr_cd, idt.inv_amt, idt.inv_vat_amt
                            FROM  tb_inv_dtl idt
                           WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>)
                     )idt
                  JOIN  tb_frt frt
                    ON  idt.inv_seq = frt.inv_seq AND frt.rat_curr_cd = idt.inv_aply_curr_cd AND frt.delt_flg = 'N'
                )sm,
                (     SELECT  ISNULL(SUM(idt.inv_amt), 0) AS tot_amt, ISNULL(SUM(idt.inv_vat_amt), 0) AS tot_vat_amt,
                              ISNULL(SUM(idt.inv_krw_amt), 0) AS inv_krw_amt
                        FROM  tb_inv_dtl idt
                       WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>)
                ) iv
         )inv
    </select>


    <!--Foreight Amount합을 조회함   -->
    <select id="selectSUM_FRGN_AMT" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectSUM_FRGN_AMT  */
		SELECT  SUM(idt.frgn_amt) AS frgn_amt, SUM(idt.frgn_vat_amt) AS frgn_vat_amt, idt.frgn_curr_cd
		  FROM  tb_inv_dtl idt
		 WHERE  idt.inv_seq IN (<iterate conjunction=",">#[]#</iterate>)
		   AND  idt.frgn_curr_cd IS NOT NULL
	  GROUP BY  idt.frgn_curr_cd
    </select>


    <!-- 통합인보이스 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_STS" parameterClass="HashMap">
        UPDATE  tb_cmb_inv
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,
                modi_ofc_cd  = #proc_ofccd#,
                modi_tms     = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq#
    </update>

	<!-- 인보이스 헤더 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_HEAD_STS" parameterClass="HashMap">
        UPDATE  tb_inv
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,
                modi_ofc_cd  = #proc_ofccd#,
                modi_tms     = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq#
    </update>

    <!-- 인보이스 헤더 테이블의 상태를 변환한다   -->
    <update id="updateCMB_INV_DTL_STS" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_inv_dtl
           SET  inv_sts_cd   = #inv_sts_cd#,
                modi_usrid   = #proc_usrid#,
                modi_ofc_cd  = #proc_ofccd#,
                modi_tms     = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq#
    </update>

    <update id ="updateCMB_FRT_STS" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE tb_frt
        SET      inv_sts_cd     = #inv_sts_cd#,
                 modi_usrid     = #proc_usrid#,
                 modi_ofc_cd    = #proc_ofccd#,
                 modi_tms       = GETUTCDATE()
        WHERE inv_seq = #inv_seq#
    </update>






    <!-- Combined Invoice 추가  -->
	<!-- Combined Invoice PK생성   -->
    <select id="selectCMB_INV_SEQ_MAX" parameterClass="java.util.HashMap" resultClass="String">
        SELECT  isnull(max(cmb_inv_seq)+1, 1)
          FROM  tb_cmb_inv
    </select>


	<!--Combined Invoice Number 생성   -->
    <select id="selectCmbInvDtlMax" resultClass="String" parameterClass="String">
		/*  AccInvInvoiceSQL.xml > selectCmbInvDtlMax  */
        SELECT  MAX(maxInv) as maxInv
        FROM    (
                SELECT  CASE    WHEN MAX(SUBSTRING(inv_no,8,4)) = SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)
                                THEN '$flg$'+SUBSTRING(CAST(SUBSTRING(inv_no,8,8)+100000001 as VARCHAR), 2, 8)
                        ELSE    '$flg$'+ SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)+'0001' END
                        AS maxInv
                FROM    tb_cmb_inv
                WHERE   SUBSTRING(inv_no, 1,11) = '$flg$'+SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)
                GROUP BY inv_no
                union all
                select '$flg$'+ SUBSTRING(CONVERT(VARCHAR, getdate(),12),1,4)+'0001' as maxInv
         ) a
    </select>

	<!-- Combined Invoice Header 정보 생성   -->
    <insert id="insertCMB_INV_INFO" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		INSERT INTO tb_cmb_inv(
            cmb_inv_seq,        frt_ask_clss_cd,       sell_buy_tp_cd,
            inv_no,             inv_sts_cd,            trdp_cd,
            air_sea_clss_cd,    bnd_clss_cd,           tax_bil_flg,
			inv_dt,             clt_due_dt,            inv_iss_dt,           inv_fm_dt,
		    inv_to_dt,          inv_rmk,
            buy_inv_no,         slip_no,
            inv_aply_curr_cd,   inv_xcrt_dt,           inv_aply_xcrt,
            inv_amt,            inv_krw_amt,           inv_sum_amt,          inv_vat_amt,
            bal_amt,            bal_vat_amt,
            rgst_usrid,         rgst_ofc_cd,           rgst_tms,             ofc_cd,       dept_cd,
            modi_usrid,         modi_ofc_cd,           modi_tms,             delt_flg
        )VALUES(
            #cmb_inv_seq#,      #frt_ask_clss_cd#,     #sell_buy_tp_cd#,
            #inv_no#,           #inv_sts_cd#,          #trdp_cd#,
            #air_sea_clss_cd#,  #bnd_clss_cd#,         #tax_bil_flg#,
		    #inv_dt#,           #clt_due_dt#,          CONVERT(VARCHAR, getDate(), 112),  CONVERT(VARCHAR, getDate(), 112),
		    #inv_to_dt#,        #inv_rmk#,
            #buy_inv_no#,       #slip_no#,
            #inv_aply_curr_cd#, #inv_xcrt_dt#,         1,
            #inv_amt#,          #inv_krw_amt#,         #inv_sum_amt#,       #inv_vat_amt#,
            #bal_amt#,          #bal_vat_amt#,
            #proc_usrid#,       #proc_ofccd#,          getdate(),            #ofc_cd#,    #proc_dept_cd#,
            #proc_usrid#,       #proc_ofccd#,          GETUTCDATE(),            'N'
        )
	</insert>

	<!-- Combined Invoice를 업데이트함   -->
    <update id="updateCMB_INV_INFO" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_cmb_inv
           SET  tax_bil_flg      = #tax_bil_flg#,        inv_dt     = #inv_dt#,           clt_due_dt = #clt_due_dt#,
                inv_rmk          = #inv_rmk#,            buy_inv_no = #buy_inv_no#,       slip_no    = #slip_no#,
                inv_aply_curr_cd = #inv_aply_curr_cd#,   inv_xcrt_dt= #inv_xcrt_dt#,      inv_aply_xcrt= #inv_aply_xcrt#,
                inv_amt          = #inv_amt#,            inv_krw_amt= #inv_krw_amt#,      inv_sum_amt  = #inv_sum_amt#,      inv_vat_amt = #inv_vat_amt#,
                bal_amt          = #bal_amt#,            bal_vat_amt= #bal_vat_amt#,
				dept_cd     	 = #proc_dept_cd#,
                modi_usrid  	 = #proc_usrid#,         modi_ofc_cd = #proc_ofccd#,      modi_tms = GETUTCDATE()
         WHERE  cmb_inv_seq 	 = #cmb_inv_seq#
    </update>

	<!--Combined Invoice 삭제   -->
	<delete id="deleteCMB_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		DELETE FROM tb_cmb_inv
		      WHERE cmb_inv_seq = #cmb_inv_seq#
	</delete>

	<!-- 통합인보이스 내용조회   -->
	<select id="selectCMB_INV_READ" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_INV_READ  */
        SELECT  cmb.cmb_inv_seq,        cmb.frt_ask_clss_cd,       cmb.sell_buy_tp_cd,       cdt.cd_nm AS sell_buy_tp_nm,
                cmb.inv_no,             cmb.tax_bil_flg,
                cmb.inv_sts_cd,         cst.cd_nm   AS inv_sts_nm,
                cmb.trdp_cd,            trd.locl_nm AS trdp_nm,
                cmb.inv_dt,             cmb.clt_due_dt,            cmb.inv_iss_dt,           cmb.inv_fm_dt,
                cmb.inv_to_dt,          cmb.inv_rmk,
                cmb.buy_inv_no,         cmb.slip_no,
                cmb.inv_xcrt_dt,        cmb.inv_aply_xcrt,
                cmb.inv_aply_curr_cd,   cmb.inv_amt,               cmb.inv_vat_amt,          cmb.inv_sum_amt,         cmb.inv_krw_amt,
                cmb.frgn_curr_cd,       cmb.frgn_amt,              cmb.frgn_vat_amt,         cmb.frgn_sum_amt,
		        (cmb.inv_amt-cmb.frgn_amt)         AS org_amt,     (cmb.inv_vat_amt-cmb.frgn_vat_amt) AS org_vat_amt,
		        (cmb.inv_sum_amt-cmb.frgn_sum_amt) AS org_sum_amt,
		        cmb.modi_usrid AS proc_usrid,     dpt.cd_nm AS proc_dept_nm,
		        cmb.ofc_cd

          FROM  tb_cmb_inv cmb
          JOIN  tb_trdp trd
            ON  cmb.trdp_cd = trd.trdp_cd

          JOIN  tb_com_cd_dtl cdt
            ON  cmb.sell_buy_tp_cd = cdt.cd_val AND cdt.com_cd = 'C030'

          JOIN  tb_com_cd_dtl cst
            ON  cmb.inv_sts_cd     = cst.cd_val AND  cst.com_cd = 'C048'

          JOIN  tb_com_cd_dtl dpt
            ON  dpt.cd_val = cmb.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'

		 WHERE  cmb.inv_no = #f_inv_no#
	</select>

	<!-- Combined Invoice에 해당하는 Invoice 정보를 조회함   -->
	<select id="selectCMB_SUB_INV_LIST" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_SUB_INV_LIST  */
		 SELECT  idt.inv_seq,        idt.inv_no,          idt.inv_aply_curr_cd,   idt.inv_amt,   idt.inv_vat_amt,   idt.inv_sum_amt,
		         idt.frgn_curr_cd,   idt.frgn_sum_amt,
                 idt.inv_sum_amt-(idt.frgn_sum_amt*idt.inv_aply_xcrt) AS locl_amt
               , idt.inv_dt, idt.buy_inv_no, TMP.ET_DT_TM, TMP.BL_NO, TMP.MBL_NO
               , inv.ofc_cd
               , DEPT.CD_NM + ' / ' + USR.USRID AS DEPT_NM
		   FROM  tb_inv inv
		   JOIN  tb_inv_dtl idt
		 	 ON  inv.inv_seq = idt.inv_seq
LEFT OUTER JOIN (
				  SELECT  FRT.INV_SEQ
						, CASE WHEN FRT.BND_CLSS_CD = 'O'
							   THEN MAX(BL.ETD_DT_TM)
							   ELSE MAX(BL.ETA_DT_TM)
						   END AS ET_DT_TM
						, MAX(BL.BL_NO) AS BL_NO
						, MAX(MBL.BL_NO) AS MBL_NO
					FROM  TB_FRT FRT
		 LEFT OUTER JOIN  TB_INTG_BL BL ON FRT.INTG_BL_SEQ = BL.INTG_BL_SEQ AND BL.DELT_FLG = 'N'
		 LEFT OUTER JOIN  TB_INTG_BL_RLT RLT ON BL.INTG_BL_SEQ = RLT.INTG_BL_SEQ AND RLT.DELT_FLG = 'N'
		 LEFT OUTER JOIN  TB_INTG_BL MBL ON RLT.RLT_INTG_BL_SEQ = MBL.INTG_BL_SEQ AND MBL.DELT_FLG = 'N'
				   WHERE  FRT.DELT_FLG = 'N'
				GROUP BY  FRT.INV_SEQ, FRT.BND_CLSS_CD
				) TMP ON inv.INV_SEQ = TMP.INV_SEQ
LEFT OUTER JOIN  TB_USR USR ON USR.USR_TP = 'I' AND idt.RGST_USRID = USR.USRID
LEFT OUTER JOIN  TB_COM_CD_DTL DEPT ON DEPT.COM_CD = 'C056' AND USR.DEPT_CD = DEPT.CD_VAL
		 WHERE  inv.cmb_inv_seq = #cmb_inv_seq#
		ORDER BY inv_no ASC
	</select>

    <!--하위 Invoice인 경우 통합 Invoice의 키값을 업데이트함  -->
    <update id="updateINV_REL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvRltVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = #cmb_inv_seq#,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq#
    </update>

	<!-- 하위 Invoice 목록에서 invoice를 삭제함   -->
    <update id="deleteINV_REL" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvRltVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = NULL,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  inv_seq      = #inv_seq#
    </update>






	<!-- 등록된 Combined Invoice List를 조회함  -->
    <select id="selectCMB_INV_LIST" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
		/*  AccInvInvoiceSQL.xml > selectCMB_INV_LIST  */
        SELECT  cmb.cmb_inv_seq,        cmb.frt_ask_clss_cd,       cmb.sell_buy_tp_cd,
                cmb.inv_no,             cmb.inv_sts_cd,            cst.cd_nm AS inv_sts_nm,
                cmb.trdp_cd,            trd.locl_nm AS trdp_nm,
                cmb.air_sea_clss_cd,    cmb.bnd_clss_cd,           cmb.tax_bil_flg,
                cmb.inv_dt,             cmb.clt_due_dt,            cmb.inv_iss_dt,           cmb.inv_fm_dt,
                cmb.inv_to_dt,          cmb.inv_rmk,
                cmb.buy_inv_no,         cmb.slip_no,
                cmb.inv_aply_curr_cd,   cmb.inv_xcrt_dt,           cmb.inv_aply_xcrt,
                cmb.inv_amt,            cmb.inv_krw_amt,           cmb.inv_sum_amt,          cmb.inv_vat_amt,
                cmb.frgn_curr_cd,       cmb.frgn_amt,              cmb.frgn_vat_amt,         cmb.frgn_sum_amt,
                cmb.pay_amt,            cmb.pay_vat_amt,           cmb.pay_frgn_amt,         cmb.pay_frgn_vat_amt,
                cmb.bal_amt,            cmb.bal_vat_amt,           cmb.bal_frgn_amt,         cmb.bal_frgn_vat_amt,
				cmb.modi_usrid AS proc_usrid,
				cmb.ofc_cd,
				dpt.cd_nm AS proc_dept_nm,
				(SELECT SUM(INV_SUM_AMT)
				   FROM TB_FRT F
				       ,TB_FRT_CD FC
				       ,TB_INV I
				  WHERE F.FRT_CD = FC.FRT_CD
				    AND F.INV_SEQ = I.INV_SEQ
				    AND I.CMB_INV_SEQ = cmb.CMB_INV_SEQ
				    AND FC.FRT_CLSS_CD = 'WAF'
				 ) AS wfg_amt
          FROM  tb_cmb_inv cmb
          JOIN  tb_trdp trd
            ON  cmb.trdp_cd = trd.trdp_cd
          JOIN  tb_com_cd_dtl cst
            ON  cmb.inv_sts_cd     = cst.cd_val AND  cst.com_cd = 'C048'
		  JOIN  tb_com_cd_dtl dpt
		    ON  dpt.cd_val = cmb.dept_cd  AND  dpt.com_cd = 'C056'  AND  dpt.delt_flg = 'N'
		 WHERE
			<isEqual property="f_date_cd" compareValue="B">
				cmb.inv_dt       BETWEEN  #f_sel_strdt# AND #f_sel_enddt#
			</isEqual>
			<isNotEqual property="f_date_cd" compareValue="B">
				cmb.clt_due_dt   BETWEEN  #f_sel_strdt# AND #f_sel_enddt#
			</isNotEqual>
			<isNotEmpty property="f_slip_yn">
				<isEqual property="f_slip_yn" compareValue="Y">
					AND  cmb.slip_no IS NOT NULL
				</isEqual>
				<isEqual property="f_slip_yn" compareValue="N">
					AND  cmb.slip_no IS NULL
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="f_air_sea_clss_cd">
				AND  cmb.air_sea_clss_cd = #f_air_sea_clss_cd#
			</isNotEmpty>
			<isNotEmpty property="f_sell_buy_tp_cd">
				AND  cmb.sell_buy_tp_cd  = #f_sell_buy_tp_cd#
			</isNotEmpty>
			<isNotEmpty property="f_inv_sts_cd">
				AND  cmb.inv_sts_cd = #f_inv_sts_cd#
			</isNotEmpty>
			<isNotEmpty property="f_inv_no">
			   AND  cmb.inv_no = #f_inv_no#
			</isNotEmpty>
			<isNotEmpty property="f_trdp_cd">
			   AND  cmb.trdp_cd= #f_trdp_cd#
			</isNotEmpty>
			<isNotEmpty property="f_dpt_cd">
			   AND  cmb.dept_cd = #f_dpt_cd#
			</isNotEmpty>
			<isNotEmpty property="f_pic_id">
			   AND  cmb.modi_usrid = #f_pic_id#
			</isNotEmpty>
    </select>

	<!-- Combined Invoice 정보를 회계쪽(KICOM) 과 인터페이스    -->
    <procedure id="insertCMB_INVOICE_INTF" parameterClass="HashMap">
         { CALL SP_T_INVOICE_INTERFACE(#inv_no#, #sell_buy_tp_cd#) }
    </procedure>



    <!-- Freight 테이블에 Invoice 정보를 초기화함   -->
    <update id="updateINV_REL_RESET" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.CmbInvVO">
        UPDATE  tb_inv
           SET  cmb_inv_seq  = null,
                modi_usrid   = #proc_usrid#,      modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE()
         WHERE  cmb_inv_seq  = #cmb_inv_seq#
    </update>

<!-- Combined Invoice 추가 끝  -->






	<!-- PAID HISTORY   -->
    <select id="searchPaidHistory" parameterClass="java.util.HashMap" resultClass="PaidVO">
		/*  AccInvInvoiceSQL.xml > searchPaidHistory  */
        SELECT mst.TRDP_CD AS BILL_TO_CD
		      ,(SELECT LOCL_NM FROM TB_TRDP WHERE TRDP_CD = mst.TRDP_CD) AS BILL_TO_NM
		      ,inv_dtl.INV_SUM_AMT
		      ,inv_dtl.PAY_AMT
		      ,inv_dtl.BAL_AMT
		      ,mst.POST_DT
		      ,dtl.CURR_CD
		      ,mst.CLR_DT
		      ,mst.BANK_SEQ
		      ,(SELECT BANK_NM FROM TB_BANK WHERE BANK_SEQ = mst.BANK_SEQ) AS BANK_NM
		      ,mst.VOID_DT
		      ,mst.CHK_NO
		      ,dtl.TTL_PAY_AMT
		      ,mst.RMK
		      ,mst.JNR_TP
		  FROM TB_JNR_DTL dtl
		      ,TB_JNR_MST mst
		      ,TB_INV_DTL inv_dtl
		 WHERE 1 = 1
		   AND dtl.JNR_NO   	= mst.JNR_NO
		   AND dtl.INV_SEQ 		= inv_dtl.INV_SEQ
		   AND mst.DELT_FLG 	= 'N'
		   AND dtl.DELT_FLG 	= 'N'
		   AND inv_dtl.DELT_FLG = 'N'
		   AND dtl.INV_SEQ 	    = #f_inv_seq#
    </select>





    <select id="selectPgmBtnRole" parameterClass="java.util.HashMap" resultClass="com.clt.apps.opusbase.system.role.dto.RoleBtnVO">
		/*  AccInvInvoiceSQL.xml > selectPgmBtnRole  */
		 SELECT TOP 1
		 		A.MNU_NM AS TOP_MNU_NM
		 	  , A.MNU_SEQ AS TOP_MNU_SEQ
		 	  , B.MNU_NM AS SUB_MNU_NM
		 	  , B.MNU_SEQ AS SUB_MNU_SEQ
		 	  , D.PGM_NM AS PGM_MNU_NM
		 	  , D.PGM_SEQ AS PGM_MNU_SEQ
			  , E.ATTR1, E.ATTR2, E.ATTR3, E.ATTR4, E.ATTR5
			  , E.ATTR6, E.ATTR7, E.ATTR8, E.ATTR9
		   FROM TB_MNU A
LEFT OUTER JOIN TB_MNU B ON A.MNU_SEQ = B.PRNT_MNU_SEQ
LEFT OUTER JOIN TB_MNU_ROLE C ON B.MNU_SEQ = C.MNU_SEQ
LEFT OUTER JOIN TB_PGM D ON C.MNU_SEQ = D.MNU_SEQ
		   JOIN TB_PGM_ROLE E ON D.PGM_SEQ = E.PGM_SEQ AND C.ROLE_CD = E.ROLE_CD
		  WHERE 1=1
		    AND C.ROLE_CD  = #role_cd#
		    AND D.PGM_URL  = #pgm_url#
		    AND D.USE_FLG  = 'Y'
	   ORDER BY A.SRT_SEQ, B.MNU_SEQ, D.SRT_SEQ
    </select>




    <!-- Invoice 일 환율조회    -->
    <select id="getCurrExchDay" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getCurrExchDay  */
    	SELECT DT_CLSS_CD
		      ,CONVERT(VARCHAR,XCH_RT_UT) AS XCH_RT_UT
		  FROM tb_inv_xcrt
		 WHERE 1 = 1
		   AND FM_CURR_CD = #frCurr#
		   AND TO_CURR_CD = #toCurr#
		   AND APLY_FM_DT BETWEEN #postDt# AND #postDt#
		   AND APLY_TO_DT BETWEEN #postDt# AND #postDt#
		   AND DT_CLSS_CD = 'D'
		   AND DELT_FLG = 'N'

    </select>

    <!-- Invoice 월 환율조회    -->
    <select id="getCurrExchMon" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > getCurrExchMon  */
    	SELECT DT_CLSS_CD
		      ,CONVERT(VARCHAR,XCH_RT_UT) AS XCH_RT_UT
		  FROM tb_inv_xcrt
		 WHERE 1 = 1
		   AND FM_CURR_CD = #frCurr#
		   AND TO_CURR_CD = #toCurr#
		   AND APLY_FM_DT = #frDt#
		   AND APLY_TO_DT = #toDt#
		   AND DT_CLSS_CD = 'M'
		   AND DELT_FLG = 'N'

    </select>


    <!-- Invoice No 중복체크    -->
    <select id="checkDupInvNo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > checkDupInvNo  */
    	SELECT INV_NO
		  FROM TB_INV_DTL
		 WHERE INV_NO = #inv_no#
		   AND DELT_FLG = 'N'

    </select>




    <!-- 마감 POST DATE 정보 조회  -->
    <select id="searchSlipPostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchSlipPostDate  */
    	<!--
    	SELECT isnull(MAX(POST_DT),'') AS POST_DT
    	  FROM TB_SLIP_MST
    	 WHERE SLIP_TP != 'SL'
    	   -->
    	 SELECT CONVERT(VARCHAR, dateadd(M, 1, isnull(MAX(POST_DT),'')) - datepart(day, dateadd(month, 1, isnull(MAX(POST_DT),''))), 112) AS POST_DT
    	  FROM TB_SLIP_MST
    	 WHERE SLIP_TP != 'SL'

    	 <!--
    	 	//2016.04.18 C.W.Park Modified
    	 	#52109 ofc별 block 일자 확인
    	 -->
    	 <isNotEmpty property="blckOfcCd">
			AND P_OFC_CD = '$blckOfcCd$'
		 </isNotEmpty>

    </select>

    <!-- CLOSE POST DATE 정보 조회  -->
    <select id="searchClosePostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchClosePostDate  */
    	<!--
    	SELECT isnull(MAX(INV_POST_DT),'') AS POST_DT
    	  FROM TB_INV_DTL
    	 WHERE CLT_CMPL_FLG = 'Y'
    	  -->
    	<!--
    	 	//problem #3502 [BINEX ATL] PAYMENT SAVE SLOWNESS ISSUE
    	 -->
    	 
    	SELECT CONVERT(VARCHAR, dateadd(M, 1, isnull(MAX(INV_POST_DT), '')) - datepart(day, dateadd(month, 1, isnull(MAX(INV_POST_DT), ''))), 112) AS POST_DT
		FROM TB_INV_DTL D WITH(NOLOCK)
			LEFT OUTER JOIN TB_INV_DTL_BLCK BLCK ON D.INV_SEQ = BLCK.INV_SEQ
			,TB_INV M WITH(NOLOCK)
		WHERE D.INV_SEQ = M.INV_SEQ
 		AND M.CMB_INV_SEQ IS NULL
 		AND BLCK.CLT_CMPL_FLG = 'Y'
 		AND ISNULL(D.DELT_FLG, 'N') = 'N'

    	 <!--
    	 	//2016.04.18 C.W.Park Modified
    	 	#52109 ofc별 block 일자 확인
    	 -->
    	 <isNotEmpty property="blckOfcCd">
			AND M.OFC_CD = '$blckOfcCd$'
		 </isNotEmpty>
    </select>

    <!-- MAX(BLOCK POST DATE) 정보 조회  -->
    <select id="searchBlockPostDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchBlockPostDate  */
    	/*
    		SELECT  MAX(isnull(BLOCK_DT,''))
    	 	FROM TB_INV_DTL
    	 	WHERE DELT_FLG !='Y'
    	*/

    	 SELECT  isnull(MAX(isnull(TB2.BLOCK_DT,'')),'')
    	 FROM TB_INV TB1 WITH(NOLOCK)
    	 LEFT JOIN TB_INV_DTL_BLCK TB2 ON TB1.INV_SEQ = TB2.INV_SEQ

    	 <!--
    	 	//2016.04.20 C.W.Park Modified
    	 	#52109 ofc별 block 일자 확인
    	 -->
    	 WHERE 1 = 1
    	 AND ISNULL(TB1.DELT_FLG,'N') != 'Y'
	     AND ISNULL(TB2.BLOCK_DT, '') != ''
		<isNotEmpty property="blckOfcCd">
			AND TB1.OFC_CD = '$blckOfcCd$'
		</isNotEmpty>

    </select>

    <!-- MAX(JNR_DT DATE)  정보 조회  -->
    <select id="searchMaxJnrDate" parameterClass="HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchMaxJnrDate  */
    	 SELECT  MAX(isnull(JNR_DT,''))
    	 FROM TB_JNR_MST WITH(NOLOCK)
    	 WHERE DELT_FLG !='Y'
    	 <!--
    	 	//2016.04.18 C.W.Park Modified
    	 	#52109 ofc별 block 일자 확인
    	 -->
    	 <isNotEmpty property="blckOfcCd">
			AND P_OFC_CD = '$blckOfcCd$'
		 </isNotEmpty>

    </select>

    <!-- Batch Print InvoiceList 조회한다.  -->
    <select id="searchBatchPrintList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchBatchPrintList  */
		WITH INV_INFO AS (
			SELECT D.INV_SEQ				AS inv_seq
			      ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'S' THEN 'A/R'
			            WHEN MAX(M.SELL_BUY_TP_CD) IN ('C','D') THEN 'DB/CR'
			            WHEN MAX(M.SELL_BUY_TP_CD) = 'B' THEN 'A/P'
			       END						AS inv_tp
			      ,MAX(M.SELL_BUY_TP_CD)    AS SELL_BUY_TP_CD
			      ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'S' THEN 1 ELSE 0 END AS AR_CNT
        		  ,CASE WHEN MAX(M.SELL_BUY_TP_CD) = 'B' THEN 1 ELSE 0 END AS AP_CNT
			      ,MAX(D.INV_NO)			AS inv_no
			      ,MAX(F.INTG_BL_SEQ)		AS intg_bl_seq
			      ,MAX(F.OTH_SEQ)			AS oth_seq
			      ,MAX(F.WMS_SEQ)			AS wms_seq
			      ,(SELECT cnt_cd FROM TB_OFC WHERE OFC_CD = ISNULL( MAX(B.ref_ofc_cd), MAX(O.OFC_CD))) AS bl_cnt
			      ,ISNULL( MAX(B.ref_ofc_cd), MAX(O.OFC_CD)) AS bl_ofc
			      ,MAX(M.trdp_cd)			AS trdp_cd
			      ,MAX(D.INV_POST_DT)       AS inv_post_dt
			      ,MAX(D.INV_DT)            AS inv_dt
			      ,ISNULL(ISNULL( MAX(B.REF_NO), MAX(O.REF_NO)),MAX(W.DOC_REF_NO)) AS ref_no
			FROM TB_INV M
			JOIN TB_INV_DTL D
				ON M.INV_SEQ = D.INV_SEQ
			JOIN TB_FRT F
				ON D.INV_SEQ = F.INV_SEQ AND F.DELT_FLG = 'N'
			LEFT JOIN TB_INTG_BL B
				ON F.INTG_BL_SEQ = B.INTG_BL_SEQ AND B.DELT_FLG = 'N'
			LEFT JOIN TB_OTH_SALES O
				ON F.OTH_SEQ = O.OTH_SEQ AND O.DELT_FLG = 'N'
			LEFT JOIN TB_WM_DOC_MST W
				ON F.WMS_SEQ = W.WM_DOC_SEQ AND W.DELT_FLG = 'N'
			WHERE ISNULL(M.DELT_FLG,'N') = 'N'
			  AND ISNULL(D.DELT_FLG,'N') = 'N'

			<isEqual property="prn_radio" compareValue="NO">
				<isEqual property="f_ap_yn" compareValue="Y">
					AND D.BUY_INV_NO BETWEEN #f_inv_no# AND #t_inv_no#
				  	AND M.SELL_BUY_TP_CD = 'B'
				</isEqual>
				<isEqual property="f_ap_yn" compareValue="N">
				  	AND D.INV_NO BETWEEN #f_inv_no# AND #t_inv_no#
				  	AND M.SELL_BUY_TP_CD in ('S','D','C')
				</isEqual>
			</isEqual>

			<isEqual property="prn_radio" compareValue="DT">
				<isEqual property="date_clss_cd" compareValue="P">
			  		AND D.INV_POST_DT BETWEEN #f_strdt# AND #f_enddt#
			  	</isEqual>
			  	<isEqual property="date_clss_cd" compareValue="I">
			  		AND D.INV_DT BETWEEN #f_strdt# AND #f_enddt#
			  	</isEqual>

			  	<isEqual property="ap_not_ar_yn" compareValue="N">
				  	AND ( 1=2
			  		<isEqual property="sell_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD = 'S'
			  		</isEqual>
			  		<isEqual property="buy_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD = 'B'
			  		</isEqual>
			  		<isEqual property="dc_yn" compareValue="Y">
			  			OR M.SELL_BUY_TP_CD IN ('D','C')
			  		</isEqual>
			  		)
		  		</isEqual>
			</isEqual>

			<isNotEmpty property="role_ofc_cd">
			  	AND M.OFC_CD = #role_ofc_cd#
			</isNotEmpty>

			GROUP BY D.INV_SEQ
		)

		SELECT *
		  FROM INV_INFO
		 WHERE 1 = 1
			 <isEqual property="ap_not_ar_yn" compareValue="Y">
			   AND REF_NO IN (
		       		SELECT REF_NO
		       		FROM   (
			       			SELECT REF_NO, SUM(AR_CNT) AS AR_CNT, SUM(AP_CNT) AS AP_CNT
			       			FROM   INV_INFO
			       		 	GROUP BY REF_NO
			       			) INVAL
		       		WHERE AR_CNT = 0 AND AP_CNT != 0
		      	)
		       AND SELL_BUY_TP_CD = 'B'
			 </isEqual>

		<isEqual property="sort_radio" compareValue="D">
			<isEqual property="date_clss_cd" compareValue="P">
				ORDER BY INV_POST_DT ASC
			</isEqual>
			<isNotEqual property="date_clss_cd" compareValue="P">
				ORDER BY INV_DT ASC
			</isNotEqual>
		</isEqual>
		<isNotEqual property="sort_radio" compareValue="D">
			ORDER BY INV_NO ASC
		</isNotEqual>
    </select>

    <!-- AP Expense Other Branch Freight 목록 조회. INVOICE 정보   -->
    <select id="selectAPEXP_OTH_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectAPEXP_OTH_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,		fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 fr.aply_ut_cd,      fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd, fr.inv_vat_amt,     		 fr.inv_sum_amt,
		         fr.vat_rt,          fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.i_inv_seq as inv_seq,
				 fr.inv_no,
				 fr.buy_inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.inv_bal_amt,
				 fr.inv_aply_curr_cd,
				 fr.buy_inv_rcv,
				 fr.ref_ofc_cd
           FROM  (SELECT a.*,
                         b.inv_seq as i_inv_seq,
           				 b.buy_inv_no as inv_no,
           				 b.inv_dt,
           				 b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,
           				 b.inv_rmk,
           				 b.inv_aply_curr_cd,
           				 b.buy_inv_no,
           				 b.trdp_cd  AS inv_trdp_cd,
           				 b.trdp_nm  AS inv_trdp_cd_nm,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 b.buy_inv_rcv,
          				 b.ofc_cd AS ref_ofc_cd
                    FROM tb_frt a
                 LEFT JOIN TB_EXP_INV b ON a.reserve_field03 = b.inv_seq AND b.delt_flg = 'N'
                   WHERE  a.delt_flg 		= 'N'
                   	 AND  a.sell_buy_tp_cd  = 'B'
					 AND  a.delt_flg 		= 'N'
					 AND  a.reserve_field03	= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            AND  fr.sell_buy_tp_cd  = 'B'
            AND  fr.reserve_field03	= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>






    <!-- A/P EXPENSE OTHER BRANCH 정보 INSERT   -->
    <insert id="insertEXP_OTH_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.ExpInvVO">
		INSERT INTO TB_EXP_INV(
            inv_seq,        		air_sea_clss_cd,			bnd_clss_cd,
            sell_buy_tp_cd,         frt_ask_clss_cd,            inv_no,
            inv_sts_cd,    			trdp_cd,           			trdp_nm,
			inv_dt,             	inv_post_dt,            	inv_due_dt,
		    buy_inv_no,          	inv_aply_curr_cd,			inv_xcrt_dt,
            inv_aply_xcrt,         	inv_amt,        			inv_sum_amt,
            bal_amt,           		ofc_cd,
            rgst_usrid,         	rgst_ofc_cd,           		rgst_tms,
            modi_usrid,         	modi_ofc_cd,           		modi_tms,
            inv_rmk, 				buy_inv_rcv,	            terms,
            delt_flg
        )VALUES(
            #inv_seq#,      		#air_sea_clss_cd#,     		#bnd_clss_cd#,
            #sell_buy_tp_cd#,       #frt_ask_clss_cd#,          #inv_no#,
            #inv_sts_cd#,  			#trdp_cd#,         			#trdp_nm#,
		    #inv_dt#,           	#inv_post_dt#,          	#inv_due_dt#,
		    #buy_inv_no#,        	#inv_aply_curr_cd#,     	#inv_xcrt_dt#,
            #inv_aply_xcrt#,       	#inv_amt#,					#inv_sum_amt#,
            #bal_amt#,         		#ofc_cd#,
            #proc_usrid#,       	#proc_ofccd#,          		getdate(),
            #proc_usrid#,       	#proc_ofccd#,         		GETUTCDATE(),
            #inv_rmk#,				#buy_inv_rcv#,				#terms#,
            'N'
        )
	</insert>

	<!-- A/P EXPENSE OTHER BRANCH 정보 UPDATE   -->
    <update id="updateEXP_OTH_INV" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.ExpInvVO">
    	UPDATE TB_EXP_INV
    	   SET trdp_cd 			= #trdp_cd#
    	      ,trdp_nm 			= #trdp_nm#
    	      ,inv_dt  			= #inv_dt#
    	      ,inv_post_dt 		= #inv_post_dt#
    	      ,inv_due_dt 		= #inv_due_dt#
    	      ,buy_inv_no 		= #buy_inv_no#
    	      ,inv_aply_curr_cd = #inv_aply_curr_cd#
    	      ,inv_amt 			= #inv_amt#
    	      ,inv_sum_amt 		= #inv_sum_amt#
			  ,bal_amt			= CONVERT(NUMERIC(20,4),#bal_amt#) - CONVERT(NUMERIC(20,4),ISNULL(#paid_amt#,'0'))
    	      ,inv_rmk 			= #inv_rmk#
    	      ,buy_inv_rcv 		= #buy_inv_rcv#
    	      ,terms 			= #terms#
    	      ,modi_usrid 		= #proc_usrid#
    	      ,modi_ofc_cd 		= #proc_ofccd#
    	      ,modi_tms 		= GETUTCDATE()
    	 WHERE inv_seq = #inv_seq#

    </update>



    <!-- A/P EXPENSE OTHER BRANCH FREIGHT 등록   -->
    <insert id="insertEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	<!-- MSSQL 2008 Ver
    	INSERT INTO tb_frt(
    			frt_seq,
    			reserve_field03,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt
    	)VALUES(
    			(SELECT  isnull(max(frt_seq)+1, 1) FROM  tb_frt),
    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			'N',				#inv_post_dt#
    	)
    	-->
    	<!-- 2013.06.05 LHK, MSSQL 2005 version 으로 Query 수정 (Insert into () values()구문에 하위 쿼리 사용할 수 없슴) -->
    	INSERT INTO tb_frt(

    			reserve_field03,			frt_cd_nm,
    			intg_bl_seq,		frt_cd,				aply_ut_cd,
    			cntr_tpsz_cd,		qty,				ru,
    			trf_cur_sum_amt,	vat_rt,				vat_amt,
    			inv_curr_cd,		inv_xcrt,			inv_xcrt_dt,
    			inv_amt,			inv_vat_amt,		inv_sum_amt,
    			trdp_cd,			inv_sts_cd,			frt_divd_flg,
    			auto_trf_flg,		air_sea_clss_cd,	bnd_clss_cd,
    			sell_buy_tp_cd,		frt_term_cd,		rat_curr_cd,
    			rgst_usrid,			rgst_ofc_cd,		rgst_tms,
    			modi_usrid,			modi_ofc_cd,		modi_tms,
    			delt_flg,			inv_post_dt, 		vat_rt_cd
    	) SELECT

    			#inv_seq#,			#frt_cd_nm#,
    			#intg_bl_seq#,		#frt_cd#,			#aply_ut_cd#,
    			#cntr_tpsz_cd#,		#qty#,				#ru#,
    			#trf_cur_sum_amt#,	#vat_rt#,			#vat_amt#,
    			#inv_curr_cd#,		#inv_xcrt#,			#inv_xcrt_dt#,
    			#inv_amt#,			#inv_vat_amt#,		#inv_sum_amt#,
    			#trdp_cd#,			#inv_sts_cd#,		#frt_divd_flg#,
    			#auto_trf_flg#,		#air_sea_clss_cd#,	#bnd_clss_cd#,
    			#sell_buy_tp_cd#,	#frt_term_cd#,		#rat_curr_cd#,
    			#proc_usrid#,		#proc_ofccd#,		getdate(),
    			#proc_usrid#,		#proc_ofccd#,		GETUTCDATE(),
    			'N',				#inv_post_dt#,		#vat_rt_cd#

    </insert>



    <!--FREIGHT INVOICE EXPENSE 정보 포함 테이블 수정   -->
    <update id="updateEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  frt_cd			= #frt_cd#
    	       ,frt_cd_nm		= #frt_cd_nm#
    	       ,aply_ut_cd  	= #aply_ut_cd#
    	       ,cntr_tpsz_cd 	= #cntr_tpsz_cd#
    	       ,qty				= #qty#
    	       ,ru				= #ru#
    	       ,trf_cur_sum_amt = #trf_cur_sum_amt#
    	       ,vat_rt			= #vat_rt#
    	       ,vat_rt_cd		= #vat_rt_cd#
    	       ,vat_amt			= #vat_amt#
    	       ,inv_curr_cd		= #inv_curr_cd#
    	       ,rat_curr_cd     = #rat_curr_cd#
    	       ,inv_xcrt		= #inv_xcrt#
    	       ,inv_xcrt_dt		= #inv_xcrt_dt#
    	       ,inv_amt			= #inv_amt#
    	       ,inv_vat_amt		= #inv_vat_amt#
    	       ,inv_sum_amt		= #inv_sum_amt#
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,frt_term_cd		= #frt_term_cd#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND frt_seq 		   = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>



    <!--FREIGHT EXPENSE 용 테이블 삭제   -->
    <update id="deleteEXP_OTH_FRT_LIST" parameterClass="FrtVO">
    	DELETE FROM tb_frt
    	 WHERE 1=1
    	   AND rgst_ofc_cd	 = #proc_ofccd#
    	   AND frt_seq 		 = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>



    <!--FREIGHT INVOICE EXPENSE 정보중 INV_CURR_CD 수정   -->
    <update id="updateEXP_OTH_FRT_INV_CURR_CD" parameterClass="FrtVO">
    	UPDATE tb_frt
    	   SET  inv_curr_cd		= #inv_curr_cd#
    	 WHERE 1=1
    	   AND rgst_ofc_cd	   = #proc_ofccd#
    	   AND frt_seq 		   = #frt_seq#
    	   AND reserve_field03 = #inv_seq#
    </update>


    <!--EXP INVOICE DTL 테이블 삭제   -->
    <update id="deleteINV_EXP_INFO" parameterClass="java.util.HashMap">
    	UPDATE TB_EXP_INV
    	   SET DELT_FLG = 'Y'
    	 WHERE inv_seq = #f_inv_seq#
    </update>








    <!-- InvoiceList 조회  -->
    <select id="searchExpenseOBList" parameterClass="java.util.HashMap" resultClass="InvListVO">
		/*  AccInvInvoiceSQL.xml > searchExpenseOBList  */
		SELECT 	mst.inv_seq
			   ,MAX(mst.inv_no) 			AS inv_no
		       ,'A/P' 						AS inv_tp
		       ,MAX(mst.inv_post_dt)		AS post_dt
		       ,MAX(mst.trdp_cd)  			AS trdp_cd
		       ,MAX(mst.trdp_nm)  			AS trdp_nm
		       ,MAX(mst.inv_sum_amt)  		AS inv_sum_amt
		       ,MAX(mst.pay_amt)  			AS pay_amt
		       ,MAX(mst.bal_amt)			AS bal_amt
		       ,CASE WHEN MAX(mst.bal_amt) = 0 THEN ''
		             ELSE datediff(day, MAX(mst.INV_DUE_DT), getdate())
		        END AS over_due
		       ,MAX(mst.inv_due_dt)			AS inv_due_dt
		       ,MAX(mst.buy_inv_no)    	 	AS vnd_inv_no
		       ,MAX(mst.ofc_cd)				AS ofc_cd
		       ,MAX(mst.inv_aply_curr_cd)	AS inv_aply_curr_cd
		       ,MAX(mst.rgst_usrid)			AS rgst_usrid
		       ,MAX(mst.rgst_tms)			AS rgst_tms
		       ,MAX(mst.modi_usrid)			AS modi_usrid
		       ,MAX(mst.modi_tms)			AS modi_tms
		       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
		 FROM TB_EXP_INV mst
		LEFT JOIN TB_FRT frt
			ON mst.inv_seq = frt.reserve_field03
		WHERE mst.DELT_FLG = 'N'
		<dynamic>
			AND mst.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
			AND mst.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
			AND mst.sell_buy_tp_cd  = 'B'
			<isNotNull property="s_bill_to_cd">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd
									WHERE trd.TRDP_CD = mst.TRDP_CD
									<!-- //#3488 Accounting Multi Language 적용 --> 
									AND(
										trd.ENG_NM LIKE #s_bill_to_nm# + '%'
										or 
										trd.LOCL_NM LIKE #s_bill_to_nm# + '%'
										
									)
								) 
			</isNotNull>
			<isNotNull property="s_ofc_cd">
				AND mst.ofc_cd = #s_ofc_cd#
			</isNotNull>
			<isNotNull property="s_inv_no">
				AND mst.buy_inv_no LIKE #s_inv_no# + '%'
			</isNotNull>
			<isNotNull property="s_inv_seq">
				AND mst.inv_seq = #s_inv_seq#
			</isNotNull>
			<isNotEqual property="s_amt_to" compareValue="0">
				AND mst.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
			</isNotEqual>
		</dynamic>
		GROUP BY mst.inv_seq
		ORDER BY rgst_tms desc, post_dt, inv_no

    </select>




    <!-- InvoiceList 조회  -->
    <select id="searchExpenseListOB_CNT" parameterClass="java.util.HashMap" resultClass="Integer">
		/*  AccInvInvoiceSQL.xml > searchExpenseListOB_CNT  */
        SELECT COUNT(x.inv_seq)
          FROM(
				SELECT 	mst.inv_seq
					   ,MAX(mst.inv_no) 			AS inv_no
				       ,'A/P' 						AS inv_tp
				       ,MAX(mst.inv_post_dt)		AS post_dt
				       ,MAX(mst.trdp_cd)  			AS trdp_cd
				       ,MAX(mst.trdp_nm)  			AS trdp_nm
				       ,MAX(mst.inv_sum_amt)  		AS inv_sum_amt
				       ,MAX(mst.pay_amt)  			AS pay_amt
				       ,MAX(mst.bal_amt)			AS bal_amt
				       ,CASE WHEN MAX(mst.bal_amt) = 0 THEN ''
				             ELSE datediff(day, MAX(mst.INV_DUE_DT), getdate())
				        END AS over_due
				       ,MAX(mst.inv_due_dt)			AS inv_due_dt
				       ,MAX(mst.buy_inv_no)    	 	AS vnd_inv_no
				       ,MAX(mst.ofc_cd)				AS ofc_cd
				       ,MAX(mst.inv_aply_curr_cd)	AS inv_aply_curr_cd
				       ,MAX(mst.rgst_usrid)			AS rgst_usrid
				       ,MAX(mst.rgst_tms)			AS rgst_tms
				       ,MAX(mst.modi_usrid)			AS modi_usrid
				       ,MAX(mst.modi_tms)			AS modi_tms
				       ,MAX(mst.sell_buy_tp_cd)		AS sell_buy_tp_cd
				 FROM TB_EXP_INV mst
				LEFT JOIN TB_FRT frt
					ON mst.inv_seq = frt.reserve_field03
				WHERE mst.DELT_FLG = 'N'
				<dynamic>
					AND mst.inv_post_dt BETWEEN #s_post_strdt# AND #s_post_enddt#
					AND mst.inv_dt		BETWEEN #s_inv_strdt#  AND #s_inv_enddt#
					AND mst.sell_buy_tp_cd  = 'B'
					<isNotNull property="s_bill_to_cd">
						AND EXISTS(SELECT 1 FROM TB_TRDP trd
									WHERE trd.TRDP_CD = mst.TRDP_CD
									<!-- //#3488 Accounting Multi Language 적용 --> 
									AND(
										trd.ENG_NM LIKE #s_bill_to_nm# + '%'
										or 
										trd.LOCL_NM LIKE #s_bill_to_nm# + '%'
										
									)
								) 
					</isNotNull>
					<isNotNull property="s_ofc_cd">
						AND mst.ofc_cd = #s_ofc_cd#
					</isNotNull>
					<isNotNull property="s_inv_no">
						AND mst.buy_inv_no LIKE #s_inv_no# + '%'
					</isNotNull>
					<isNotNull property="s_inv_seq">
						AND mst.inv_seq = #s_inv_seq#
					</isNotNull>
					<isNotEqual property="s_amt_to" compareValue="0">
						AND mst.inv_sum_amt BETWEEN #s_amt_fr# AND #s_amt_to#
					</isNotEqual>
				</dynamic>
				GROUP BY mst.inv_seq
			) x

    </select>




    <!--INVOICE POST DATE A/P EXPENSE OTHER BRANCH 수정   -->
    <update id="updateEXP_INV_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_EXP_INV
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE inv_seq = #inv_seq#
    </update>



    <!--INVOICE POST DATE A/P EXPENSE OTHER BRANCH 수정   -->
    <update id="updateEXP_FRT_POSTDATE" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_FRT
    	   SET inv_post_dt  = #post_dt#
    	      ,MODI_OFC_CD	= #proc_ofccd#
		      ,MODI_USRID	= #proc_usrid#
		      ,MODI_TMS		= GETUTCDATE()
         WHERE reserve_field03 = #inv_seq#
    </update>




    <!--A/P EXPENSE INVOICE OTHER BRANCH LIST 삭제시 FREIGHT 테이블 수정   -->
    <update id="deleteEXPOB_INV_FRTLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	DELETE FROM TB_FRT
    	 WHERE reserve_field03 = #inv_seq#
    </update>


    <!--INVOICE LIST OTHER BRANCH 삭제   -->
    <update id="deleteEXPOB_FRT_INVLIST" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvListVO">
    	UPDATE TB_EXP_INV
    	   SET DELT_FLG = 'Y'
    	 WHERE inv_seq = #inv_seq#
    </update>



    <!-- 저정된 FREIGHT 정보를 조회한다.   -->
    <select id="selectExFrtList" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvVO" resultClass="FrtVO">
		/*  AccInvInvoiceSQL.xml > selectExFrtList  */
    	SELECT ISNULL(INV_AMT, 0)		AS INV_AMT
		      ,ISNULL(INV_VAT_AMT, 0) 	AS INV_VAT_AMT
		      ,ISNULL(INV_SUM_AMT, 0) 	AS INV_SUM_AMT
		      ,ISNULL(CR_AMT, 0) 	  	AS CREDIT_AMT
		  FROM TB_FRT
		 WHERE INV_SEQ = #inv_seq#
		   AND ISNULL(DELT_FLG,'N') = 'N'
    </select>

    <!-- 20130401 OJG   -->
    <select id="searchInvoicePayAmt" parameterClass="HashMap" resultClass="String">
    	SELECT SUM(isnull(PAY_AMT, 0))
    	  FROM tb_inv_dtl
    	 WHERE inv_seq = #inv_seq#
    	     AND DELT_FLG = 'N'
    </select>
    <!-- 20130401 OJG   -->

    <!-- invoice History Search  -->
    <select id="selectDefaultInvoiceHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisVO">
		SELECT
			CASE WHEN INV.SELL_BUY_TP_CD !='B' THEN  DTL.INV_NO
				ELSE DTL.BUY_INV_NO
			END AS INV_NO,
			DTL.INV_SUM_AMT,
			DTL.INV_APLY_CURR_CD,
			DTL.INV_POST_DT,
			DTL.INV_DT,
			DTL.INV_DUE_DT,
			INV.TRDP_CD,
			TP.LOCL_NM TRDP_NM,
			ISNULL(DTL.PAY_AMT, 0) AS PAY_AMT,
			DTL.DELT_FLG
		FROM TB_INV INV
		 LEFT OUTER JOIN TB_INV_DTL DTL ON DTL.INV_SEQ = INV.INV_SEQ
		 LEFT OUTER JOIN TB_TRDP TP ON  INV.TRDP_CD = TP.TRDP_CD AND TP.DELT_FLG = 'N'
		WHERE  DTL.INV_SEQ = #inv_seq#
    </select>

    <select id="selectInvoiceHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisVO">
    	SELECT
			MST.INV_SEQ 						AS INV_SEQ,
			MST.MODI_SEQ 						AS MODI_SEQ,
			MST.INV_NO							AS INV_NO,
			isnull(MST.INV_SUM_AMT,  0) 		AS INV_SUM_AMT,
			MST.INV_POST_DT						AS INV_POST_DT,
			MST.INV_DT							AS INV_DT,
			MST.INV_DUE_DT						AS INV_DUE_DT,
			MST.TRDP_CD							AS TRDP_CD,
			TP.LOCL_NM							AS TRDP_NM,
			MST.MODI_USRID						AS MODI_USRID,
			MST.MODI_OFC_CD						AS MODI_OFC_CD,
			<!-- CONVERT(VARCHAR(10),MST.MODI_TMS,110)+' '+CONVERT(VARCHAR(5),MST.MODI_TMS,108) AS MODI_TMS,  -->

            <!-- CONVERT(VARCHAR(10),
	        DATEADD(MINUTE,60*CONVERT( float,isnull (ccd.RMK ,'0')), MST.MODI_TMS ),
	        110)+' '+CONVERT(VARCHAR(5),
	        DATEADD(MINUTE,60*CONVERT( float,isnull (ccd.RMK ,'0')), MST.MODI_TMS ),
	        108) AS MODI_TMS, --><!--  local time 으로변경 16.03  #52300 [BNX] Opus forwarding Time Zone 설정 -->

			DATEADD(MINUTE,60*CONVERT( float,isnull (ccd.RMK ,'0')), MST.MODI_TMS ) AS MODI_TMS,





			CASE WHEN MST.INV_SEQ LIKE 'AR%' OR MST.INV_SEQ LIKE 'AP%' OR MST.INV_SEQ LIKE 'DC%' THEN 'Y' ELSE 'N' END MIG_YN
			<!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
			, UPD_TP
    	  FROM TB_INV_HIS_MST MST
    	  	LEFT OUTER JOIN  tb_trdp   tp
		     ON  MST.trdp_cd = tp.trdp_cd

		    LEFT OUTER JOIN
		        TB_OFC TOF
		            ON MST.RGST_OFC_CD = TOF.OFC_CD
		    LEFT OUTER JOIN
		        TB_COM_CD_DTL CCD
		            ON CCD.COM_CD = 'TIMEZN'
		            AND TOF.TIME_ZONE = CCD.CD_VAL

    	 WHERE inv_seq = #inv_seq#
    	 ORDER BY MODI_SEQ DESC
    </select>

    <select id="selectInvoiceDetailHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
    	SELECT
    		INV_SEQ
			,MODI_SEQ
			,DTL_SEQ
			,SELL_BUY_TP_CD
			,FRT_CD
			,FRT_CD_NM
			,FRT_TERM_CD
			,(SELECT CD_NM FROM tb_com_cd_dtl x WHERE  x.CD_VAL = APLY_UT_CD  AND  x.delt_flg = 'N' AND x.COM_CD ='S004') AS APLY_UT_CD
			,CNTR_TPSZ_CD
			,QTY
			,RU
			,INV_AMT
			,INV_VAT_AMT
			,RAT_CURR_CD
			,INV_XCRT
			,INV_SUM_AMT
			,AGENT_AMT
			,CR_AMT
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
			,INV_POST_DT
			,(SELECT BL_NO FROM TB_INTG_BL
				WHERE INTG_BL_SEQ = (SELECT MAX(INTG_BL_SEQ) FROM TB_FRT
				WHERE inv_seq = #inv_seq# )) BL_NO
    	  FROM TB_INV_HIS_DTL
    	 WHERE inv_seq = #inv_seq#
    	  AND modi_seq = #modi_seq#
    </select>


	<select id="selectFrtForInvHistory" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
		/*  AccInvInvoiceSQL.xml > selectFrtForInvHistory  */
		SELECT
			fr.frt_seq,
			fr.sell_buy_tp_cd,
			fr.rat_curr_cd,
			fr.frt_cd,
			CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
				ELSE fr.frt_cd_nm
			END AS frt_cd_nm,
			fr.trdp_cd,
			tp.eng_nm AS trdp_nm,
			tp.trdp_tp_cd,
			fr.aply_ut_cd,
			fr.cntr_tpsz_cd,
			/* CAST(CAST(fr.qty AS float )  AS varchar) AS qty, */
			<!-- CASE WHEN RTRIM(ISNULL(WMS_SEQ,'')) = '' THEN CAST(CAST(fr.qty AS float )  AS varchar)
        		 ELSE CAST(fr.qty AS varchar)
			END qty, -->
			fr.qty,
			fr.scg_incl_flg,
			fr.frt_term_cd,
			/*
			CASE WHEN fr.sell_buy_tp_cd ='C' THEN fr.agent_ru
				ELSE fr.ru
			END AS ru,
			*/
			CASE WHEN fr.sell_buy_tp_cd ='C' THEN CAST(fr.agent_ru AS varchar)
				ELSE CAST(fr.ru AS varchar)
			END AS ru,
			fr.inv_curr_cd,
			fr.inv_xcrt,
			fr.inv_xcrt_dt,
			isnull(fr.inv_amt,  0) AS inv_amt,
			isnull(fr.agent_amt,0) AS agent_amt,
			isnull(fr.cr_amt,0)    AS cr_amt,
			fr.inv_vat_amt,
			fr.inv_sum_amt,
			fr.perf_curr_cd,
			fr.perf_xcrt,
			fr.perf_amt,
			fr.perf_vat_amt,
			fr.frt_biz_clss_cd,
			fr.vat_rt,
			fr.vat_rt_cd,
			fr.vat_amt,
			fr.intg_bl_seq,
			fr.frt_ask_clss_cd,
			fr.trf_ctrt_no,
			fr.trf_dtl_seq,
			fr.auto_trf_flg,
			fr.inv_sts_cd,
			fr.trf_cur_sum_amt,
			fr.inv_seq,
			fr.inv_post_dt,
			(SELECT MAX(modi_seq) FROM TB_INV_HIS_MST mst
				WHERE MST.INV_SEQ = FR.INV_SEQ
			) AS MODI_SEQ
		FROM TB_FRT FR
				LEFT OUTER JOIN tb_trdp tp ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
				LEFT OUTER JOIN tb_frt_cd fd ON  fr.frt_cd  = fd.frt_cd AND  fd.delt_flg = 'N'
		WHERE 1=1
		AND fr.INV_SEQ = #h_inv_seq#
		AND fr.DELT_FLG != 'Y'
		ORDER BY fr.frt_seq
    </select>

    <insert id="insertInvoiceHistory" parameterClass="HashMap">
        INSERT INTO TB_INV_HIS_MST(
			INV_SEQ,
			MODI_SEQ,
			INV_NO,
			INV_SUM_AMT,
			INV_POST_DT,
			INV_DT,
			INV_DUE_DT,
			TRDP_CD,
			RGST_USRID,
			RGST_OFC_CD,
			RGST_TMS,
			MODI_USRID,
			MODI_OFC_CD,
			MODI_TMS
			<!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
	        <isNotNull property="upd_tp">
	        ,UPD_TP
	        </isNotNull>
		) SELECT
			#h_inv_seq#,
			(SELECT  isnull(max(modi_seq)+1, 1) FROM  TB_INV_HIS_MST WHERE INV_SEQ = #h_inv_seq#),
			#h_inv_no#,
			#h_amt_tot#,
			REPLACE(#h_post_dt#,'-',''),
			REPLACE(#h_inv_dt#,'-',''),
			REPLACE(#h_due_dt#,'-',''),
			#h_trdp_cd#,
			#rgst_usrid#,
			#rgst_ofc_cd#,
			getdate(),
			#rgst_usrid#,
			#modi_ofc_cd#,
			GETUTCDATE()
			<!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
	        <isNotNull property="upd_tp">
	        ,#upd_tp#
	        </isNotNull>
    </insert>

    <insert id="insertInvoiceDetailHistory" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.InvHisDtlVO">
       INSERT INTO TB_INV_HIS_DTL(
			INV_SEQ,
			MODI_SEQ,
			DTL_SEQ,
			SELL_BUY_TP_CD,
			FRT_CD,
			FRT_CD_NM,
			FRT_TERM_CD,
			APLY_UT_CD,
			CNTR_TPSZ_CD,
			QTY,
			RU,
			INV_AMT,
			INV_VAT_AMT,
			RAT_CURR_CD,
			INV_XCRT,
			INV_SUM_AMT,
			AGENT_AMT,
			CR_AMT,
			DELT_FLG,
			RGST_USRID,
			RGST_OFC_CD,
			RGST_TMS,
			MODI_USRID,
			MODI_OFC_CD,
			MODI_TMS,
			INV_POST_DT
        )VALUES(
        	#inv_seq#,
			#modi_seq#,
			#dtl_seq#,
			#sell_buy_tp_cd#,
			#frt_cd#,
			#frt_cd_nm#,
			#frt_term_cd#,
			#aply_ut_cd#,
			#cntr_tpsz_cd#,
			#qty#,
			#ru#,
			#inv_amt#,
			#inv_vat_amt#,
			#rat_curr_cd#,
			#inv_xcrt#,
			#inv_sum_amt#,
			#agent_amt#,
			#cr_amt#,
			#delt_flg#,
			#rgst_usrid#,
			#rgst_ofc_cd#,
			getdate(),
			#modi_usrid#,
			#modi_ofc_cd#,
			#modi_tms#,
			#inv_post_dt#
        )
    </insert>

    <insert id="insertInvoiceHistory_Master" parameterClass="HashMap">
        INSERT INTO tb_inv_his_mst(
			inv_seq,
			modi_seq,
			inv_no,
			inv_sum_amt,
			inv_post_dt,
			inv_dt,
			inv_due_dt,
			trdp_cd,
			rgst_usrid,
			rgst_ofc_cd,
			rgst_tms,
			modi_usrid,
			modi_ofc_cd,
			modi_tms
			<dynamic>
			<!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
	        <isNotNull property="upd_tp">
	        ,UPD_TP
	        </isNotNull>
	        </dynamic>
		)
		SELECT  dtl.inv_seq,
				(SELECT  isnull(max(modi_seq)+1, 1) FROM  tb_inv_his_mst WHERE inv_seq = dtl.inv_seq),
				dtl.inv_no,
				dtl.inv_sum_amt,
				CASE WHEN ISNULL(dtl.inv_post_dt, '') != ''
				     THEN substring(dtl.inv_post_dt, 5, 4) + substring(dtl.inv_post_dt, 1, 4)
				     ELSE dtl.inv_post_dt
				END,
				CASE WHEN ISNULL(dtl.inv_dt, '') != ''
				     THEN substring(dtl.inv_dt, 5, 4) + substring(dtl.inv_dt, 1, 4)
				     ELSE dtl.inv_dt
				END,
				CASE WHEN ISNULL(dtl.inv_due_dt, '') != ''
				     THEN substring(dtl.inv_due_dt, 5, 4) + substring(dtl.inv_due_dt, 1, 4)
				     ELSE dtl.inv_due_dt
				END,
				inv.trdp_cd,
				#proc_usrid#,
				#proc_ofccd#,
				getdate(),
				dtl.modi_usrid,
				dtl.modi_ofc_cd,
				GETUTCDATE()
				<dynamic>
				<!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
				<isNotNull property="upd_tp">
				,#upd_tp#
	        	</isNotNull>
	        	</dynamic>
	     FROM tb_inv inv, tb_inv_dtl dtl
	    WHERE inv.inv_seq = dtl.inv_seq
	    <dynamic>
	   	  <!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
	   	  <isNull property="upd_tp">
	      AND dtl.inv_seq = #inv_seq#
	      </isNull>
	   	  <isNotNull property="upd_tp">

	      AND dtl.inv_seq IN (
				SELECT inv1.inv_seq
					FROM tb_inv inv1
						 JOIN tb_inv_dtl dtl1 ON inv1.inv_seq = dtl1.inv_seq
						 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK ON DTL1.INV_SEQ = BLCK.INV_SEQ1 AND DTL1.INV_NO = BLCK.INV_NO1
				   WHERE inv1.inv_seq IN (
				   						<!-- MasterBL Invoice update condition -->
										SELECT  frt1.inv_seq
										  FROM  tb_frt frt1
										 WHERE  ISNULL(frt1.inv_seq, '') != ''
										   AND  frt1.intg_bl_seq = cast(#intg_bl_seq# as varchar)
									 	 GROUP BY  frt1.inv_seq
									 	<!-- HouseBL Invoice update condition -->
									 	 UNION ALL
										SELECT  frt.inv_seq
										  FROM  tb_frt frt, tb_intg_bl_rlt rlt
										 WHERE  ISNULL(frt.inv_seq, '') != ''
										   AND  rlt.rlt_intg_bl_seq = cast(#intg_bl_seq# as varchar)
										   AND  frt.intg_bl_seq = rlt.intg_bl_seq
									 	 GROUP BY  frt.inv_seq
										)
				     AND ISNULL(ISNULL(BLCK.CLT_CMPL_FLG1, dtl1.CLT_CMPL_FLG), 'N') = 'N'
			         AND ISNULL(dtl1.pay_amt, 0) = 0
	      )
	      </isNotNull>
	    </dynamic>
    </insert>

    <insert id="insertInvoiceHistory_Detail" parameterClass="HashMap">
        INSERT INTO tb_inv_his_dtl(
			inv_seq,
			modi_seq,
			dtl_seq,
			sell_buy_tp_cd,
			frt_cd,
			frt_cd_nm,
			frt_term_cd,
			aply_ut_cd,
			cntr_tpsz_cd,
			qty,
			ru,
			inv_amt,
			inv_vat_amt,
			rat_curr_cd,
			inv_xcrt,
			inv_sum_amt,
			agent_amt,
			cr_amt,
			delt_flg,
			rgst_usrid,
			rgst_ofc_cd,
			rgst_tms,
			modi_usrid,
			modi_ofc_cd,
			modi_tms
        )
        SELECT  frt.inv_seq,
				(SELECT  max(modi_seq) FROM  tb_inv_his_mst WHERE inv_seq = frt.inv_seq),
				RANK() OVER (ORDER BY frt.frt_seq),
				frt.sell_buy_tp_cd,
				frt.frt_cd,
				frt.frt_cd_nm,
				frt.frt_term_cd,
				frt.aply_ut_cd,
				frt.cntr_tpsz_cd,
				frt.qty,
				frt.RU,
				frt.inv_amt,
				frt.inv_vat_amt,
				frt.rat_curr_cd,
				frt.inv_xcrt,
				frt.inv_sum_amt,
				frt.agent_amt,
				frt.cr_amt,
				frt.delt_flg,
				#proc_usrid#,
				#proc_ofccd#,
				getdate(),
				frt.modi_usrid,
				frt.modi_ofc_cd,
				frt.modi_tms
	     FROM tb_frt frt
	    WHERE
	    <dynamic>
	    <!-- #710 [CBM] ACCOUNTING INVOICE HISTORY TO SHOW B/L UPDATE THAT AFFECTED INV POST DATE    -->
	    <isNull property="upd_tp">
	    		frt.inv_seq = #inv_seq#
	    </isNull>
	    <isNotNull property="upd_tp">
	    		frt.inv_seq IN (
					SELECT inv.inv_seq
						FROM tb_inv inv
							 JOIN tb_inv_dtl dtl ON inv.inv_seq = dtl.inv_seq
							 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK ON DTL.INV_SEQ = BLCK.INV_SEQ1 AND DTL.INV_NO = BLCK.INV_NO1
					   WHERE inv.inv_seq IN (
					   						<!-- MasterBL Invoice update condition -->
											SELECT  frt1.inv_seq
											  FROM  tb_frt frt1
											 WHERE  ISNULL(frt1.inv_seq, '') != ''
											   AND  frt1.intg_bl_seq = cast(#intg_bl_seq# as varchar)
										 	 GROUP BY  frt1.inv_seq
										 	 <!-- HouseBL Invoice update condition -->
										 	 UNION ALL
										 	 SELECT  frt.inv_seq
										 	 	FROM  tb_frt frt, tb_intg_bl_rlt rlt
										 	 WHERE  ISNULL(frt.inv_seq, '') != ''
										 	 	AND  rlt.rlt_intg_bl_seq = cast(#intg_bl_seq# as varchar)
										 	 	AND  frt.intg_bl_seq = rlt.intg_bl_seq
										 	 GROUP BY  frt.inv_seq
											)
					     AND ISNULL(ISNULL(BLCK.CLT_CMPL_FLG1, dtl.CLT_CMPL_FLG), 'N') = 'N'
				         AND ISNULL(dtl.pay_amt, 0) = 0
	    		)
	    </isNotNull>
	    </dynamic>
    </insert>


    <select id="selectBuyInvNoDupChk" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectBuyInvNoDupChk  */
		select count(*)
		  from tb_inv_dtl x, tb_inv y
		  where x.inv_seq    = Y.inv_seq
		    and x.inv_seq   != #inv_seq#
		    and x.buy_inv_no = #buy_inv_no#
		    and y.trdp_cd    = #trdp_cd#
		    and x.delt_flg = 'N'
		    and y.delt_flg = 'N'
		    and x.buy_inv_no is not null
		    and x.buy_inv_no != ''
    </select>

    <!-- 52320 [COMMON] Transaction 변경처리시 Block Date 까지 Check 하도록 수정 -->
    <select id="searchInvModiTms" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchInvModiTms  */
		SELECT MAX(MODI_TMS) AS modi_tms
		FROM (
			SELECT MODI_TMS
			  FROM TB_INV_DTL
			 WHERE INV_SEQ = #inv_seq#

			 union all

			 SELECT MODI_TMS
			  FROM TB_INV_DTL_BLCK /* 52320 */
			 WHERE INV_SEQ = #inv_seq#


		) INVAL
    </select>

   <select id="searchWmsRemark" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchWmsRemark  */
		SELECT F_REMARK FROM TL_WH_CLS_HRD
		WHERE REF_NO = #ref_no#
   </select>

    <select id="searchOffice_Post_Dt_Inv" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchOffice_Post_Dt_Inv  */
		select post_dt_inv
		  from tb_ofc
		 where ofc_cd = #ofc_cd#
    </select>

    <select id="searchTrdp_Cr_Term_Cd" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > searchTrdp_Cr_Term_Cd  */
		select cr_term_cd
		  from tb_trdp
		 where trdp_cd = #trdp_cd#
    </select>

    <select id="searchTrdp_Cr_Term_Dt" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > "searchTrdp_Cr_Term_Dt"  */
		select cr_term_dt
		  from tb_trdp
		 where trdp_cd = #trdp_cd#
    </select>

    <select id="searchCntrListByBlSeq" resultClass="java.util.HashMap"  parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > "searchCntrListByBlSeq"  */
		<isEqual property="bl_seq_tp" compareValue="B">
			SELECT CNTR_NO,CNTR.CNTR_TPSZ_CD FROM
			TB_CNTR_LIST CNTR
			LEFT OUTER JOIN TB_INTG_BL BL ON BL.INTG_BL_SEQ = CNTR.INTG_BL_SEQ  AND BL.DELT_FLG !='Y'
			WHERE
			BL.INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)
			AND CNTR.DELT_FLG !='Y'
			GROUP BY CNTR_NO,CNTR.CNTR_TPSZ_CD
		</isEqual>
		<isEqual property="bl_seq_tp" compareValue="O">
			SELECT O_CNTR.CNTR_NO, O_CNTR.CNTR_TPSZ_CD FROM
			TB_OTH_SALES_CNTR O_CNTR
			LEFT OUTER JOIN TB_OTH_SALES OTH ON OTH.OTH_SEQ = O_CNTR.OTH_SEQ AND OTH.DELT_FLG !='Y'
			WHERE
			OTH.OTH_SEQ = #oth_seq#
			GROUP BY O_CNTR.CNTR_NO,O_CNTR.CNTR_TPSZ_CD
			ORDER BY CNTR_TPSZ_CD,	CNTR_NO ASC
		</isEqual>
    </select>

    <select id="getDefaultDate" resultClass="java.lang.String" parameterClass="java.util.HashMap">
    /*  AccInvInvoiceSQL.xml > "getDefaultDate"  */

    select obrd_dt_tm from tb_intg_bl
	where intg_bl_seq = #f_intg_bl_seq#
    </select>

    <select id="getUnitCdClosing" resultClass="java.lang.String" parameterClass="java.util.HashMap">
    /*  AccInvInvoiceSQL.xml > "getUnitCdClosing"  */

    SELECT APLY_UT_CD from TB_FRT WHERE WMS_SEQ = #f_wms_seq# AND FRT_SEQ = #f_frt_seq#
    </select>

    <!-- Sub Code 조회시  -->
    <select id="selectCOM_CD_DTL_SUBCD_LIST_Closing" resultClass="com.clt.apps.fis.mdm.code.currency.dto.ComCdDtlVO" parameterClass="java.util.HashMap">
        /*  AccInvInvoiceSQL.xml > "selectCOM_CD_DTL_SUBCD_LIST_Closing"  */
        SELECT  com_cd,   cd_val,
                cd_nm,    srt_seq,   use_flg,      rmk
          FROM  tb_com_cd_dtl
         WHERE  delt_flg = 'N' AND com_cd = 'Z3' AND cd_val = #cd_val#
    </select>

    <!-- #52016 e-Tax To XML Download Revenue Default Bank 조회  -->
    <select id="searchRevBankNm" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > "searchRevBankNm"  */
		SELECT TOP 1
               bank_nm
	      FROM TB_BANK
	     WHERE RVN_FLG = 'Y'
    </select>

    <!-- #52016 e-Tax To XML Download BillTot 정보 조회  -->
    <select id="selectBillTot" parameterClass="HashMap" resultClass="BLInfoVO">
		/*  AccInvInvoiceSQL.xml > selectBillTot  */
        SELECT  top 1
                bl.intg_bl_seq,
        		bl.ref_no,
        		bl.ref_ofc_cd,
        		(SELECT cnt_cd FROM TB_OFC WHERE OFC_CD = bl.ref_ofc_cd) AS cnt_cd,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.bl_no
        		     ELSE mbl.bl_no
        		END AS mbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN mbl.bl_no
        		     ELSE bl.bl_no
        		end AS hbl_no,
        		CASE WHEN bl.biz_clss_cd = 'M' THEN bl.lnr_bkg_no  ELSE mbl.lnr_bkg_no END     AS lnr_bkg_no,
        		bl.bl_no,
        		bl.sub_bl_no,
        		CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.trnk_vsl_nm
        		     ELSE bl.flt_no
        		END vsl_flt,
        		bl.pod_cd,
        		bl.pod_nm,
        		CONVERT(varchar(8), bl.etd_dt_tm, 120)   AS etd_dt_tm,
        		CONVERT(varchar(8), bl.eta_dt_tm, 120)   AS eta_dt_tm,
        		CONVERT(varchar(8), bl.f_eta_dt_tm, 120) AS f_eta_dt_tm,
        		bl.por_cd,
        		bl.por_nm,
        		shp.trdp_cd AS shpr_trdp_cd,      shp.trdp_nm AS shpr_trdp_nm,      shp.trdp_addr AS shpr_trdp_addr,
                cne.trdp_cd AS cnee_trdp_cd,
                (SELECT LOCL_NM
				   FROM TB_TRDP
				  WHERE TRDP_CD = cne.trdp_cd
				) AS cnee_trdp_nm,
                (SELECT  OFC_PHN +', '+ OFC_ADDR
			       FROM  TB_OFC
			      WHERE  OFC_CD =  #ofc_cd#
			    ) AS cnee_trdp_addr,
                ntf.trdp_cd AS ntfy_trdp_cd,      ntf.trdp_nm AS ntfy_trdp_nm,      ntf.trdp_addr AS ntfy_trdp_addr,
                act.trdp_cd AS act_shpr_trdp_cd,  act.trdp_nm AS act_shpr_trdp_nm,  act.trdp_addr AS act_trdp_addr,
                lnr.trdp_cd AS lnr_trdp_cd,       lnr.trdp_nm AS lnr_trdp_nm,
                ptn.trdp_cd AS prnr_trdp_cd,
                ptn.trdp_nm AS prnr_trdp_nm,
                ptn.trdp_addr AS prnr_trdp_addr,
                agent.trdp_cd AS agent_trdp_cd,   agent.trdp_nm AS agent_trdp_nm,   agent.trdp_addr AS agent_trdp_addr,
                third.trdp_cd AS third_trdp_cd,   third.trdp_nm AS third_trdp_nm,   third.trdp_addr AS third_trdp_addr,
                ptn2.trdp_cd AS prnr_trdp_cd2,
                ptn2.trdp_nm AS prnr_trdp_nm2,
                ptn2.trdp_addr AS prnr_trdp_addr2,
                carr.trdp_cd AS carr_trdp_cd,
                carr.trdp_nm AS carr_trdp_nm,
        		bl.rep_cmdt_nm,
        		bl.pck_qty,
        		bl.pck_ut_cd,
        		pcd.pck_nm 			AS pck_ut_nm,
        		bl.grs_wgt,
        		bl.grs_wgt1,
        		bl.chg_wgt,
                bl.chg_wgt1,
        		bl.meas,
        		bl.meas1,
				CASE WHEN bl.biz_clss_cd = 'H' AND bnd.bnd_clss_cd= 'O' THEN bl.cust_curr_cd
				     ELSE bl.curr_cd
				END AS curr_cd,
				bl.rmk,
				bl.mbl_ref_no,
				bl.post_dt,
				bl.agent_rt,
				bl.agent_amt,
				bl.agent_curr_cd,
				bl.cust_rt,
				bl.cust_amt,
				bl.cust_curr_cd,
				CASE WHEN bl.air_sea_clss_cd = 'S' THEN bl.exp_ref_no
				     ELSE bl.inv_no
				END exp_ref_no,
				bl.cust_ref_no,
				CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS bill_to_cd,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 trdp_cd from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS bill_to_cd2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_cd
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_cd,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_cd
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_cd2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS bill_to_nm,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN (select top 1 locl_nm from tb_trdp where trdp_cd = act.trdp_cd)
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS bill_to_nm2,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN cne.trdp_nm
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_nm,
		        CASE
		            WHEN bl.biz_clss_cd = 'H' THEN act.trdp_nm
		            WHEN bl.biz_clss_cd = 'M' THEN ''
		        END AS ship_to_nm2,
				CASE WHEN (SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) = 'POST' THEN bl.post_dt
				     ELSE  REPLACE(CONVERT(VARCHAR(10),GETDATE(),120),'-','')
				END AS inv_dt,
				(SELECT POST_DT_INV FROM TB_OFC WHERE OFC_CD = #ofc_cd#) AS POST_DT_INV,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_CD FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_cd,
				CASE WHEN bl.biz_clss_cd = 'H' THEN (SELECT CR_TERM_DT FROM TB_TRDP WHERE TRDP_CD = act.trdp_cd)
				     WHEN bl.biz_clss_cd = 'M' THEN ''
				END AS term_dt,
				bl.air_sea_clss_cd,
				bl.biz_clss_cd,
				bnd.bnd_clss_cd,
				CASE WHEN bnd.bnd_clss_cd = 'I' AND bl.biz_clss_cd = 'H' THEN CASE WHEN #dc_agt_ref_no# = 'R' THEN mbl.imp_ref_no
																				   WHEN #dc_agt_ref_no# = 'M' THEN mbl.bl_no
																				   ELSE bl.imp_ref_no END
					 ELSE bl.imp_ref_no END as imp_ref_no,
				bl.profit_share,
				(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = bl.ref_ofc_cd ) AS bl_cnt_cd,
				CASE WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_AE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'A' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_AI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'O'
						THEN (SELECT GL_AGENT_PS_OE FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  WHEN bl.AIR_SEA_CLSS_CD = 'S' AND bnd.BND_CLSS_CD = 'I'
						THEN (SELECT GL_AGENT_PS_OI FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
					  ELSE (SELECT GL_AGENT_PS_OTH FROM TB_OFC WHERE OFC_CD = #ofc_cd#)
			    END AS agent_ps_code,
				bl.inco_cd,
				bl.agent_chg_wgt,
				bl.agent_grs_wgt,
				bl.vol_wgt,
				bl.vol_meas,
				bl.pol_cd,
				bl.pol_nm,
				bl.del_cd,
				bl.del_nm,
				'' AS fnl_dest_nod_cd,
				bl.fnl_dest_loc_nm,
				(select value_2 from TB_OFC_SETTINGS where ofc_cd =  bl.ref_ofc_cd and set_type = 'CLOGO_1') AS logo1,
				bl.agent_chg_wgt1, bl.agent_grs_wgt1, bl.customer_unit_chk,bl.agent_unit_chk, bl.shp_mod_cd
         FROM   tb_intg_bl bl
         JOIN   tb_add_info_bnd bnd
           ON   bl.intg_bl_seq = bnd.intg_bl_seq
           <dynamic>
        	<isNotEmpty property="f_bnd_clss_cd">
           		AND bnd.bnd_clss_cd = #f_bnd_clss_cd#
           	</isNotEmpty>
           </dynamic>
           AND bnd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr act
           ON   bl.intg_bl_seq = act.intg_bl_seq  AND act.bl_trdp_tp_cd = 'S02' AND act.delt_flg = 'N'
LEFT OUTER JOIN tb_pck_ut_cd pcd
           ON   bl.pck_ut_cd   = pcd.pck_ut_cd    AND pcd.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr shp
           ON   bl.intg_bl_seq = shp.intg_bl_seq  AND shp.bl_trdp_tp_cd = 'S01' AND shp.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr cne
           ON   bl.intg_bl_seq = cne.intg_bl_seq  AND cne.bl_trdp_tp_cd = 'C01' AND cne.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ntf
           ON   bl.intg_bl_seq = ntf.intg_bl_seq  AND ntf.bl_trdp_tp_cd = 'N01' AND ntf.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr lnr
           ON   bl.intg_bl_seq = lnr.intg_bl_seq  AND lnr.bl_trdp_tp_cd = 'L01' AND lnr.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn
           ON   bl.intg_bl_seq = ptn.intg_bl_seq  AND ptn.bl_trdp_tp_cd = 'P01' AND ptn.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr agent
           ON   bl.intg_bl_seq = agent.intg_bl_seq  AND agent.bl_trdp_tp_cd = 'A01' AND agent.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr third
           ON   bl.intg_bl_seq = third.intg_bl_seq  AND third.bl_trdp_tp_cd = 'T01' AND third.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr ptn2
           ON   bl.intg_bl_seq = ptn2.intg_bl_seq  AND ptn2.bl_trdp_tp_cd = 'P03' AND ptn2.delt_flg = 'N'
LEFT OUTER JOIN tb_bl_prnr carr
           ON   bl.intg_bl_seq = carr.intg_bl_seq  AND carr.bl_trdp_tp_cd = 'B01' AND carr.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl_rlt rlt
            ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
LEFT OUTER JOIN tb_intg_bl mbl
            ON  rlt.rlt_intg_bl_seq = mbl.intg_bl_seq AND mbl.biz_clss_cd = 'M' AND mbl.delt_flg = 'N'
        WHERE bl.delt_flg    = 'N'
        <dynamic>
        	<isNotEmpty property="f_biz_clss_cd">
        		AND bl.biz_clss_cd 	 = #f_biz_clss_cd#
        	</isNotEmpty>
        	<isNotEmpty property="f_air_sea_clss_cd">
        		AND bl.air_sea_clss_cd = #f_air_sea_clss_cd#
        	</isNotEmpty>
            <isNotEmpty property="f_intg_bl_seq">
                AND bl.intg_bl_seq = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="s_bl_no">
                AND bl.bl_no  = #s_bl_no#
            </isNotEmpty>
            <isNotEmpty property="s_ref_no">
                AND bl.ref_no  = #s_ref_no#
            </isNotEmpty>
        </dynamic>
    </select>

    <!-- #52016 e-Tax To XML Download BillDetail List 정보 조회  -->
    <select id="selectBillDetail_LIST" resultClass="FrtVO" parameterClass="java.util.HashMap">
		/*  AccInvInvoiceSQL.xml > selectBillDetail_LIST  */
		 SELECT	 fr.frt_seq,         fr.sell_buy_tp_cd,          fr.rat_curr_cd,	fr.inv_curr_cd,
		         fr.frt_cd,
		         CASE WHEN fr.frt_cd_nm is null THEN fd.frt_cd_nm
		              ELSE fr.frt_cd_nm
		         END AS frt_cd_nm,
				 fr.trdp_cd,         tp.eng_nm AS trdp_nm,       tp.trdp_tp_cd,
				 (SELECT CD_NM  from
					TB_COM_CD_DTL
					WHERE COM_CD = 'S004'
					AND   CD_VAL =  fr.aply_ut_cd) AS aply_ut_cd,
				 fr.cntr_tpsz_cd,            CAST(CAST(fr.qty AS float )  AS varchar) AS qty,
                 fr.scg_incl_flg,    fr.frt_term_cd,             fr.ru,
		  		 fr.inv_xcrt,        fr.inv_xcrt_dt,    		 fr.inv_amt,        fr.inv_vat_amt,     fr.inv_sum_amt,
		         fr.perf_curr_cd,    fr.perf_xcrt,               fr.perf_amt,       fr.perf_vat_amt,
		         fr.frt_biz_clss_cd,
		         fr.vat_rt AS vat_rt,
		         fr.whld_vat_rt AS whld_vat_rt,
		         fr.vat_amt,                 fr.intg_bl_seq,    fr.frt_ask_clss_cd,
		         fr.trf_ctrt_no,     fr.trf_dtl_seq,             fr.auto_trf_flg,
				 fr.inv_sts_cd,      cdl.cd_nm  AS inv_sts_nm,   idt.inv_no,
				 USR.ENG_USR_NM AS proc_usrnm,  				 dpt.cd_nm AS proc_dept_nm,
				 fr.trf_cur_sum_amt,
				 fr.inv_seq,
				 fr.inv_no,
				 fr.inv_dt,
				 fr.i_post_dt AS inv_post_dt,
				 fr.inv_due_dt,
				 fr.inv_rmk,
				 fr.inv_aply_curr_cd,
				 fr.inv_trdp_cd,
				 fr.inv_trdp_cd_nm,
				 fr.inv_ship_trdp_cd,
				 fr.inv_ship_trdp_cd_nm,
				 fr.cust_ref_no,
				 fr.oth_seq,
				 fr.last_pay_dt,
				 fr.last_chk_no,
				 fr.inv_bal_amt,
				 fr.inv_pay_amt,
				 fr.inco_cd,
				 fr.inv_aply_curr_cd,
				 fr.clt_cmpl_flg,
				 fr.tax_bil_flg,
				 fr.attn_to,
				 fr.cmb_inv_seq,
		         fr.JNR_YN,
  				 fr.JNR_DT,
   				 fr.CLS_YN,
   				 fr.CLS_DT,
   				 (SELECT MAX(isnull(BLOCK_DT,'00000000')) FROM TB_INV_DTL_BLCK) AS BLOCK_DT,
   				 idt.modi_tms,
   				 fr.wms_seq
           FROM  (SELECT a.*, b.inv_no,  b.inv_dt,		 b.inv_post_dt AS i_post_dt,
           				 b.inv_due_dt,	 c.inv_rmk,		 b.inv_aply_curr_cd,
           				 c.trdp_cd 		AS inv_trdp_cd,      tp.eng_nm AS inv_trdp_cd_nm,
           				 c.ship_trdp_cd AS inv_ship_trdp_cd, c.ship_trdp_nm AS inv_ship_trdp_cd_nm,
           				 b.cust_ref_no,  b.last_pay_dt,	 b.last_chk_no,
           				 isnull(b.bal_amt,0) AS inv_bal_amt,
           				 isnull(b.pay_amt,0) AS inv_pay_amt,
           				 c.inco_cd,
           				 ISNULL(BLCK.CLT_CMPL_FLG1, B.CLT_CMPL_FLG) AS CLT_CMPL_FLG,
           				 c.tax_bil_flg,
           				 c.attn_to,
           				 c.cmb_inv_seq,
           				 b.JNR_YN,
          				 b.JNR_DT,
           				 b.CLS_YN,
           				 b.CLS_DT
                    FROM tb_frt a
                 LEFT OUTER JOIN TB_INV_DTL b
                              ON a.INV_SEQ = b.inv_seq
                 LEFT OUTER JOIN TB_INV c
                              ON a.INV_SEQ = c.inv_seq AND c.delt_flg = 'N'
                 LEFT OUTER JOIN  tb_trdp   tp
		     				  ON c.trdp_cd = tp.trdp_cd AND tp.delt_flg = 'N'
		     	 LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, INV_NO AS INV_NO1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK
		     	 			  ON B.INV_SEQ = BLCK.INV_SEQ1 AND B.INV_NO = BLCK.INV_NO1
                   WHERE  a.delt_flg 		= 'N'
                   <isNotEmpty property="f_intg_bl_seq">
                     AND  a.intg_bl_seq     = #f_intg_bl_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_oth_seq">
                   	 AND  a.oth_seq			= #f_oth_seq#
                   </isNotEmpty>
                   <isNotEmpty property="f_wms_seq">
		    	 	AND a.wms_seq = #f_wms_seq#
		    	   </isNotEmpty>
					 AND  a.sell_buy_tp_cd  = 'S'
					 AND  a.inv_seq			= #f_inv_seq#
                  ) fr
LEFT OUTER JOIN  tb_trdp   tp
		     ON  fr.trdp_cd = tp.trdp_cd AND  tp.delt_flg = 'N'
LEFT OUTER JOIN  tb_frt_cd fd
		     ON  fr.frt_cd  = fd.frt_cd  AND  fd.delt_flg = 'N'
LEFT OUTER JOIN  tb_com_cd_dtl cdl
             ON  cdl.cd_val = fr.inv_sts_cd AND cdl.com_cd = 'C048' AND cdl.delt_flg = 'N'
LEFT OUTER JOIN  tb_inv_dtl idt
             ON  fr.inv_seq = idt.inv_seq AND idt.DELT_FLG = 'N'
LEFT OUTER JOIN  TB_INTG_BL BL
             ON  fr.INTG_BL_SEQ = BL.INTG_BL_SEQ
LEFT OUTER JOIN  TB_USR USR
             ON  USR.USR_TP = 'I' AND fr.MODI_USRID = USR.USRID
LEFT OUTER JOIN  tb_com_cd_dtl dpt
             ON  dpt.cd_val = USR.dept_cd AND dpt.com_cd = 'C056'
          WHERE  fr.delt_flg 		= 'N'
            <isNotEmpty property="f_intg_bl_seq">
              	AND  fr.intg_bl_seq     = #f_intg_bl_seq#
            </isNotEmpty>
            <isNotEmpty property="f_oth_seq">
            	AND  fr.oth_seq			= #f_oth_seq#
            </isNotEmpty>
            <isNotEmpty property="f_wms_seq">
    	 		AND fr.wms_seq = #f_wms_seq#
    	    </isNotEmpty>

            AND  fr.sell_buy_tp_cd  = 'S'
            AND  fr.inv_seq			= #f_inv_seq#
  	   ORDER BY  fr.frt_seq ASC
    </select>



    <select id="selectINV_TRDP_LIST" parameterClass="String" resultClass="java.util.HashMap">
    /* AccInvInvoiceSQL.xml > selectINV_TRDP_LIST */
     SELECT
            a.trdp_cd,
            a.eng_addr,
            a.cnt_cd,
            a.locl_nm,
            a.shrt_nm,
            a.acct_cd,
            a.full_nm,
            a.trdp_tp_cd,
            a.rmk AS cmp_rmk,
            a.eng_nm,
            a.rep_zip,
            a.sls_gp_cd,
            a.crd_lmt_amt,
            <!-- #660 - [BINEX] CURRENT BALANCE, OVER LIMIT LOGIC (2017.01.12) -->
            <!-- a.cur_lmt_amt, -->
            (SELECT SUM(CASE WHEN INV.SELL_BUY_TP_CD = 'C' THEN IDT.BAL_AMT * -1 ELSE IDT.BAL_AMT END) AS CUR_LMT_AMT
			FROM TB_INV INV
			JOIN TB_INV_DTL IDT ON IDT.INV_SEQ = INV.INV_SEQ AND IDT.DELT_FLG = 'N' AND (IDT.INV_DT <![CDATA[ <= ]]> GETDATE()) AND IDT.INV_APLY_CURR_CD = 'USD'
			WHERE 1=1
			AND INV.TRDP_CD = a.trdp_cd
			AND INV.SELL_BUY_TP_CD IN ('S','D','C')
			AND INV.DELT_FLG = 'N') AS CUR_LMT_AMT,
            a.lgl_addr,
            a.tax_iss_addr,
            a.cr_term_cd,
            a.cr_term_dt,
            a.city_nm,
            a.state_cd,
            a.prefix,
            a.iata_cd,
            a.biz_no,
            a.cmdt_cd,
            a.tp_grp,
            a.sls_usrid,
            A.AN_BOND_NO  ,

            ISNULL(A.LGL_ADDR,
            '') +    (CASE
                WHEN ISNULL(A.CITY_NM,
                '') != ''
                AND ISNULL(A.STATE_CD,
                '') != ''
                AND ISNULL(A.REP_ZIP,
                '') != '' THEN CHAR(13)+CHAR(10) + A.CITY_NM + ', ' + A.STATE_CD + ' ' + A.REP_ZIP
                WHEN ISNULL(A.CITY_NM,
                '') != ''
                AND ISNULL(A.STATE_CD,
                '') != ''
                AND ISNULL(A.REP_ZIP,
                '') = '' THEN CHAR(13)+CHAR(10) + A.CITY_NM + ' ' + A.STATE_CD
                WHEN ISNULL(A.CITY_NM,
                '') != ''
                AND ISNULL(A.STATE_CD,
                '') = ''
                AND ISNULL(A.REP_ZIP,
                '') = '' THEN CHAR(13)+CHAR(10) + A.CITY_NM
                WHEN ISNULL(A.CITY_NM,
                '') != ''
                AND ISNULL(A.STATE_CD,
                '') = ''
                AND ISNULL(A.REP_ZIP,
                '') != '' THEN CHAR(13)+CHAR(10) + A.CITY_NM + ', ' + A.REP_ZIP
                ELSE ''
            END) AS DFLT_ADDR
        FROM
            tb_trdp a

        WHERE  a.delt_flg = 'N'
	      AND a.trdp_cd = #s_trdp_cd#

	</select>

	<select id="selectInvBlockStatus" parameterClass="HashMap" resultClass="String">
		SELECT CASE WHEN ISNULL(ISNULL(BLCK.CLT_CMPL_FLG1, INV.CLT_CMPL_FLG),'N') = 'N'
					THEN CASE WHEN ISNULL(INV.JNR_YN,'N') = 'Y' OR ISNULL(INV.CLS_YN,'N') = 'Y' THEN 'Y' ELSE 'N' END
					ELSE 'Y' END AS CLT_CMPL_FLG
		  FROM TB_INV_DTL INV
		  LEFT OUTER JOIN (SELECT INV_SEQ AS INV_SEQ1, CLT_CMPL_FLG AS CLT_CMPL_FLG1 FROM TB_INV_DTL_BLCK) BLCK ON INV.INV_SEQ = BLCK.INV_SEQ1
		 WHERE INV.INV_SEQ = #inv_seq#
	</select>

    <select id="selectPaymentVerification_BlList" parameterClass="java.util.HashMap" resultClass="BlInfoVO">
           /* selectPaymentVerification_BlList */
			SELECT TOP $topCnt$ *
			FROM ( SELECT
			       bl.intg_bl_seq
			     , bnd.SLS_USR_NM as sls_usrid
			     , carr.trdp_cd AS carr_trdp_cd
			     , carr.trdp_nm AS carr_trdp_nm
			     , bl.ref_no
			     , bl.biz_clss_cd
			     , bl.bl_no
			     , bnd.verify_by
			     , bnd.verify_flag
			     , bnd.verify_dt_tm
			     , bnd.pay_flag
			     , bnd.pay_dt_tm
			     , bl.etd_dt_tm
			     , bl.eta_dt_tm
			     , bnd.hold_flag
			     , bnd.hold_dt_tm
			     , bnd.hold_reason
			     , bnd.release_flag
			     , bnd.release_dt_tm
			     , rlse.cd_nm AS release_type
			     , shpr.trdp_cd AS shpr_trdp_cd
			     , shpr.trdp_nm AS shpr_trdp_nm
			     , cnee.trdp_cd AS cnee_trdp_cd
			     , cnee.trdp_nm AS cnee_trdp_nm
			     , act.trdp_cd AS act_shpr_trdp_cd
			     , act.trdp_nm AS act_shpr_trdp_nm
			     , prnr.trdp_cd AS prnr_trdp_cd
			     , prnr.trdp_nm AS prnr_trdp_nm
			     , bl.trnk_vsl_nm + case when isnull(bl.trnk_vsl_nm,'') = '' then '' else '/' end + bl.trnk_voy as vsl_voy
			     , bl.pol_cd
			     , bl.pol_nm
			     , bl.pod_cd
			     , bl.pod_nm
			     , bnd.issued_by
			     , bl.bl_iss_dt
			     , bnd.bnd_clss_cd
			     , bl.obrd_dt_tm
			     , REPLACE(DBO.FN_GET_BL_AP_INV_AMT(BL.INTG_BL_SEQ, (CASE WHEN bl.biz_clss_cd = 'M' THEN carr.TRDP_CD ELSE mbl_carr.TRDP_CD END), 'B', 'CURR'),'@',CHAR(13)) AS INV_CURR_LIST
			     , (SELECT SUM(BAL_AMT) FROM TB_INV_DTL WHERE INV_SEQ IN((SELECT INV_SEQ FROM TB_FRT WHERE SELL_BUY_TP_CD = 'B' AND INTG_BL_SEQ = BL.INTG_BL_SEQ)) AND DELT_FLG = 'N') AS INV_AMT
			      FROM tb_intg_bl bl
			LEFT JOIN tb_add_info_bnd bnd
			ON bl.intg_bl_seq = bnd.intg_bl_seq AND bnd.delt_flg = 'N'
			LEFT OUTER JOIN tb_bl_prnr carr
			ON   bl.intg_bl_seq = carr.intg_bl_seq  AND carr.bl_trdp_tp_cd = 'B01' AND carr.delt_flg = 'N'
			LEFT OUTER JOIN tb_com_cd_dtl rlse
			ON rlse.com_cd = 'C089' and bl.obl_tp_cd = rlse.cd_val
			LEFT OUTER JOIN  tb_bl_prnr shpr
			ON  bl.intg_bl_seq = shpr.intg_bl_seq  AND shpr.bl_trdp_tp_cd = 'S01' AND shpr.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr cnee
			ON  bl.intg_bl_seq = cnee.intg_bl_seq  AND cnee.bl_trdp_tp_cd = 'C01' AND cnee.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr act
			ON  bl.intg_bl_seq = act.intg_bl_seq  AND act.bl_trdp_tp_cd = 'S01' AND act.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr prnr
			ON  bl.intg_bl_seq = prnr.intg_bl_seq  AND prnr.bl_trdp_tp_cd = 'P01' AND prnr.delt_flg = 'N'
			LEFT OUTER JOIN  tb_intg_bl_rlt rlt
			ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_bl_prnr mbl_carr
			ON  rlt.rlt_intg_bl_seq = mbl_carr.intg_bl_seq  AND mbl_carr.bl_trdp_tp_cd = 'B01' AND mbl_carr.delt_flg = 'N'
			WHERE 1 = 1
			AND bl.delt_flg = 'N'
			<isEqual property="s_mode" compareValue="OE">
				AND  bl.air_sea_clss_cd = 'S'
				AND  bnd.bnd_clss_cd = 'O'
				<isEmpty property="s_type_no">
					AND CONVERT(DATETIME, bnd.verify_dt_tm) BETWEEN CONVERT(DATETIME,  #s_strdt#) AND CONVERT(DATETIME, #s_enddt#)
					<!--AND ((bl.obl_tp_cd = 'E' and substring(isnull(eta_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-7,CONVERT(DATETIME,  #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-7,CONVERT(DATETIME,  #s_enddt#)), 112))
					OR  (bl.obl_tp_cd IN ('O', 'S') and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-1,CONVERT(DATETIME,  #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-1,CONVERT(DATETIME,  #s_enddt#)), 112))
					OR  (bl.obl_tp_cd = 'A' and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, CONVERT(DATETIME,  #s_strdt#), 112) AND convert(varchar, CONVERT(DATETIME,  #s_enddt#), 112)))

					AND (bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd = 'E' and substring(isnull(eta_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-7,CONVERT(DATETIME, #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-7,CONVERT(DATETIME, #s_enddt#)), 112))
						  OR  bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd IN('O', 'S') and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-1,CONVERT(DATETIME, #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-1,CONVERT(DATETIME, #s_enddt#)), 112))
						  OR  bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd = 'A' and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, CONVERT(DATETIME, #s_strdt#), 112) AND convert(varchar, CONVERT(DATETIME, #s_enddt#), 112)
						  )
						)-->
				</isEmpty>
			</isEqual>
			<isEqual property="s_mode" compareValue="OI">
				AND  bl.air_sea_clss_cd = 'S'
				AND  bnd.bnd_clss_cd = 'I'
				<isEmpty property="s_type_no">
					AND CONVERT(DATETIME, bnd.verify_dt_tm) BETWEEN CONVERT(DATETIME,  #s_strdt#) AND CONVERT(DATETIME, #s_enddt#)
					<!-- AND  CONVERT(DATETIME, isnull(bl.post_dt, '')) BETWEEN CONVERT(DATETIME, #s_strdt#) AND CONVERT(DATETIME, #s_enddt#) -->
				</isEmpty>
			</isEqual>

			<isNotEmpty property="s_type_no">
				<isEqual property="s_type" compareValue="REF_NO">
					AND bl.ref_no like #s_type_no# + '%'
				</isEqual>
				<isEqual property="s_type" compareValue="MBL_NO">
					AND bl.bl_no like #s_type_no# + '%'
					AND bl.biz_clss_cd = 'M'
				</isEqual>
				<isEqual property="s_type" compareValue="HBL_NO">
					AND bl.bl_no like #s_type_no# + '%'
					AND bl.biz_clss_cd = 'H'
				</isEqual>
			</isNotEmpty>

			<isNotEmpty property="s_carr_trdp_cd">
				AND CASE WHEN bl.biz_clss_cd = 'M' THEN carr.trdp_cd ELSE mbl_carr.trdp_cd END = #s_carr_trdp_cd#
			</isNotEmpty>
			<isNotEmpty property="s_carr_trdp_nm">
				AND CASE WHEN bl.biz_clss_cd = 'M' THEN carr.trdp_nm ELSE mbl_carr.trdp_nm END LIKE #s_carr_trdp_nm# + '%'
			</isNotEmpty>
			) T1
			WHERE ISNULL(T1.INV_CURR_LIST, '') <![CDATA[ <> '' ]]>
			AND ISNULL(T1.INV_AMT, 0) <![CDATA[ <> 0 ]]>
			ORDER BY ref_no DESC, biz_clss_cd DESC
    </select>

    <select id="selectPaymentVerification_BlList_Cnt" parameterClass="java.util.HashMap" resultClass="Integer">
           /* selectPaymentVerification_BlList_Cnt */
           SELECT COUNT(INTG_BL_SEQ) FROM (
			SELECT bl.intg_bl_seq,
			       REPLACE(DBO.FN_GET_BL_AP_INV_AMT(BL.INTG_BL_SEQ, (CASE WHEN bl.biz_clss_cd = 'M' THEN carr.TRDP_CD ELSE mbl_carr.TRDP_CD END), 'B', 'CURR'),'@',CHAR(13)) AS INV_CURR_LIST,
			       (SELECT SUM(BAL_AMT) FROM TB_INV_DTL WHERE INV_SEQ IN((SELECT INV_SEQ FROM TB_FRT WHERE SELL_BUY_TP_CD = 'B' AND INTG_BL_SEQ = BL.INTG_BL_SEQ)) AND DELT_FLG = 'N') AS INV_AMT
			      FROM tb_intg_bl bl
			LEFT JOIN tb_add_info_bnd bnd
			ON bl.intg_bl_seq = bnd.intg_bl_seq AND bnd.delt_flg = 'N'
			LEFT OUTER JOIN tb_bl_prnr carr
			ON   bl.intg_bl_seq = carr.intg_bl_seq  AND carr.bl_trdp_tp_cd = 'B01' AND carr.delt_flg = 'N'
			LEFT OUTER JOIN tb_com_cd_dtl rlse
			ON rlse.com_cd = 'C089' and bl.obl_tp_cd = rlse.cd_val
			LEFT OUTER JOIN  tb_bl_prnr shpr
			ON  bl.intg_bl_seq = shpr.intg_bl_seq  AND shpr.bl_trdp_tp_cd = 'S01' AND shpr.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr cnee
			ON  bl.intg_bl_seq = cnee.intg_bl_seq  AND cnee.bl_trdp_tp_cd = 'C01' AND cnee.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr act
			ON  bl.intg_bl_seq = act.intg_bl_seq  AND act.bl_trdp_tp_cd = 'S01' AND act.delt_flg = 'N'
			LEFT OUTER JOIN  tb_bl_prnr prnr
			ON  bl.intg_bl_seq = prnr.intg_bl_seq  AND prnr.bl_trdp_tp_cd = 'P01' AND prnr.delt_flg = 'N'
			LEFT OUTER JOIN  tb_intg_bl_rlt rlt
			ON  bl.intg_bl_seq = rlt.intg_bl_seq AND rlt.delt_flg = 'N'
			LEFT OUTER JOIN tb_bl_prnr mbl_carr
			ON  rlt.rlt_intg_bl_seq = mbl_carr.intg_bl_seq  AND mbl_carr.bl_trdp_tp_cd = 'B01' AND mbl_carr.delt_flg = 'N'
			WHERE 1 = 1
			AND bl.delt_flg = 'N'
			<isEqual property="s_mode" compareValue="OE">
				AND  bl.air_sea_clss_cd = 'S'
				AND  bnd.bnd_clss_cd = 'O'
				<isEmpty property="s_type_no">
					AND CONVERT(DATETIME, bnd.verify_dt_tm) BETWEEN CONVERT(DATETIME,  #s_strdt#) AND CONVERT(DATETIME, #s_enddt#)
					<!--AND ((bl.obl_tp_cd = 'E' and substring(isnull(eta_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-7,CONVERT(DATETIME,  #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-7,CONVERT(DATETIME,  #s_enddt#)), 112))
					OR  (bl.obl_tp_cd IN ('O', 'S') and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-1,CONVERT(DATETIME,  #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-1,CONVERT(DATETIME,  #s_enddt#)), 112))
					OR  (bl.obl_tp_cd = 'A' and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, CONVERT(DATETIME,  #s_strdt#), 112) AND convert(varchar, CONVERT(DATETIME,  #s_enddt#), 112)))

					AND (bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd = 'E' and substring(isnull(eta_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-7,CONVERT(DATETIME, #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-7,CONVERT(DATETIME, #s_enddt#)), 112))
						  OR  bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd IN('O', 'S') and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, DATEADD(d,-1,CONVERT(DATETIME, #s_strdt#)), 112) AND convert(varchar, DATEADD(d,-1,CONVERT(DATETIME, #s_enddt#)), 112))
						  OR  bl.INTG_BL_SEQ IN (SELECT INTG_BL_SEQ from TB_INTG_BL where obl_tp_cd = 'A' and substring(isnull(etd_dt_tm, ''), 1, 8) BETWEEN convert(varchar, CONVERT(DATETIME, #s_strdt#), 112) AND convert(varchar, CONVERT(DATETIME, #s_enddt#), 112)
						  )
						)-->
				</isEmpty>
			</isEqual>
			<isEqual property="s_mode" compareValue="OI">
				AND  bl.air_sea_clss_cd = 'S'
				AND  bnd.bnd_clss_cd = 'I'
				<isEmpty property="s_type_no">
					AND CONVERT(DATETIME, bnd.verify_dt_tm) BETWEEN CONVERT(DATETIME,  #s_strdt#) AND CONVERT(DATETIME, #s_enddt#)
					<!-- AND  CONVERT(DATETIME, isnull(bl.post_dt, '')) BETWEEN CONVERT(DATETIME, #s_strdt#) AND CONVERT(DATETIME, #s_enddt#) -->
				</isEmpty>
			</isEqual>

			<isNotEmpty property="s_type_no">
				<isEqual property="s_type" compareValue="REF_NO">
					AND bl.ref_no like #s_type_no# + '%'
				</isEqual>
				<isEqual property="s_type" compareValue="MBL_NO">
					AND bl.bl_no like #s_type_no# + '%'
					AND bl.biz_clss_cd = 'M'
				</isEqual>
				<isEqual property="s_type" compareValue="HBL_NO">
					AND bl.bl_no like #s_type_no# + '%'
					AND bl.biz_clss_cd = 'H'
				</isEqual>
			</isNotEmpty>

			<isNotEmpty property="s_carr_trdp_cd">
				AND CASE WHEN bl.biz_clss_cd = 'M' THEN carr.trdp_cd ELSE mbl_carr.trdp_cd END = #s_carr_trdp_cd#
			</isNotEmpty>
			<isNotEmpty property="s_carr_trdp_nm">
				AND CASE WHEN bl.biz_clss_cd = 'M' THEN carr.trdp_nm ELSE mbl_carr.trdp_nm END LIKE #s_carr_trdp_nm# + '%'
			</isNotEmpty>
			) T1
			WHERE ISNULL(T1.INV_CURR_LIST, '') <![CDATA[ <> '' ]]>
			AND ISNULL(T1.INV_AMT, 0) <![CDATA[ <> 0 ]]>
    </select>

    <select id="searchPaymentVerification_InvList" parameterClass="HashMap" resultClass="com.clt.apps.fis.pfm.mgt.management.dto.ProfitListVO">
    	/** searchPaymentVerification_InvList **/
    	<![CDATA[
    	SELECT  prf.frt_nm
		       ,prf.local_inv_amt
		       ,prf.cost_inv_amt
		       ,prf.debit_inv_amt
		       ,prf.cr_amt
		       ,prf.rat_curr_cd
		       ,prf.trf_cur_sum_amt
		       ,(prf.local_inv_amt - prf.cost_inv_amt + prf.debit_inv_amt - prf.cr_amt) AS prf_amt
		       ,prf.bl_no
		       ,prf.sell_buy_tp_cd
		       ,prf.inv_no
		       ,prf.bill_to
		       ,prf.inv_post_dt
		       ,SUM(prf.local_inv_amt) OVER (partition by  prf.inv_seq) as local_inv_ttl_amt
		       ,SUM(prf.cost_inv_amt) OVER (partition by  prf.inv_seq) as cost_inv_ttl_amt
		       ,SUM(prf.debit_inv_amt-prf.cr_amt) OVER (partition by  prf.inv_seq) as agent_inv_ttl_amt

		       ]]>
		      <![CDATA[
	             ,(SELECT (CASE WHEN X.BAL_AMT = 0 THEN 'Y'
			             WHEN X.INV_AMT = X.BAL_AMT THEN 'N'
			             WHEN X.INV_AMT IS null  THEN 'N'
			             WHEN X.BAL_AMT < 0 THEN 'O'
			             WHEN X.INV_AMT != X.BAL_AMT THEN 'P'
			             ELSE '' END) CLR_YN
						FROM
						(
						SELECT I_DTL.INV_AMT AS INV_AMT, I_DTL.BAL_AMT AS BAL_AMT
						  FROM TB_INV_DTL I_DTL
						 WHERE I_DTL.DELT_FLG = 'N'
						   AND I_DTL.INV_SEQ = PRF.INV_SEQ
						) X
			        ) as  clr_yn

		       ,prf.org_bl_rcvd_flg
		       ,prf.rcvd_dt_tm
		       ,prf.express_tp_cd
		       ,prf.rlsd_dt_tm
		       ,prf.last_chk_no
		       ,prf.last_pay_dt

		       ,prf.ref_ofc_cd
		       ,prf.inv_seq
			   ,prf.trdp_cd
			   ,prf.ofc_cd
			   ,(select upper(x.CNT_CD) from tb_ofc x where x.OFC_CD = prf.ofc_cd ) AS bl_cnt_cd
			   ,(select max(bl_no) from tb_intg_bl where intg_bl_seq = intg_bl_seq_2) as rmk_bl_no

	           ,isnull(prf.clt_cmpl_flg, 'N') AS clt_cmpl_flg
		       ,block_tms
		       ,block_name

		FROM   (SELECT  frt.inv_seq
		               ,((SELECT frt_cd.frt_cd
		                    FROM   tb_frt_cd frt_cd
		                   WHERE  frt_cd.frt_cd = frt.frt_cd
		                     AND frt_cd.delt_flg = 'N') + ' / ' + frt.frt_cd_nm) AS frt_nm
		               ,frt.inv_amt
		               ,CASE
		                  WHEN inv.sell_buy_tp_cd = 'S' THEN isnull(frt.INV_amt, 0)
		                  ELSE 0
		                END                                                                         AS local_inv_amt
		               ,CASE
		                  WHEN inv.sell_buy_tp_cd = 'B' THEN isnull(frt.INV_amt, 0)
		                  ELSE 0
		                END                                                                         AS cost_inv_amt
		               ,CASE
		                  WHEN inv.sell_buy_tp_cd = 'C'
		                        OR inv.sell_buy_tp_cd = 'D' THEN isnull(frt.INV_amt, 0)
		                  ELSE 0
		                END                                                                         AS debit_inv_amt
		               ,isnull(frt.cr_amt, 0)  AS cr_amt
		               ,frt.rat_curr_cd 															AS rat_curr_cd
		               ,isnull(frt.trf_cur_sum_amt, 0) 												AS trf_cur_sum_amt
		               ,bl.bl_no
		               ,case when inv.SELL_BUY_TP_CD = 'S' then 'A/R'
		                when inv.SELL_BUY_TP_CD = 'B' then 'A/P'
		                else 'D/C' end as sell_buy_tp_cd
		               ,CASE
		                  WHEN inv.sell_buy_tp_cd = 'B' THEN Isnull(dtl.buy_inv_no, '(None)')
		                  ELSE Isnull(dtl.inv_no, '(None)')
		                END                                                                         AS inv_no
		               ,(SELECT trdp.locl_nm
		                 FROM   tb_trdp trdp
		                 WHERE  trdp.trdp_cd = frt.trdp_cd)                                         AS bill_to
		               ,dtl.inv_post_dt
		               ,(SELECT MAX(jnr_no) AS jnr_no
		                 FROM   tb_jnr_dtl j_dtl
		                 WHERE  j_dtl.inv_seq = dtl.inv_seq
		                 )                                                          				AS jnr_no
		               ,bl.org_bl_rcvd_flg
		               ,bl.rcvd_dt_tm
		               ,bl.express_tp_cd
		               ,bl.rlsd_dt_tm
		               ,dtl.last_chk_no
		               ,dtl.last_pay_dt
		               ,bl.rgst_ofc_cd
		               ,bl.ref_ofc_cd
					   ,inv.trdp_cd
					   ,inv.ofc_cd
					   ,frt.intg_bl_seq_2
            		   ,blck.clt_cmpl_flg
            		   ,blck.modi_tms as block_tms
            		   ,(select f.ENG_USR_NM from TB_USR f where f.USRID = blck.MODI_USRID)  as block_name
		        FROM   tb_frt frt
		               JOIN (SELECT bl.bl_no
		                            ,bl.intg_bl_seq
		                            ,bl.rgst_ofc_cd
		                            ,bl.org_bl_rcvd_flg
		                            ,bl.rcvd_dt_tm
		                            ,bl.express_tp_cd
		                            ,bl.rlsd_dt_tm
		                            ,bl.ref_ofc_cd
		                     FROM   (SELECT bl.bl_no
		                                    ,bl.intg_bl_seq AS intg_bl_seq
		                                    ,bl.rgst_ofc_cd
		                                    ,bl.org_bl_rcvd_flg
		                                    ,bl.rcvd_dt_tm
		                                    ,bl.express_tp_cd
		                                    ,bl.rlsd_dt_tm
		                                    ,bl.ref_ofc_cd
		                             FROM   tb_intg_bl bl
		                             WHERE  bl.intg_bl_seq = cast(#intg_bl_seq# as varchar)) bl) bl
		                 ON frt.intg_bl_seq = bl.intg_bl_seq
		               JOIN tb_inv inv ON inv.inv_seq = frt.inv_seq AND inv.delt_flg = 'N'
		               LEFT OUTER JOIN tb_inv_dtl dtl ON dtl.inv_seq = inv.inv_seq AND dtl.delt_flg = 'N'
		               LEFT OUTER JOIN tb_frt_cd frt_cd ON frt_cd.frt_cd = frt.frt_cd AND frt_cd.delt_flg = 'N'
			           LEFT OUTER JOIN TB_INV_DTL_BLCK blck ON blck.INV_SEQ = dtl.INV_SEQ AND blck.INV_NO = dtl.INV_NO
		        WHERE  1=1
		        AND    frt.delt_flg = 'N'
		        AND    frt.sell_buy_tp_cd iN ('S','B')
		        AND    ((frt.sell_buy_tp_cd = 'B' AND frt.trdp_cd = (select trdp_cd
		        													   from tb_bl_prnr
		        													  where intg_bl_seq = (CASE WHEN #biz_clss_cd# = 'M' THEN #intg_bl_seq# ELSE (SELECT RLT_INTG_BL_SEQ
		        													  																			    FROM TB_INTG_BL_RLT
		        													  																			   WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)
		        													  																			     AND DELT_FLG = 'N') END) and bl_trdp_tp_cd = 'B01' and delt_flg = 'N'))
		         OR    (frt.sell_buy_tp_cd = 'S' AND 1 = 1))
		           ) prf
		ORDER  BY  prf.sell_buy_tp_cd
		          ,prf.rat_curr_cd
				  ,prf.bl_no
		          ,prf.inv_no
		          ,prf.bill_to
		          ,prf.inv_post_dt
		]]>
    </select>
	<select id="searchPaymentVerification_CntrList" parameterClass="HashMap" resultClass="CntrLstVO">
		/* searchPaymentVerification_CntrList */
		select bl.BL_NO
		     , cntr.CNTR_NO
		     , cntr.CNTR_REF_NO
		     , cntr.CNTR_TPSZ_CD
		     <!-- , convert(varchar, cntr.CGO_PCK_QTY) + case when isnull(convert(varchar, cntr.CGO_PCK_QTY),'') = '' then '' else '/' end + cntr.CGO_PCK_UT as CGO_PCK_UT -->
		     , cntr.CGO_PCK_QTY
		     , cntr.CGO_PCK_UT
		     , cntr.CGO_WGT
		     , cntr.CGO_WGT1
		     , cntr.CGO_MEAS
		     , cntr.CGO_MEAS1
		     , cntr.CNTR_RMK
		     , cntr.CNTR_LIST_SEQ
		from tb_intg_bl bl
		left join tb_cntr_list cntr on bl.INTG_BL_SEQ = cntr.INTG_BL_SEQ and cntr.DELT_FLG = 'N'
		where 1 = 1
		and bl.INTG_BL_SEQ = #s_intg_bl_seq#
	</select>

	<!-- #2109 [PATENT] PAYMENT VERIFICATION 화면 로직 보완 -->
    <update id="updatePaymentVerification" parameterClass="BlInfoVO">
    /* updatePaymentVerification */
        UPDATE tb_add_info_bnd
           SET modi_usrid			= #proc_usrid#
			  ,modi_ofc_cd			= #proc_ofccd#
			  ,modi_tms				= GETUTCDATE()

           <isNotEmpty property="pay_flag">
           		<isEqual property="pay_flag" compareValue="1">
           			,pay_flag		= 'Y'
           			,pay_dt_tm		= GETUTCDATE()
           		</isEqual>
           		<isNotEqual property="pay_flag" compareValue="1">
           			,pay_flag		= 'N'
           			,pay_dt_tm		= null
           		</isNotEqual>
           </isNotEmpty>
           <isNotEmpty property="hold_flag">
           		<isEqual property="hold_flag" compareValue="1">
           			,hold_flag		= 'Y'
           			,hold_dt_tm		= GETUTCDATE()
           		</isEqual>
           		<isNotEqual property="hold_flag" compareValue="1">
           			,hold_flag		= 'N'
           			,hold_dt_tm		= null
           		</isNotEqual>
           </isNotEmpty>

           		,hold_reason		= #hold_reason#

           <isNotEmpty property="release_flag">
           		<isEqual property="release_flag" compareValue="1">
           			,release_flag		= 'Y'
           			,release_dt_tm		= GETUTCDATE()
           		</isEqual>
           		<isNotEqual property="release_flag" compareValue="1">
           			,release_flag		= 'N'
           			,release_dt_tm		= null
           		</isNotEqual>
           </isNotEmpty>
           <isNotEmpty property="verify_flag">
           		<isEqual property="verify_flag" compareValue="1">
           			,verify_flag		= 'Y'
           			,verify_dt_tm		= GETUTCDATE()
           			,verify_by			= #proc_usrid#
           		</isEqual>
           		<isNotEqual property="verify_flag" compareValue="1">
           			,verify_flag		= 'N'
					,verify_dt_tm = (CASE WHEN '1' = (SELECT ISNULL(OPT_VAL,'') FROM TB_SYS_OPT WHERE OPT_KEY =  'PAY_VERIFY_OPT') THEN (SELECT OBRD_DT_TM FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar))
						            	   WHEN '2' = (SELECT ISNULL(OPT_VAL,'') FROM TB_SYS_OPT WHERE OPT_KEY =  'PAY_VERIFY_OPT') THEN
						            	   		(CASE WHEN '1' = (SELECT COUNT(INTG_BL_SEQ) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar) AND HBL_TP_CD IN ('DR','FW','DT')) THEN
							            	   		(CASE WHEN 'O' = (SELECT ISNULL(OBL_TP_CD, '') FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)) THEN (SELECT CONVERT(VARCHAR, DATEADD(D,-1,CONVERT(DATETIME, ETD_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar))
							            	   			 ELSE (SELECT CONVERT(VARCHAR, DATEADD(D,-7,CONVERT(DATETIME, ETA_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar))
							            	   		END)
						            	   		ELSE (SELECT CONVERT(VARCHAR, DATEADD(D,-7,CONVERT(DATETIME, ETA_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)) END)
						              		ELSE '' END)
           			,verify_by			= (select RGST_USRID from tb_intg_bl where intg_bl_seq = cast(#intg_bl_seq# as varchar))
           		</isNotEqual>
           </isNotEmpty>

         WHERE intg_bl_seq = cast(#intg_bl_seq# as varchar)
    </update>

	<!-- #2109 [PATENT] PAYMENT VERIFICATION 화면 로직 보완 -->
    <update id="updatePaymentVerification_HouseVerify" parameterClass="BlInfoVO">
    /* updatePaymentVerification_HouseVerify */
        UPDATE tb_add_info_bnd
           SET modi_usrid			= #proc_usrid#
			  ,modi_ofc_cd			= #proc_ofccd#
			  ,modi_tms				= GETUTCDATE()
           <isNotEmpty property="verify_flag">
           		<isEqual property="verify_flag" compareValue="1">
           			,verify_flag		= 'Y'
           			,verify_dt_tm		= GETUTCDATE()
           			,verify_by			= #proc_usrid#
           		</isEqual>
           		<isNotEqual property="verify_flag" compareValue="1">
           			,verify_flag		= 'N'
					,verify_dt_tm = (CASE WHEN '1' = (SELECT ISNULL(OPT_VAL,'') FROM TB_SYS_OPT WHERE OPT_KEY =  'PAY_VERIFY_OPT') THEN (SELECT OBRD_DT_TM FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar))
						            	   WHEN '2' = (SELECT ISNULL(OPT_VAL,'') FROM TB_SYS_OPT WHERE OPT_KEY =  'PAY_VERIFY_OPT') THEN
						            	   		(CASE WHEN '1' = (SELECT COUNT(INTG_BL_SEQ) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar) AND HBL_TP_CD IN ('DR','FW','DT')) THEN
							            	   		(CASE WHEN 'O' = (SELECT ISNULL(OBL_TP_CD, '') FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)) THEN (SELECT CONVERT(VARCHAR, DATEADD(D,-1,CONVERT(DATETIME, ETD_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = #intg_bl_seq#)
							            	   			 ELSE (SELECT CONVERT(VARCHAR, DATEADD(D,-7,CONVERT(DATETIME, ETA_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar))
							            	   		END)
						            	   		ELSE (SELECT CONVERT(VARCHAR, DATEADD(D,-7,CONVERT(DATETIME, ETA_DT_TM)),121) FROM TB_INTG_BL WHERE INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)) END)
						              		ELSE '' END)
           			,verify_by			= (select RGST_USRID from tb_intg_bl where intg_bl_seq = cast(#intg_bl_seq# as varchar))
           		</isNotEqual>
           </isNotEmpty>

         WHERE intg_bl_seq IN (SELECT intg_bl_seq FROM tb_intg_bl_rlt WHERE rlt_intg_bl_seq = cast(#intg_bl_seq# as varchar) AND delt_flg = 'N')
    </update>

		        <!-- #2189 [BNX][INDIA] AP Actual Shipper & CNEE 추가 // 1 Master 3 House -->
	<select id="searchActualTrdp" parameterClass="String" resultClass="HashMap">
		/* searchActualTrdp */
		select act_shpr_trdp_nm as act_shpr_trdp_nm
			 , act_cnee_trdp_nm as act_cnee_trdp_nm
		from tb_inv
		where 1 = 1
		and inv_seq = #inv_seq#
	</select>

	<!-- #2105 [PATENT] Option 에 따른 Invoice 자동 생성 기능 추가 -->
    <select id="selectDueDate" resultClass="String" parameterClass="java.util.HashMap">
		/** AccInvInvoiceSQL.xml : selectDueDate */
        select
            CONVERT(VARCHAR
                      ,case when trdp.cr_term_cd = 'A'
					     then dateadd(d, convert(int, trdp.cr_term_dt), #post_dt#)
					     when trdp.cr_term_cd = 'B'
					     then dateadd(month,1,#post_dt#)-(day(#post_dt#))
					     when trdp.cr_term_cd = 'C'
					     then dateadd(month,2,#post_dt#)-(day(#post_dt#))
					     when trdp.cr_term_cd = 'D'
					     then dateadd(d, convert(int, trdp.cr_term_dt), dateadd(month,1,#post_dt#)-(day(#post_dt#)))
					end
				   ,112) AS due_dt

        from TB_TRDP    trdp
       where trdp_cd  = #trdp_cd#

    </select>

    <!-- #2105 [PATENT] Option 에 따른 Invoice 자동 생성 기능 추가 -->
    <update id="updateAutoFRTSts" parameterClass="java.util.HashMap">
    	UPDATE tb_frt
    	   SET  inv_seq 		= #inv_seq#
    	       ,sls_ofc_cd      = #sls_ofc_cd# <!-- #2105 누락수정 -->
    	       ,inv_xcrt_dt     = #inv_xcrt_dt#             <!-- #2105  Ex.date 누락수정 -->
    	       ,inv_sts_cd		= #inv_sts_cd#
    	       ,inv_post_dt		= #inv_post_dt#
    	       ,modi_usrid		= #proc_usrid#
			   ,modi_ofc_cd		= #proc_ofccd#
			   ,modi_tms		= GETUTCDATE()
    	 WHERE 1=1
    	   AND intg_bl_seq = cast(#intg_bl_seq# as varchar)
    	   AND frt_seq 		= #frt_seq#
    </update>

    <!-- #2502 [PATENT] Tax Invoice -->
	<select id="searchTaxInvListDefInfo" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.TaxInvVO">
		/*  AccInvInvoiceSQL.xml > searchTaxInvListDefInfo  */

          SELECT Y.*, isnull(xch_rt_ut * inv_sum_amt,0) AS inv_xcrt_sum_amt
                 ,(select eng_usr_nm from tb_usr where usrid = issued_by )  AS issued_by_nm
            FROM (
          SELECT Z.*,  inv_aply_xcrt2 as inv_aply_xcrt
            FROM (
                 SELECT MAX(inv_dtl.INV_POST_DT)		AS inv_post_dt
		    	       ,MAX(inv_dtl.INV_DT)				AS inv_dt
		    	       ,MAX(inv_dtl.INV_DUE_DT)			AS inv_due_dt
				       ,MAX(inv_mst.OFC_CD)				AS ofc_cd
				       ,MAX(inv_mst.INV_DEPT_CD)		AS inv_dept_cd
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN 'A/R'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN 'DEBIT'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN 'CREDIT'
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN 'A/P'
				        END								AS inv_tp

				       ,MAX(inv_dtl.INV_NO)				AS inv_no
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) = 'S' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'D' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'C' THEN MAX(inv_dtl.INV_NO)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) = 'B' THEN MAX(inv_dtl.BUY_INV_NO)
				        END 							AS buy_inv_no
				        ,CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.doc_ref_no)
							ELSE
						       CASE WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.REF_NO)
						             WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.REF_NO)
						        END
						END AS ref_no
					   , CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.MBL_NO)
							ELSE	MAX(CASE WHEN bl.intg_bl_seq is not null THEN bl.bl_no ELSE oth.mbl_no END)
						END 	AS bl_no
			           , CASE WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.mbl_no)
			                ELSE CASE
			                    WHEN MAX(frt.intg_bl_seq) is not null THEN CASE
			                        WHEN MAX(bl.biz_clss_cd) = 'M' THEN MAX(bl.bl_no)
			                        ELSE ''
			                    END
			                    WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.mbl_no)
			                END
			            END  AS mbl_no

			            ,CASE
			                WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.hbl_no)
			                ELSE CASE
			                    WHEN MAX(frt.intg_bl_seq) is not null THEN CASE
			                        WHEN MAX(bl.biz_clss_cd) = 'H' THEN MAX(bl.bl_no)
			                        ELSE ''
			                    END
			                    WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.hbl_no)
			                END
			            END  AS hbl_no

						,MAX(inv_dtl.INV_APLY_CURR_CD)   AS inv_aply_curr_cd
				       ,MAX(inv_dtl.INV_APLY_XCRT)		AS inv_aply_xcrt2
				       ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN MAX(inv_dtl.INV_SUM_AMT)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN MAX(inv_dtl.INV_SUM_AMT) * -1
				        END								AS inv_sum_amt

					   ,CASE WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('S','D') THEN isnull(MAX(inv_dtl.BAL_AMT),0)
				             WHEN MAX(inv_mst.sell_buy_tp_cd) IN ('B','C') THEN isnull(MAX(inv_dtl.BAL_AMT),0) * -1
				        END								AS bal_sum_amt

				       ,MAX(inv_dtl.inv_seq)			AS inv_seq
				       ,MAX(inv_mst.trdp_cd)			AS trdp_cd
					   ,MAX(trdp.eng_nm)				AS trdp_nm

				       ,CASE WHEN isnull(MAX(inv_dtl.BAL_AMT),0) = 0 THEN '1'
				             ELSE '0'
				        END 							AS clr_flag
				       ,MAX(inv_mst.sell_buy_tp_cd)		AS sell_buy_tp_cd

						,MAX(inv_mst.AIR_SEA_CLSS_CD)	AS AIR_SEA_CLSS_CD
						,(case
				            when MAX(TIDB.MODI_TMS) IS null then MAX(inv_dtl.modi_tms)
				            when MAX(inv_dtl.modi_tms)  > MAX(TIDB.MODI_TMS) then MAX(inv_dtl.modi_tms)
				            else MAX(TIDB.MODI_TMS)
				        end)  as modi_tms

				       ,MAX(bnd.bnd_clss_cd) as bnd_clss_cd
					   ,MAX(bl.biz_clss_cd)  as biz_clss_cd
					   ,MAX(bl.intg_bl_seq)  as intg_bl_seq
                	   ,max(inv_mst.inv_rmk) as inv_rmk
                       ,#s_paid_currency# as paid_currency
		               ,case when  MAX(inv_dtl.INV_APLY_CURR_CD) =    #s_paid_currency# then 1
		                     else   MAX(ex_rate.xch_rt_ut)
		                end as xch_rt_ut
		               , CASE
		                    WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.CURR_CD)
		                    ELSE
								CASE
									WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.CURR_CD)
									WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.CURR_CD)
								END
		                END AS bl_curr_cd
		               , CASE
		                    WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.post_dt)
		                    ELSE
								CASE
									WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bl.post_dt)
									WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.post_dt)
								END
		                END AS bl_post_dt
		               , CASE
		                    WHEN MAX(inv_mst.INV_DEPT_CD) ='WMS' THEN MAX(wms.issued_by)
		                    ELSE
								CASE
									WHEN MAX(frt.intg_bl_seq) is not null THEN MAX(bnd.issued_by)
									WHEN MAX(frt.oth_seq) is not null THEN MAX(oth.issued_by)
								END
		                END AS issued_by
				  FROM TB_INV inv_mst
				    LEFT OUTER JOIN TB_INV_DTL inv_dtl
				     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
				    LEFT JOIN TB_FRT frt
				     	ON inv_mst.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
					LEFT JOIN TB_INTG_BL bl
				     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
					LEFT JOIN TB_OTH_SALES oth
				     	ON frt.OTH_SEQ = oth.OTH_SEQ AND oth.delt_flg = 'N'
					LEFT JOIN TB_WM_DOC_MST wms
				     	ON frt.WMS_SEQ = wms.WM_DOC_SEQ AND wms.delt_flg = 'N'
				    LEFT OUTER JOIN  TB_OFC ofc
				        ON ofc.OFC_CD = inv_mst.OFC_CD AND ofc.delt_flg = 'N'
					LEFT OUTER JOIN TB_ADD_INFO_BND bnd
				     	ON frt.INTG_BL_SEQ = bnd.INTG_BL_SEQ and bnd.DELT_FLG = 'N'
				    LEFT OUTER JOIN TB_TRDP trdp
				        ON trdp.trdp_cd = inv_mst.trdp_cd

					    LEFT OUTER JOIN
			            (
			                SELECT
			                    MODI_TMS,
			                    INV_SEQ
			                FROM
			                    TB_INV_DTL_BLCK
			            ) TIDB
			                ON TIDB.INV_SEQ = INV_DTL.INV_SEQ
						LEFT OUTER JOIN
						(
								SELECT  xch_rt_ut ,fm_curr_cd,to_curr_cd ,dt_clss_cd ,aply_fm_dt,aply_to_dt
								  FROM  tb_finc_perf_xcrt
								 WHERE  delt_flg = 'N'
						)  ex_rate
							ON  ex_rate.fm_curr_cd = inv_dtl.INV_APLY_CURR_CD
						   		AND  ex_rate.to_curr_cd = #s_paid_currency#
							    AND (  <![CDATA[
							    		  ( dt_clss_cd = 'M' AND aply_fm_dt <=  inv_dtl.INV_POST_DT       AND     aply_to_dt >= inv_dtl.INV_POST_DT)
								 	  OR  ( dt_clss_cd = 'D' AND aply_fm_dt  = inv_dtl.INV_POST_DT)
								 	   ]]>
								    )

				 WHERE isnull(inv_mst.tax_bil_flg, 'N') != 'Y'
				   AND inv_mst.sell_buy_tp_cd IN('S')
				   AND inv_dtl.inv_sum_amt != 0
				   AND inv_mst.DELT_FLG = 'N'
				   AND inv_mst.TRDP_CD = #s_cust_cd#
     	           AND NOT EXISTS (
		                SELECT
		                    'X'
		                FROM
		                    TB_TAX_INV_dtl dtl
		                     join TB_TAX_INV_MST mst on dtl.tax_inv_seq =mst.tax_inv_seq
		                WHERE mst.void_yn = 'N'
		                  and dtl.inv_seq  = inv_dtl.inv_seq
		            )

		          <isEqual property="s_dept" compareValue="OE">
		          	and inv_mst.inv_dept_cd IN ('SOM','SOH')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="OI">
		            and inv_mst.inv_dept_cd IN ('SIM','SIH')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="AE">
		          	and inv_mst.inv_dept_cd IN ('AOM','AOH')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="AI">
		          	and inv_mst.inv_dept_cd IN ('AIM','AIH')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="OT">
		          	and inv_mst.inv_dept_cd IN ('OTH')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="WM">
		          	and inv_mst.inv_dept_cd IN ('WMS')
		          </isEqual>
		          <isEqual property="s_dept" compareValue="">
		          	and inv_mst.inv_dept_cd = ''
		          </isEqual>


				  <isNotEmpty property="s_ofc_cd">
				  	AND inv_mst.OFC_CD = #s_ofc_cd#
				  </isNotEmpty>
  				  <isNotEmpty property="s_inv_no">
				  	AND ( inv_dtl.INV_NO = #s_inv_no# OR inv_dtl.BUY_INV_NO = #s_inv_no# )
				  </isNotEmpty>


				 GROUP BY inv_mst.INV_SEQ
				 ) Z
				 where 1=1
				 <isEqual property="s_type" compareValue="REF_NO">
				 	<isNotEmpty property="s_type_no">
						and  REF_NO= #s_type_no#
				 	</isNotEmpty>
				 </isEqual>
				 <isEqual property="s_type" compareValue="REF_NO">
					AND ref_no like #s_type_no# + '%'
				 </isEqual>
				 <isEqual property="s_type" compareValue="MBL_NO">
					AND mbl_no like #s_type_no# + '%'
				 </isEqual>
				 <isEqual property="s_type" compareValue="HBL_NO">
					AND hbl_no like #s_type_no# + '%'
				 </isEqual>



			) Y
    </select>


 <!-- #2502 [PATENT] Tax Invoice -->
    <insert id="insertTaxInvMst" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.MstTaxInvVO">
    /*AccInvInvoiceSQL.xml > insertTaxInvMst*/
		insert TB_TAX_INV_MST (
		  TAX_INV_NO
		  ,TRDP_CD
		  ,TRDP_NM
		  ,DEPT_CD
		  ,CURR_CD
			,ISS_DT
			,TAX_INV_TIT
			,TAX_INV_TP
			,TAX_RATIO
			,VOID_YN
			,VOID_DT
			,PNT_YN
			,PNT_DT
			,PNT_USRID
			,INV_SUM_AMT
			,TAX_SUM_AMT
			,TTL_SUM_AMT
			,RMK
			,P_OFC_CD
			,TAX_INV_STS_CD
			,BNAK_STS_CD
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
	)values(
		    #tax_inv_no#
		    ,#trdp_cd#
		    ,#trdp_nm#
		    ,#dept_cd#
		    ,#curr_cd#
			,#iss_dt#
			,#tax_inv_tit#
			,#tax_inv_tp#
			,#tax_ratio#
			,#void_yn#
			,#void_dt#
			,#pnt_yn#
			,#pnt_dt#
			,#pnt_usrid#
			,#inv_sum_amt#
			,#tax_sum_amt#
			,#ttl_sum_amt#
			,#rmk#
			,#p_ofc_cd#
			,#tax_inv_sts_cd#
			,#bnak_sts_cd#
			,#delt_flg#
			,#rgst_usrid#
			,#rgst_ofc_cd#
			,GETDATE()
			,#modi_usrid#
			,#modi_ofc_cd#
			,GETDATE()
	)

			<selectKey resultClass="int" keyProperty="tax_inv_seq">
				<!-- SELECT SCOPE_IDENTITY() as id -->
				SELECT IDENT_CURRENT('TB_TAX_INV_MST') as tax_inv_seq

			</selectKey>

    </insert>
 <!-- #2502 [PATENT] Tax Invoice -->
    <update id="updateTaxInvMst" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.MstTaxInvVO">
    /*AccInvInvoiceSQL.xml > updateTaxInvMst*/
update  TB_TAX_INV_MST set
		  TAX_INV_NO         =	    #tax_inv_no#
		  ,TRDP_CD           =		 #trdp_cd#
		  ,TRDP_NM           =		 #trdp_nm#
		  ,DEPT_CD           =		 #dept_cd#
		  ,CURR_CD           =		 #curr_cd#
		  ,ISS_DT            =		 #iss_dt#
			,TAX_INV_TIT       =		 #tax_inv_tit#
			,TAX_INV_TP        =		 #tax_inv_tp#
			,TAX_RATIO         =		 #tax_ratio#
			,VOID_YN           =		 #void_yn#
			,VOID_DT           =		 #void_dt#
			,PNT_YN            =		 #pnt_yn#
			,PNT_DT            =		 #pnt_dt#
			,PNT_USRID         =		 #pnt_usrid#
			,INV_SUM_AMT       =		 #inv_sum_amt#
			,TAX_SUM_AMT       =		 #tax_sum_amt#
			,TTL_SUM_AMT       =		 #ttl_sum_amt#
			,RMK               =		 #rmk#
			,P_OFC_CD          =		 #p_ofc_cd#
			,TAX_INV_STS_CD    =		 #tax_inv_sts_cd#
			,BNAK_STS_CD       =		 #bnak_sts_cd#
			,DELT_FLG          =		 #delt_flg#
			,MODI_USRID        =		 #modi_usrid#
			,MODI_OFC_CD       =		 #modi_ofc_cd#
			,MODI_TMS          =		 GETDATE()
       WHERE  TAX_INV_SEQ  = #tax_inv_seq#

    </update>

  <!-- #2502 [PATENT] Tax Invoice -->
    <insert id="insertTaxInvDtl" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.TaxInvVO">
    /*AccInvInvoiceSQL.xml > insertTaxInvDtl*/
		insert TB_TAX_INV_DTL (
		  TAX_INV_SEQ
			,DTL_SEQ
			,INV_SEQ
			,INV_NO
			,CURR_CD
			,OFC_CD
			,POST_DT
			,REF_NO
			,BL_NO
			,ISSUED_BY
			,XCRT
			,INV_AMT
			,TAX_AMT
			,TTL_AMT
			,TAX_RATIO
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
		)values(
		   #tax_inv_seq#
			,(select isnull(max(DTL_SEQ),0) + 1 from TB_TAX_INV_DTL where tax_inv_seq =#tax_inv_seq# )
			,#inv_seq#
			,#inv_no#
			,#inv_aply_curr_cd#
			,#ofc_cd#
			,#bl_post_dt#
			,#ref_no#
			,#bl_no#
			,#issued_by#
			,#xch_rt_ut#
			,#inv_xcrt_sum_amt#
			,#tax_amt#
			,#ttl_amt#
			,#tax_ratio#
			,#delt_flg#
			,#rgst_usrid#
			,#rgst_ofc_cd#
			,GETDATE()
			,#modi_usrid#
			,#modi_ofc_cd#
			,GETDATE()
		)
    </insert>

  <!-- #2502 [PATENT] Tax Invoice -->
    <update id="updateTaxInvDtl" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.TaxInvVO">
    /*AccInvInvoiceSQL.xml > updateTaxInvDtl*/
			update TB_TAX_INV_DTL  SET
				INV_SEQ       =  #inv_seq#
				,INV_NO        =  #inv_no#
				,CURR_CD       =  #inv_aply_curr_cd#
				,OFC_CD        =  #ofc_cd#
				,POST_DT       =  #bl_post_dt#
				,REF_NO        =  #ref_no#
				,BL_NO         =  #bl_no#
				,ISSUED_BY     =  #issued_by#
				,XCRT          =  #xch_rt_ut#
				,INV_AMT       =  #inv_xcrt_sum_amt#
				,TAX_AMT       =  #tax_amt#
				,TTL_AMT       =  #ttl_amt#
				,TAX_RATIO     =  #tax_ratio#
				,DELT_FLG      =  #delt_flg#
				,MODI_USRID    =  #modi_usrid#
				,MODI_OFC_CD   =  #modi_ofc_cd#
				,MODI_TMS      =  GETDATE()
	    where TAX_INV_SEQ = #tax_inv_seq#
	      and DTL_SEQ     = #dtl_seq#
    </update>


    <!-- #2502 [PATENT] Tax Invoice -->
	<select id="searchTaxInvList" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.TaxInvListVO">
		/*  AccInvInvoiceSQL.xml > searchTaxInvList  */
		select
			mst.TAX_INV_SEQ           as tax_inv_seq
			,MAX(dtl.BL_NO)       as bl_no
			,MAX(mst.TRDP_CD )    as trdp_cd
			,MAX(mst.TRDP_NM)     as trdp_nm
			,MAX(mst.TAX_INV_TIT) as tax_inv_tit
			,MAX(mst.TAX_INV_NO)  as tax_inv_no
			,MAX(mst.ISS_DT)      as iss_dt
	        ,max(bl.trnk_vsl_nm)+'/'+max(bl.trnk_voy)       as  vol
	        ,max(bl.pol_nm)  as pol
	        ,max(bl.pod_nm)  as pod
			,MAX(mst.INV_SUM_AMT) as inv_sum_amt
			,MAX(mst.TAX_SUM_AMT) as tax_sum_amt
			,MAX(mst.VOID_YN)     as void_yn
			,MAX(mst.TAX_INV_TP)  as tax_inv_tp
			,max(mst.TAX_INV_STS_CD) as tax_inv_sts_cd
			,'' d_stats
		  from TB_TAX_INV_MST mst
		  LEFT OUTER JOIN TB_TAX_INV_DTL dtl
		     on( mst.TAX_INV_SEQ = dtl.TAX_INV_SEQ )
		    LEFT OUTER JOIN TB_INV inv_mst
					on(dtl.INV_SEQ = inv_mst.INV_SEQ)
		    LEFT OUTER JOIN TB_INV_DTL inv_dtl
		     	ON inv_mst.INV_SEQ = inv_dtl.INV_SEQ and inv_dtl.DELT_FLG = 'N'
		    LEFT JOIN TB_FRT frt
		     	ON inv_mst.INV_SEQ = frt.INV_SEQ AND frt.delt_flg = 'N'
			LEFT JOIN TB_INTG_BL bl
		     	ON frt.INTG_BL_SEQ = bl.INTG_BL_SEQ AND bl.delt_flg = 'N'
		  where mst.delt_flg   = 'N'

  		  <isNotEmpty property="s_ref_no">
  		  	and dtl.REF_NO = #s_ref_no#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_cust_cd">
  		  	and mst.TRDP_CD = #s_cust_cd#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_tax_inv_no">
  		  	and mst.TAX_INV_NO like #s_tax_inv_no# + '%'
  		  </isNotEmpty>
  		  <isNotEmpty property="s_curr">
  		  	and mst.CURR_CD = #s_curr#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_dept">
  		  	and mst.DEPT_CD = #s_dept#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_bl_no">
  		  	and dtl.BL_NO = #s_bl_no#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_inv_tit">
  		  	and mst.TAX_INV_TIT = #s_inv_tit#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_issuer">
  		  	and dtl.ISSUED_BY = #s_issuer#
  		  </isNotEmpty>
  		  <isNotEmpty property="s_inv_sts">
  		  	and mst.TAX_INV_STS_CD = #s_inv_sts#
  		  </isNotEmpty>
          <isNotNull property="s_iss_strdt">
             <![CDATA[ AND CONVERT(VARCHAR, mst.rgst_tms, 112) BETWEEN #s_iss_strdt# AND #s_iss_enddt#]]>
          </isNotNull>

		  group by mst.TAX_INV_SEQ

    </select>


 <!-- #2502 [PATENT] Tax Invoice -->
    <insert id="insertTaxInvHisMst" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.MstTaxInvVO">
    /*AccInvInvoiceSQL.xml > insertTaxInvHisMst*/
		insert TB_TAX_INV_HIS_MST (
		   TAX_INV_SEQ
		  ,MODI_SEQ
		  ,TAX_INV_NO
		  ,TRDP_CD
		  ,TRDP_NM
		  ,DEPT_CD
		  ,CURR_CD
			,ISS_DT
			,TAX_INV_TIT
			,TAX_INV_TP
			,TAX_RATIO
			,VOID_YN
			,VOID_DT
			,PNT_YN
			,PNT_DT
			,PNT_USRID
			,INV_SUM_AMT
			,TAX_SUM_AMT
			,TTL_SUM_AMT
			,RMK
			,P_OFC_CD
			,TAX_INV_STS_CD
			,BNAK_STS_CD
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
	)values(
		     #tax_inv_seq#
		    ,(select isnull(max(MODI_SEQ),0) + 1 from TB_TAX_INV_HIS_MST )
		    ,#tax_inv_no#
		    ,#trdp_cd#
		    ,#trdp_nm#
		    ,#dept_cd#
		    ,#curr_cd#
			,#iss_dt#
			,#tax_inv_tit#
			,#tax_inv_tp#
			,#tax_ratio#
			,#void_yn#
			,#void_dt#
			,#pnt_yn#
			,#pnt_dt#
			,#pnt_usrid#
			,#inv_sum_amt#
			,#tax_sum_amt#
			,#ttl_sum_amt#
			,#rmk#
			,#p_ofc_cd#
			,#tax_inv_sts_cd#
			,#bnak_sts_cd#
			,#delt_flg#
			,#rgst_usrid#
			,#rgst_ofc_cd#
			,GETDATE()
			,#modi_usrid#
			,#modi_ofc_cd#
			,GETDATE()
	)

    </insert>

 <!-- #2502 [PATENT] Tax Invoice -->
    <insert id="insertTaxInvHisDtl" parameterClass="com.clt.apps.fis.acc.inv.invoice.dto.MstTaxInvVO">
    /*AccInvInvoiceSQL.xml > insertTaxInvHisDtl*/
		insert TB_TAX_INV_HIS_DTL (
		  TAX_INV_SEQ
		  ,MODI_SEQ
			,DTL_SEQ
			,INV_SEQ
			,INV_NO
			,CURR_CD
			,OFC_CD
			,POST_DT
			,REF_NO
			,BL_NO
			,ISSUED_BY
			,XCRT
			,INV_AMT
			,TAX_AMT
			,TTL_AMT
			,TAX_RATIO
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
		)
		select
		  TAX_INV_SEQ
		   ,(select isnull(max(MODI_SEQ),0) + 1 from TB_TAX_INV_HIS_DTL )
			,DTL_SEQ
			,INV_SEQ
			,INV_NO
			,CURR_CD
			,OFC_CD
			,POST_DT
			,REF_NO
			,BL_NO
			,ISSUED_BY
			,XCRT
			,INV_AMT
			,TAX_AMT
			,TTL_AMT
			,TAX_RATIO
			,DELT_FLG
			,RGST_USRID
			,RGST_OFC_CD
			,RGST_TMS
			,MODI_USRID
			,MODI_OFC_CD
			,MODI_TMS
		from TB_TAX_INV_DTL where TAX_INV_SEQ = #tax_inv_seq#
    </insert>

    <!-- #2502 [PATENT] Tax Invoice -->
	<select id="searchTaxInvListEntry" parameterClass="HashMap" resultClass="com.clt.apps.fis.acc.inv.invoice.dto.TaxInvVO">
		/*  AccInvInvoiceSQL.xml > searchTaxInvListEntry  */

		    select

		        dtl.BL_NO         as bl_no
		        ,dtl.post_dt      as inv_post_dt
		        ,(select eng_usr_nm from tb_usr where usrid = dtl.issued_by )  AS issued_by_nm
		        ,dtl.CURR_CD      as inv_aply_curr_cd
		        ,inv_mst.INV_RMK  as inv_rmk
		        ,CASE
		            WHEN inv_mst.sell_buy_tp_cd IN ('S','D') THEN inv_dtl.INV_SUM_AMT
		            WHEN inv_mst.sell_buy_tp_cd IN ('B','C') THEN inv_dtl.INV_SUM_AMT * -1
		        END               AS inv_sum_amt
		        ,mst.CURR_CD      as paid_currency
		        ,dtl.XCRT         as xch_rt_ut
		        ,dtl.INV_AMT      as inv_xcrt_sum_amt
		        ,dtl.TAX_RATIO    as tax_ratio
		        ,dtl.TAX_AMT      AS tax_amt

		        ,mst.trdp_cd      as trdp_cd
		        ,mst.trdp_nm      as trdp_nm
		        ,mst.DEPT_CD      as dept_cd
		        ,mst.TAX_INV_TIT  as tax_inv_tit
		        ,mst.TAX_INV_NO   as tax_inv_no
		        ,mst.ISS_DT       as iss_dt
		        ,mst.VOID_YN      as void_yn
		        ,mst.TAX_INV_TP   as tax_inv_tp
		        ,mst.TAX_INV_SEQ  as tax_inv_seq
		        ,mst.rmk  as rmk
		        ,dtl.DTL_SEQ      as dtl_seq
		        ,dtl.inv_seq      as inv_seq
		        ,dtl.inv_no       as inv_no
		        ,dtl.ofc_cd       as ofc_cd
		        ,dtl.post_dt      as bl_post_dt
		        ,dtl.ref_no       as ref_no
		        ,dtl.issued_by    as issued_by
		        ,'1' as chk_flag
		    from
		        TB_TAX_INV_MST mst
		    left outer join
		        TB_TAX_INV_DTL dtl
		            on(
		                mst.TAX_INV_SEQ = dtl.TAX_INV_SEQ
		            )
		    left outer join
		        TB_INV inv_mst ON(dtl.INV_SEQ = inv_mst.INV_SEQ )
		    left outer join
		        TB_INV_DTL inv_dtl ON(inv_dtl.INV_SEQ = inv_mst.INV_SEQ )
		    where
		        mst.TAX_INV_SEQ = #f_tax_inv_seq#
		        AND mst.delt_flg   = 'N'
    </select>

  <!-- #2502 [PATENT] Tax Invoice -->
    <update id="deleteTaxInvDtl" parameterClass="HashMap">
    /*AccInvInvoiceSQL.xml > deleteTaxInvDtl*/
			update TB_TAX_INV_DTL  SET
				DELT_FLG      =  'Y'
				,MODI_USRID    =  #modi_usrid#
				,MODI_OFC_CD   =  #modi_ofc_cd#
				,MODI_TMS      =  GETDATE()
	    where TAX_INV_SEQ = #f_tax_inv_seq#
    </update>
  <!-- #2502 [PATENT] Tax Invoice -->
    <update id="deleteTaxInvMst" parameterClass="HashMap">
    /*AccInvInvoiceSQL.xml > deleteTaxInvMst*/
			update TB_TAX_INV_MST  SET
			    TAX_INV_STS_CD = 'D'
				,VOID_YN       =  'Y'
			    ,VOID_DT       =  GETDATE()
				,MODI_USRID    =  #modi_usrid#
				,MODI_OFC_CD   =  #modi_ofc_cd#
				,MODI_TMS      =  GETDATE()
	    where TAX_INV_SEQ = #f_tax_inv_seq#
    </update>
    <!-- #1489 [BNX] AR INVOICE -->
	<select id="selectMarkInfoByBLRSQL" parameterClass="java.util.HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > selectMarkInfoByBLRSQL  */
    	SELECT
    		MK_TXT
    	FROM
    		TB_INTG_BL
    	WHERE
    		INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)
    </select>
    
    <select id="selectMarkInfoByOtherRSQL" parameterClass="java.util.HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > selectMarkInfoByOtherRSQL  */
    	SELECT INT_MEMO 
    	  FROM TB_OTH_SALES 
    	 WHERE OTH_SEQ = #oth_seq#
    </select>

    <!-- #855 [SUNWAY] PREVENT AP CREATION BEFORE AR CREATION    -->
    <select id="selectRoleControl" parameterClass="HashMap" resultClass="HashMap">
		SELECT COUNT(*) AS INV_CNT
			 ,
			 (
				 SELECT
					ISNULL(MAX(A.USE_FLG), 'N') AS ROLE_OPT
				 FROM TB_ROLE_FNC A, TB_USR B
				 WHERE A.ROLE_CD = B.ROLE_CD
				 AND ROLE_FNC_CD = #role_fnc_cd#
				 AND B.USRID     = #user_id#
			 ) AS ROLE_OPT
		     ,(
					SELECT ISNULL(OPT_VAL,'')   
				    FROM TB_SYS_OPT
		 		    WHERE OPT_KEY = #opt_key#
			 ) AS OPT_VAL
		  FROM TB_INTG_BL BL
		  JOIN TB_FRT FRT ON BL.INTG_BL_SEQ = FRT.INTG_BL_SEQ
		  JOIN TB_INV_DTL DTL ON FRT.INV_SEQ = DTL.INV_SEQ
		  JOIN TB_INV INV ON INV.INV_SEQ = DTL.INV_SEQ
		 WHERE 1=1
		  <isNotEqual property="sell_buy_tp_cd" compareValue="D">
			  AND FRT.sell_buy_tp_cd  =  #sell_buy_tp_cd#
		  </isNotEqual>
		  <isEqual property="sell_buy_tp_cd" compareValue="D">
			  AND INV.sell_buy_tp_cd  =  #sell_buy_tp_cd#
		  </isEqual>
		   AND FRT.INTG_BL_SEQ     =  cast(#intg_bl_seq# as varchar)
		   AND BL.DELT_FLG  ='N'
		   AND FRT.DELT_FLG ='N'
		   AND DTL.DELT_FLG ='N'
    </select>

	<!-- #5859 [StarCluster-Mex] Adding Paid Column & Other filing A/P prevent logic -->
    <select id="selectRoleControlOth" parameterClass="HashMap" resultClass="HashMap">
		SELECT COUNT(*) AS INV_CNT
			 ,
			 (
				 SELECT
					ISNULL(MAX(A.USE_FLG), 'N') AS ROLE_OPT
				 FROM TB_ROLE_FNC A, TB_USR B
				 WHERE A.ROLE_CD = B.ROLE_CD
				 AND ROLE_FNC_CD = #role_fnc_cd#
				 AND B.USRID     = #user_id#
			 ) AS ROLE_OPT,
			 (
					SELECT ISNULL(OPT_VAL,'')   
				    FROM TB_SYS_OPT
		 		    WHERE OPT_KEY = #opt_key#
			 ) AS OPT_VAL
		     
		  FROM TB_OTH_SALES BL
		  JOIN TB_FRT FRT ON BL.OTH_SEQ = FRT.OTH_SEQ
		  JOIN TB_INV_DTL DTL ON FRT.INV_SEQ = DTL.INV_SEQ
		  JOIN TB_INV INV ON INV.INV_SEQ = DTL.INV_SEQ
		 WHERE 1=1
		  <isNotEqual property="sell_buy_tp_cd" compareValue="D">
			  AND FRT.sell_buy_tp_cd  =  #sell_buy_tp_cd#
		  </isNotEqual>
		  <isEqual property="sell_buy_tp_cd" compareValue="D">
			  AND INV.sell_buy_tp_cd  =  #sell_buy_tp_cd#
		  </isEqual>
		   AND FRT.OTH_SEQ     =  #oth_seq#
		   AND BL.DELT_FLG  ='N'
		   AND FRT.DELT_FLG ='N'
		   AND DTL.DELT_FLG ='N'
    </select>

	<select id="searchFrtModiTms" parameterClass="java.util.HashMap" resultClass="String">
		/*  AccInvInvoiceSQL.xml > searchFrtModiTms  */
		 SELECT	 MAX(fr.modi_tms)
           FROM  tb_frt    fr
		  WHERE fr.frt_seq IN ( $frt_seq$ )
    </select>
    
	<select id="selectFrtReserve_field01_Check" parameterClass="FrtVO" resultClass="String">
		/*  AccInvInvoiceSQL.xml > selectFrtReserve_field01_Check  */
		    select RESERVE_FIELD01
			from tb_frt
			where 1=1
			and frt_seq= #frt_seq#
    </select>
        
    
    
    <update id="upateFrtReserve_field1" parameterClass="String">
	    /*AccInvInvoiceSQL.xml > upateFrtReserve_field1*/
			UPDATE TB_FRT
			SET RESERVE_FIELD01='Y'
			WHERE 1=1
			AND FRT_SEQ= #frt_seq#
    </update>

	<!-- #6376 [KING FREIGHT NY] Add a warning message (Zendesk #2334) -->
	<select id="selectHouseActualShipper" parameterClass="java.util.HashMap" resultClass="String">
		SELECT	act.trdp_cd AS act_shpr_trdp_cd
		FROM tb_bl_prnr act
		LEFT OUTER JOIN tb_intg_bl bl
		  ON bl.intg_bl_seq = act.intg_bl_seq
		  AND act.bl_trdp_tp_cd = 'S02'
		  AND act.delt_flg = 'N'
		WHERE bl.delt_flg = 'N'
		AND bl.air_sea_clss_cd = 'S'
		AND bl.intg_bl_seq = cast(#intg_bl_seq# as varchar)
    </select>
    
    <!-- OFVFOUR-7147 [ACL US] Other BL deleted after invoice created -->
    <select id="checkOtherBLExistence" parameterClass="java.util.HashMap" resultClass="String">
		SELECT COUNT(oth.oth_seq)
		FROM tb_oth_sales oth
		WHERE oth.delt_flg = 'N'
		  AND oth_seq = #oth_seq#
    </select>
    
    <select id="checkBLExistence" parameterClass="java.util.HashMap" resultClass="String">
		SELECT COUNT(bl.INTG_BL_SEQ)
		FROM TB_INTG_BL bl
		WHERE bl.delt_flg = 'N'
		  AND INTG_BL_SEQ = cast(#intg_bl_seq# as varchar)
    </select>

	<!-- OFVFOUR-7746: [SENKO USA] Add HB/L no. to Title field on emails for D/N and C/N -->
	<select id="checkMailTitleAr" parameterClass="java.util.HashMap" resultClass="String">
		SELECT use_flg
		FROM TB_COM_CD_DTL com_dtl
		WHERE com_dtl.com_cd = 'ACM01'
		AND com_dtl.cd_val = 'AR'
	</select>
	<select id="checkMailTitleAp" parameterClass="java.util.HashMap" resultClass="String">
		SELECT use_flg
		FROM TB_COM_CD_DTL com_dtl
		WHERE com_dtl.com_cd = 'ACM01'
		AND com_dtl.cd_val = 'AP'
	</select>
	<select id="checkMailTitleDc" parameterClass="java.util.HashMap" resultClass="String">
		SELECT use_flg
		FROM TB_COM_CD_DTL com_dtl
		WHERE com_dtl.com_cd = 'ACM01'
		AND com_dtl.cd_val = 'DC'
	</select>
</sqlMap>