<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="wms.WHClosing">
	<!-- Inbound Booking Search 조회 -->
	<typeAlias alias="WHClosingVO" 	type="com.clt.apps.fis.wms.whclosing.dto.WHClosingVO"/>
	<select id="searchClosingMgmtInfo_CLS" resultClass="java.lang.String">
		/*WHClosing.searchClosingMgmtInfo_CLS*/
		SELECT CLS.CLS_NO
		  FROM TL_WH_CLS CLS
		 WHERE CLS.CLS_NO = #in_cls_no#
		 <!-- <isEqual property="auth_lvl" compareValue="AQ">
		 	AND CLS.OFC_CD IN (SELECT OFC_CD 
	                            FROM TB_OFC O
	                           WHERE O.USE_FLG = 'Y'
	                             AND O.MODI_OFC_CD =  #org_cd#
	                           UNION
	                          SELECT OFC_CD
	                            FROM TB_OFC O
	                           WHERE O.USE_FLG = 'Y'
	                             AND O.OFC_CD =  #org_cd#  
	                         )
		 </isEqual>
		<isEqual property="auth_lvl" compareValue="LB">
			AND CLS.OFC_CD = #org_cd#
		</isEqual> -->
	</select>
	<select id="searchClosingMgmtInfo_SO" resultClass="java.lang.String">
		/*WHClosing.searchClosingMgmtInfo_SO*/
		SELECT SO.SO_NO
		  FROM TL_WH_CLS_SO SO
		 WHERE SO.SO_NO = #in_so_no#
		<!-- <isEqual property="auth_lvl" compareValue="AQ">
	       AND SO.OFC_CD IN (SELECT OFC_CD 
	                            FROM TB_OFC O
	                           WHERE O.USE_FLG = 'Y'
	                             AND O.MODI_OFC_CD =  #org_cd#
	                           UNION
	                          SELECT OFC_CD
	                            FROM TB_OFC O
	                           WHERE O.USE_FLG = 'Y'
	                             AND O.OFC_CD =  #org_cd#  
	                         )
		</isEqual>
		<isEqual property="auth_lvl" compareValue="LB">
	       AND SO.OFC_CD = #org_cd#
		</isEqual> -->
	</select>
	
	<!-- LKH::2015-11-03 WMS4.O -->
	<select id="searchClosingMgmtDtlNoData" resultClass="WHClosingVO">
			/*WHClosing.searchClosingMgmtDtlNoData*/
		SELECT ROW_NUMBER() OVER (ORDER BY T.CLS_KEY) AS RN /*화면에서 SEQ한값을 넣어 MERGE효과를 중지시킨다*/
		     , ROW_NUMBER() OVER (ORDER BY T.CLS_KEY) AS MERGE_KEY2
		     , T.*
		  FROM (
			SELECT CLS.CLS_NO + CLS_SO.CTRT_NO AS CLS_KEY
				 , CLS.CLS_NO 
				 , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY
			     , CLS_SO.CLS_SEQ
			     , CLS_SO.CTRT_NO
			     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM
			     , CLS_SO.RTP_NO
			     , ISNULL(CLS_SO.CUST_CD, ' ') AS CUST_CD	     
			     , ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ), ' ') AS CUST_NM
			     , CLS_D.SB_CLS_CD
			     , '' AS CLS_FRT_SEQ
			     , 'N' AS STS_CD
			     , ' ' AS SO_NO
			     , '' AS RMK	     
			     , '' AS RMK2
			     , CLS_D.RATE_TP_CD
			     , CLS_D.ORDER_REL
			     , CLS_D.FRT_CD
			     , CLS_D.FRT_NM
			     , '' AS DTL_FRT_NM
			     <!-- , CLS_D.CURR_CD -->
			     , #def_ofc_curr_cd# AS CURR_CD
			     , '' AS DTL_UNIT_CD
			     , CASE WHEN CLS_D.RATE_TP_CD = 'STR' THEN #ctrt_unit# ELSE 'EA' END AS UNIT_CD
			     , CASE WHEN CLS_D.RATE_TP_CD = 'STR' THEN 
			     <isEqual property="ctrt_unit" compareValue="CBM">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.CBM, 0))
			     </isEqual>
			     
			     <isEqual property="ctrt_unit" compareValue="CBF">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.CBF, 0))
			     </isEqual> 

			     <isEqual property="ctrt_unit" compareValue="GRS_KGS">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.GRS_KGS, 0))
			     </isEqual> 

			     <isEqual property="ctrt_unit" compareValue="GRS_LBS">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.GRS_LBS, 0))
			     </isEqual> 
			     
			     <isEqual property="ctrt_unit" compareValue="NET_KGS">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.NET_KGS, 0))
			     </isEqual> 
			     
			     <isEqual property="ctrt_unit" compareValue="NET_LBS">
			     	SUM(ISNULL(CLS_D.STOCK_PERIOD, 1) * ISNULL(CLS_D.NET_LBS, 0))
			     </isEqual> 
			     
			     ELSE SUM(ISNULL(CLS_D.EA_QTY,0)) END AS UNIT_QTY
			     <!-- , '' AS UNIT_CD
			     , 0 AS UNIT_QTY -->
			     , 0 AS UNIT_PRICE
			     , 0 AS BASIC_AMT
			     , 0 AS ADJUST_AMT
			     , 0 AS TOT_AMT     
			     , 'M' AS SRC_TP_CD
			     , CLS.WH_CD
			     , dbo.TL_GET_LOC_NM(CLS.WH_CD) AS WH_NM
			     , CLS.OFC_CD
			     , CLS.CLS_DT
			     , CLS.SET_FR_DT
			     , CLS.SET_TO_DT
			     , 0 AS SUB_TOT
		         ,(SELECT CD.SRT_SEQ 
	              FROM tb_com_cd_dtl CD 
	             WHERE CD.COM_CD = 'WR0'
	               AND CD.CD_VAL = CLS_D.RATE_TP_CD
	            ) AS CD_DISP_SEQ
	            <!--  , CLS_S.FRT_SEQ  -->  
	            <!-- , '' AS WM_DOC_SEQ -->	
	            ,(SELECT WM_DOC_SEQ FROM TB_WM_DOC_MST WMDOC WHERE WMDOC.DOC_REF_NO = CLS_SO.SO_NO) AS WM_DOC_SEQ        
			  FROM TL_WH_CLS CLS 
			  		JOIN TL_WH_CLS_SO CLS_SO 
			  			ON CLS.CLS_NO =  CLS_SO.CLS_NO 
			  		JOIN TL_WH_CLS_SO_DTL CLS_D 
			  			ON CLS_SO.CLS_NO = CLS_D.CLS_NO 
			  			AND CLS_SO.CLS_SEQ = CLS_D.CLS_SEQ
			     
				
			 WHERE 1 = 1
			  	<isEqual property="search_tp" compareValue="IN_CLS_NO">
			  		AND CLS_D.CLS_NO = #in_cls_no#
			  	</isEqual>
			  	<isEqual property="search_tp" compareValue="H_CLS_NO">
			  		AND CLS_D.CLS_NO IN (
										<iterate property="in_cls_no_in" conjunction=",">#in_cls_no_in[]#</iterate>
					                  )
			  	</isEqual>
			  	<isNotEqual property="search_tp" compareValue="IN_CLS_NO">
			  		<isNotEqual property="search_tp" compareValue="H_CLS_NO">
			  			AND CLS_D.CLS_AGR_NO  = #cls_agr_no#
			  		</isNotEqual>
			  	</isNotEqual>
		     	GROUP BY CLS.CLS_NO, CLS.WH_CD, CLS.OFC_CD, CLS.CLS_DT, CLS.SET_FR_DT, CLS.SET_TO_DT
			        , CLS_SO.CLS_SEQ, CLS_SO.CTRT_NO, CLS_SO.RTP_NO, CLS_SO.CUST_CD, CLS_SO.SO_NO
		            , CLS_D.SB_CLS_CD, CLS_D.RATE_TP_CD, CLS_D.ORDER_REL, CLS_D.FRT_CD, CLS_D.FRT_NM, CLS_D.CURR_CD
		       ) T
		       ORDER BY T.CLS_NO ASC
			        , T.CLS_SEQ ASC
			        , T.SB_CLS_CD DESC /* SELL, BUY */
		            , T.CD_DISP_SEQ ASC /* TYPE의 코드순서별*/
		            , T.ORDER_REL ASC
		            , T.FRT_CD ASC
		            , T.FRT_NM ASC
		            , T.CURR_CD ASC
	</select>
	
	<!-- LKH::2015-11-03 WMS4.O -->
	<select id="searchClosingMgmtDtlNoDataUnion" resultClass="WHClosingVO">
		/*WHClosing.searchClosingMgmtDtlNoDataUnion*/
		SELECT * FROM (
			SELECT CLS.CLS_NO + CLS_SO.CTRT_NO AS CLS_KEY
				 , CLS.CLS_NO 
				 , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY
			     , CLS_SO.CLS_SEQ
			     , CLS_SO.CTRT_NO
			     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM
			     , CLS_SO.RTP_NO
			     , ISNULL(CLS_SO.CUST_CD, ' ') AS CUST_CD	     
			     , ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N'), ' ') AS CUST_NM
			     , CLS_S.SB_CLS_CD
			     , CLS_S.CLS_FRT_SEQ                
		         , CASE WHEN CLS_S.CLS_NO IS NULL THEN 'N'
			            WHEN CLS_SO.STS_CD = 'C' THEN 
											       CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0 
										             	THEN 'I'
										                ELSE CLS_SO.STS_CD
										                END
										                
		                ELSE CLS_SO.STS_CD  
		                END AS STS_CD
		         , ( SELECT TOP 1 C.INV_NO 
						FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ
							JOIN  TB_INV_DTL C ON B.INV_SEQ = C.inv_seq
						WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
					) AS INV_NO       
			     , ISNULL(CLS_SO.SO_NO, ' ') AS SO_NO
			     , CASE WHEN CLS_S.SB_CLS_CD = 'S' THEN CLS_SO.SELL_RMK
			            ELSE CLS_SO.BUY_RMK
			            END AS RMK	     
			     , CASE WHEN CLS_S.SB_CLS_CD = 'S' THEN CLS_SO.SELL_RMK
			            ELSE CLS_SO.BUY_RMK
			            END AS RMK2
			     , CLS_S.RATE_TP_CD
			     , CLS_S.ORDER_REL
			     , CLS_S.FRT_CD
			     , CLS_S.FRT_NM
			     , CLS_S.DTL_FRT_NM
			     , CLS_S.CURR_CD
			     , CLS_S.DTL_UNIT_CD
			     , CLS_S.UNIT_CD
			     , CLS_S.UNIT_QTY
			     , CLS_S.UNIT_PRICE
			     , ISNULL(CLS_S.BASIC_AMT, 0) AS BASIC_AMT
			     , ISNULL(CLS_S.ADJUST_AMT, 0) AS ADJUST_AMT
			     , ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) AS TOT_AMT     
			     , CASE WHEN CLS_S.CLS_NO IS NULL THEN 'M' ELSE CLS_S.SRC_TP_CD END AS SRC_TP_CD
			     /*, CLS.CLS_AGR_NO*/
			     , CLS.WH_CD
			     , dbo.TL_GET_LOC_NM(CLS.WH_CD) AS WH_NM
			     , CLS.OFC_CD
			     , CLS.CLS_DT
			     , CLS.SET_FR_DT
			     , CLS.SET_TO_DT
			     , SUM(ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) ) OVER ( PARTITION BY CLS.CLS_NO, CLS_SO.CLS_SEQ, CLS_S.SB_CLS_CD) AS SUB_TOT
			     ,(SELECT CD.SRT_SEQ 
	              FROM tb_com_cd_dtl CD 
	             WHERE CD.COM_CD = 'WR0'
	               AND CD.CD_VAL = CLS_S.RATE_TP_CD
	            ) AS CD_DISP_SEQ
		         , CLS_S.DISP_SEQ 	   
		         , CLS_S.FRT_SEQ 
		         ,(SELECT WM_DOC_SEQ FROM TB_WM_DOC_MST WMDOC WHERE WMDOC.DOC_REF_NO = CLS_SO.SO_NO) AS WM_DOC_SEQ
		         , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY2     
			  FROM TL_WH_CLS CLS JOIN TL_WH_CLS_SO CLS_SO ON CLS.CLS_NO =  CLS_SO.CLS_NO JOIN  TL_WH_CLS_SO_FRT CLS_S ON CLS_SO.CLS_NO = CLS_S.CLS_NO AND CLS_SO.CLS_SEQ = CLS_S.CLS_SEQ
				
			 WHERE 1 = 1
			   
			   <!-- AND ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) != 0  TinLuong Modify 20160317-->
			   <![CDATA[ 
			   AND ISNULL(CLS_S.UNIT_QTY, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) != 0
			   ]]>
			   AND CLS.CLS_NO IN (
								<iterate property="in_cls_no_in" conjunction=",">#in_cls_no_in[]#</iterate>
					              )
		
		UNION ALL
		SELECT T.*
		     , CONVERT(VARCHAR(1000), ROW_NUMBER() OVER (ORDER BY T.CLS_KEY)) AS MERGE_KEY2
		  FROM (
		    SELECT CLS.CLS_NO + CLS_SO.CTRT_NO AS CLS_KEY
				 , CLS.CLS_NO 
				 , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY
			     , CLS_SO.CLS_SEQ
			     , CLS_SO.CTRT_NO
			     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM
			     , CLS_SO.RTP_NO
			     , ISNULL(CLS_SO.CUST_CD, ' ') AS CUST_CD	     
			     , ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ), ' ') AS CUST_NM
			     , CLS_D.SB_CLS_CD
			     , NULL AS CLS_FRT_SEQ
			     , 'N' AS STS_CD
			     , ''  AS INV_NO
			     , ' ' AS SO_NO
			     , '' AS RMK	     
			     , '' AS RMK2
			     , CLS_D.RATE_TP_CD
			     , CLS_D.ORDER_REL
			     , CLS_D.FRT_CD
			     , CLS_D.FRT_NM
			     , '' AS DTL_FRT_NM
			     , CLS_D.CURR_CD
			     , '' AS DTL_UNIT_CD
			     , '' AS UNIT_CD
			     , 0 AS UNIT_QTY
			     , 0 AS UNIT_PRICE
			     , 0 AS BASIC_AMT
			     , 0 AS ADJUST_AMT
			     , 0 AS TOT_AMT     
			     , 'M' AS SRC_TP_CD
			     , CLS.WH_CD
			     , dbo.TL_GET_LOC_NM(CLS.WH_CD) AS WH_NM
			     , CLS.OFC_CD
			     , CLS.CLS_DT
			     , CLS.SET_FR_DT
			     , CLS.SET_TO_DT
			     , 0 AS SUB_TOT
			     ,(SELECT CD.SRT_SEQ 
	              FROM tb_com_cd_dtl CD 
	             WHERE CD.COM_CD = 'WR0'
	               AND CD.CD_VAL = CLS_D.RATE_TP_CD
	            ) AS CD_DISP_SEQ
		         , 1 AS DISP_SEQ
		         , NULL AS FRT_SEQ	
		         , NULL AS WM_DOC_SEQ       
			  FROM TL_WH_CLS CLS JOIN TL_WH_CLS_SO CLS_SO ON CLS.CLS_NO =  CLS_SO.CLS_NO JOIN  TL_WH_CLS_SO_DTL CLS_D ON CLS_SO.CLS_NO = CLS_D.CLS_NO AND CLS_SO.CLS_SEQ = CLS_D.CLS_SEQ
			 WHERE 1 = 1
			   AND CLS_D.CLS_NO IN (
								     <iterate property="in_cls_no_in" conjunction=",">#in_cls_no_in[]#</iterate>
					               )
			   AND CLS.CLS_NO NOT IN (
									    SELECT A.CLS_NO 
									      FROM TL_WH_CLS A JOIN TL_WH_CLS_SO B ON A.CLS_NO =  B.CLS_NO JOIN TL_WH_CLS_SO_FRT C ON B.CLS_NO = C.CLS_NO AND B.CLS_SEQ = C.CLS_SEQ
										 WHERE 1 = 1
										   <!-- AND ISNULL(C.BASIC_AMT, 0) + ISNULL(C.ADJUST_AMT, 0) != 0 --> 
										   <![CDATA[ 
										   AND ISNULL(C.UNIT_QTY, 0) + ISNULL(C.ADJUST_AMT, 0) != 0
										    ]]>
										   AND A.CLS_NO IN (
														     <iterate property="in_cls_no_in" conjunction=",">#in_cls_no_in[]#</iterate>
											               )
			                          )
		     GROUP BY CLS.CLS_NO, CLS.WH_CD, CLS.OFC_CD, CLS.CLS_DT, CLS.SET_FR_DT, CLS.SET_TO_DT
			        , CLS_SO.CLS_SEQ, CLS_SO.CTRT_NO, CLS_SO.RTP_NO, CLS_SO.CUST_CD, CLS_SO.SO_NO
		            , CLS_D.SB_CLS_CD, CLS_D.RATE_TP_CD, CLS_D.ORDER_REL, CLS_D.FRT_CD, CLS_D.FRT_NM, CLS_D.CURR_CD
		        ) T           
		) TT            
			 ORDER BY TT.CLS_NO ASC	        
			        , TT.CLS_SEQ ASC
			        , TT.SB_CLS_CD DESC /* SELL, BUY */
		            , CD_DISP_SEQ ASC /* TYPE의 코드순서별*/
		            , TT.ORDER_REL ASC
		            , TT.FRT_CD ASC
		            , TT.FRT_NM ASC
		            , TT.CURR_CD ASC
		            , TT.DISP_SEQ ASC /*입력 시 등록된 순서별*/
	</select>
	<insert id="createClosingStatus">
	/*WHClosing.createClosingStatus*/
	INSERT INTO TL_WH_CLS_AGR_MST
	  (WH_CD
	  ,CLS_MTH
	  ,BGR_SEQ
	  ,CLS_DT
	  ,SET_FR_DT
	  ,SET_TO_DT
	  ,CTRT_NO
	  ,SB_CLS_CD
	  ,RATE_TP_CD
	  ,STS_CD
	  ,STS_RSLT
	  ,FB_CLS_CD
	  ,CLS_AGR_NO
	  ,RGST_ID
	  ,RGST_OFC_CD
	  ,RGST_LOC_DT
	  ,RGST_SYS_DT)
	VALUES
	  (#wh_cd#
	  ,SUBSTRING(REPLACE(#cls_dt#, '-', ''), 1,6)
	  ,(SELECT ISNULL(MAX(T.BGR_SEQ),0)+1
	      FROM TL_WH_CLS_AGR_MST T
	     WHERE T.WH_CD = #wh_cd#
	       AND T.CLS_MTH = SUBSTRING(REPLACE(#cls_dt#, '-', ''), 1,6)
	   )
	  ,REPLACE(#cls_dt#, '-', '')
	  ,REPLACE(#set_fr_dt#, '-', '')
	  ,REPLACE(#set_to_dt#, '-', '')
	  ,#ctrt_no#
	  ,REPLACE(#sb_cls_cd#,'ALL','')
	  ,REPLACE(#rate_tp_cd#,'ALL','')
	  ,'O'
	  ,''
	  ,#fb_cls_cd#
	  ,''
	  ,#user_id#
	  ,#ofc_cd#
	  , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	  ,GETDATE()
	  )	
	</insert>
	
	<select id="searchClsFrtSeq" resultClass="java.lang.String">
	/*WHClosing.searchClsFrtSeq*/
	SELECT ISNULL(MAX(CLS_FRT_SEQ),0) + 1 AS NEXT_SEQ
      FROM TL_WH_CLS_SO_FRT
     WHERE CLS_NO = #cls_no#
       AND CLS_SEQ = #cls_seq#
       AND SB_CLS_CD = #sb_cls_cd#
	</select>
	
	<insert id="saveWhClsSoFrt">
	/*WHClosing.saveWhClsSoFrt*/
	INSERT INTO TL_WH_CLS_SO_FRT
	     ( CLS_NO
	     , CLS_SEQ
	     , SB_CLS_CD
	     , CLS_FRT_SEQ
	     , RATE_TP_CD
	     , ORDER_REL
	     , SRC_TP_CD
	     , FRT_CD
	     , FRT_NM
	     , DTL_FRT_NM
	     , CURR_CD
	     , DTL_UNIT_CD
	     , UNIT_CD
	     , UNIT_QTY
	     , UNIT_PRICE
	     , BASIC_AMT
	     , ADJUST_AMT
	     , DISP_SEQ
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	VALUES
	     ( #cls_no#
	     , #cls_seq#
	     , #sb_cls_cd#
	     , #cls_frt_seq#
	     , #rate_tp_cd#
	     , #order_rel#
	     , #src_tp_cd#
	     , #frt_cd#
	     , #frt_nm#
	     , #frt_nm#
	     , #curr_cd#
	     , #unit_cd#
	     , #unit_cd#
	     , #unit_qty#
	     , #unit_price#
	     , #basic_amt#
	     , #adjust_amt#
	     , (SELECT ISNULL(MAX(DISP_SEQ),0) + 1 
	          FROM TL_WH_CLS_SO_FRT
	         WHERE CLS_NO = #cls_no#
	       )	     
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     )
	</insert>
	
	<insert id="saveTlWhClsHrd">
	/*WHClosing.saveTlWhClsHrd*/
	INSERT INTO TL_WH_CLS_HRD
	           (CLS_NO
	           ,CUST_CD
	           ,CTRT_NO
	           ,WH_CD
	           ,OFC_CD
	           ,SORT_BY
	           ,INV_TTL_AMT
	           ,CURR_CD
	           ,STS_CD
	           ,CLS_DT
	           ,SET_FR_DT
	           ,SET_TO_DT
	           ,F_REMARK
	           ,WM_DOC_SEQ
	           ,RATE_TP_CD
	           ,REF_NO
	           ,USE_FLG
	           ,DELT_FLG
	           ,RGST_USRID
	           ,RGST_OFC_CD
	           ,RGST_TMS
	           ,RGST_LOC_DT
	           ,MODI_USRID
	           ,MODI_OFC_CD
	           ,MODI_TMS
	           ,MODI_LOC_DT
	           ,SELL_BUY_TP_CD  <!--  #1069 Closing other entry -->
	           )
	     VALUES
	           (#cls_no#
	           ,#cust_cd#
	           ,#ctrt_no#
	           ,#wh_cd#
	           ,#ofc_cd#
	           ,#sort_by#
	           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
	           ,#curr_cd#
	           ,#sts_cd#
	           ,#cls_dt#
	           ,#set_fr_dt#
	           ,#set_to_dt#
	           ,#f_remark#
	           ,#wm_doc_seq#
	           ,#rate_tp_cd#
	           ,#f_ref_no#
	           ,#use_flg#
	           ,#delt_flg#
	           ,#rgst_usrid#
	           ,#rgst_ofc_cd#
	           , GETDATE()
	           , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	           ,#modi_usrid#
	           ,#modi_ofc_cd#
	           , GETUTCDATE()
	           , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	           <!-- closing in out  & closing Storage 기본 세팅 S(AR) -->
	           ,(case when #sell_buy_tp_cd# = '' or #sell_buy_tp_cd# = null then 'S' else  #sell_buy_tp_cd# end )    <!--   #1069 Closing other entry -->
				)
	</insert>
	
	<update id="modifyTlWhClsHrd">
		/*WHClosing.modifyTlWhClsHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET CUST_CD = #cust_cd#
		      ,SORT_BY = #sort_by#
		      ,CTRT_NO = #ctrt_no#
		      ,WH_CD = #wh_cd#
		      ,OFC_CD = #ofc_cd#
		      ,WM_DOC_SEQ = #wm_doc_seq#
		      ,INV_TTL_AMT = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
		      ,CURR_CD = #curr_cd#
		      ,STS_CD = #sts_cd#
		      ,CLS_DT = #cls_dt#
		      ,SET_FR_DT = #set_fr_dt#
		      ,SET_TO_DT = #set_to_dt#
		      ,F_REMARK = #f_remark#
		      ,REF_NO = #f_ref_no#
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		      ,MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
		      <!-- closing in out  & closing Storage 기본 세팅 S(AR) -->
		      ,SELL_BUY_TP_CD = (case when #sell_buy_tp_cd# = '' or #sell_buy_tp_cd# = null then 'S' else  #sell_buy_tp_cd#  end) <!--   #1069 Closing other entry -->
		 WHERE CLS_NO = #cls_no# 
		   AND CUST_CD = #cust_cd#
	</update>
	
	<update id="modifyInvStsTlWhClsHrd">
		/*WHClosing.modifyInvStsTlWhClsHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET STS_CD = #sts_cd#		      
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		 WHERE CLS_NO = #cls_no#
		   <isNotEmpty property="cust_cd"> 
		   AND CUST_CD = #cust_cd#
		   </isNotEmpty>
	</update>
	
	<update id="modifyCfCancelTlWhClsHrd">
		/*WHClosing.modifyCfCancelTlWhClsHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET SORT_BY = #sort_by#
		      ,WM_DOC_SEQ = #wm_doc_seq#
		      ,STS_CD = #sts_cd#
		      ,CLS_DT = #cls_dt#
		      ,F_REMARK = #f_remark#
		      ,REF_NO = #f_ref_no#
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		      ,MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
		 WHERE CLS_NO = #cls_no#
		 	<isNotEmpty property="cust_cd" >
		   AND CUST_CD = #cust_cd# 
		   </isNotEmpty>
	</update>
	
	<select id="selectDocRefNoWmDocMst" resultClass="WHClosingVO">
		/*WHClosing.selectDocRefNoWmDocMst*/
		SELECT 	WM_DOC_SEQ , CUST_CD
		  FROM	TB_WM_DOC_MST
		 <!-- [#2866, #2868] Income Statement & Profit Report 차액 발생 - Binex & MSD --> 
		 <!-- WHERE	doc_ref_no = (select doc_ref_no from tb_wm_doc_mst where wm_doc_seq = #wm_doc_seq#) -->
		 WHERE	wm_doc_seq = #wm_doc_seq#
		   AND  cust_cd = #cust_cd#
		   AND  delt_flg = 'N'
	</select>
	
	<update id="modifyWHInMgmForFreightClsNo">
		/*WHClosing.modifyWHInMgmForFreightClsNo*/
		UPDATE TL_CTRT_CUST_FRT
		   SET CLS_NO          	 	 = ''
		     , CLS_DT	         	 = ''
		     , MODI_USRID            = #modi_usrid#
	         , MODI_OFC_CD           = #modi_ofc_cd#
	         , MODI_TMS           	 = GETUTCDATE()
	     WHERE 1 = 1
	       <isNotEmpty property="cls_no">
		       AND CLS_NO        = #cls_no#
	       </isNotEmpty>
	</update>
	
	<update id="modifyWHInMgmForFreightSto">
		/*WHClosing.modifyWHInMgmForFreightSto*/
		UPDATE TL_CTRT_CUST_FRT
		   SET USE_FLG          	 = 'N'
		     , DELT_FLG	         	 = 'Y'
		     , MODI_USRID            = #modi_usrid#
	         , MODI_OFC_CD           = #modi_ofc_cd#
	         , MODI_TMS           	 = GETUTCDATE()
	     WHERE 1 = 1
	       <isNotEmpty property="cls_no">
		       AND CLS_NO        = #cls_no#
	       </isNotEmpty>
	</update>
	
	<update id="deleteTlWhClsHrd">
		/*WHClosing.deleteTlWhClsHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET USE_FLG = #use_flg#
		      ,DELT_FLG = #delt_flg#
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		      ,MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
		 WHERE CLS_NO = #cls_no# 
	</update>
	
	<update id="deleteRowTlWhClsHrd">
		/*WHClosing.deleteRowTlWhClsHrd*/
		DELETE FROM TL_WH_CLS_HRD
		 WHERE CLS_NO = #cls_no# 
	</update>
	
	<!-- Closing In&Out에서 사용 -->
	<update id="modifyWHInMgmForFreightUp2">
		/*WHClosing.modifyWHInMgmForFreightUp2*/
		UPDATE TL_CTRT_CUST_FRT
		   SET cls_no = #in_cls_no#
		      ,cls_dt = #cls_dt#
		      ,sts_cd = #sts_cd#
		      ,inv_seq = #inv_seq#
		      ,sell_buy_tp_cd = #sell_buy_tp_cd#
		      ,frt_seq = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
		      <!-- ,use_flg = #use_flg#
		      ,delt_flg = #delt_flg# -->
		     <!--  ,rgst_usrid = #rgst_usrid#
		      ,rgst_ofc_cd = #rgst_ofc_cd#
		      ,rgst_tms = GETDATE() -->
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO             = #cls_no#
	</update>
	
	<!-- Closing Storage에서 사용 -->
	<update id="deleteWHInMgmForFreightUp">
		/*WHClosing.deleteWHInMgmForFreightUp*/
		UPDATE TL_CTRT_CUST_FRT
		   SET use_flg = 'N'
		      ,delt_flg = 'Y'
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO             = #cls_no#
	</update>
	
	<update id="modifyInvStsWHInMgmForFreightUp">
		/*WHClosing.modifyInvStsWHInMgmForFreightUp*/
		UPDATE TL_CTRT_CUST_FRT
		   SET sts_cd = #sts_cd#
		      ,inv_seq = #inv_seq#
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO  = #cls_no#
	     	<isNotEmpty property="cust_cd">
		       AND CUST_CD =  #cust_cd#
	     	</isNotEmpty>
	</update>
	
	<insert id="saveWhClsSo">
	/*WHClosing.saveWhClsSo*/
	INSERT INTO TL_WH_CLS_SO
	     ( CLS_NO
	     , CLS_SEQ
	     , WH_CD
	     , OFC_CD
	     , CTRT_NO
	     , RTP_NO
	     , CUST_CD
	     , STS_CD
	     , SELL_RMK
	     , BUY_RMK
	     , SO_NO
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	VALUES
	     ( #cls_no#
	     , #cls_seq#
	     , #wh_cd#
	     , #ofc_cd#
	     , #ctrt_no#
	     , #rtp_no#
	     , #cust_cd#
	     , #sts_cd#
	     <isEqual property="sts_cd" compareValue="S">
	     ,#rmk#
	     ,NULL
	     </isEqual>
	     <isEqual property="sts_cd" compareValue="B">
	     ,NULL
	     ,#rmk#
	     </isEqual>
	     , #so_no#    
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     )
	</insert>
	
	<update id="modifyWhClsSo">
		/*WHClosing.modifyWhClsSo*/
		UPDATE TL_WH_CLS_SO
		   SET MODI_ID     = #modi_id#
		     , MODI_OFC_CD = #modi_ofc_cd#
		     , MODI_SYS_DT = GETDATE()
		     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD)
		     <isEqual property="sb_cls_cd" compareValue="S">
		     	, SELL_RMK    = #rmk#
		     </isEqual>
		     <isEqual property="sb_cls_cd" compareValue="B">
		     	, BUY_RMK    = #rmk#
		     </isEqual>
			 , SO_NO = #so_no#
		 WHERE CLS_NO = #cls_no# 
		   AND CLS_SEQ = #cls_seq#
	</update>
	<update id="modifyWhClsSoForStsCd">
	/*WHClosing.modifyWhClsSoForStsCd*/
	UPDATE TL_WH_CLS_SO
	   SET MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT((SELECT WH_CD FROM TL_WH_CLS WHERE CLS_NO = #cls_no#) )
		 , STS_CD  = #sts_cd#
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND STS_CD = 'A'
	</update>
	<update id="modifyWhClsInfoForWhOthCost">
	/**wms.WHClosing.modifyWhClsInfoForWhOthCost*/
	MERGE
		INTO TL_WH_OTH_COST A
		USING TL_WH_CLS_SO_DTL B
		ON (    A.OTH_COST_NO  = B.OTH_COST_NO
			AND B.CLS_NO       = #cls_no#
	        AND B.CLS_SEQ      = #cls_seq#      
			AND B.OTH_COST_NO IS NOT NULL
		   )		
		WHEN MATCHED THEN
			UPDATE 
			   SET CLS_NO      = #cls_no#
			     , CLS_DT      = (SELECT CLS_DT FROM TL_WH_CLS WHERE CLS_NO = #cls_no#)
			     , STS_CD      = #sts_cd#
			     , MODI_ID     = #modi_id#
			     , MODI_OFC_CD = #modi_ofc_cd#
			     , MODI_SYS_DT = GETDATE()
			     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(A.WH_CD);
	</update>
	<insert id="saveWhCls">
	/*WHClosing.saveWhCls*/
	INSERT INTO TL_WH_CLS
	     ( CLS_NO
         , CLS_DT
         , SET_FR_DT
         , SET_TO_DT
         , WH_CD
         , OFC_CD
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	VALUES
	     ( #cls_no#
	     , REPLACE(#cls_dt#, '-', '')
	     , REPLACE(#set_fr_dt#, '-', '')
	     , REPLACE(#set_to_dt#, '-', '')
	     , #wh_cd#
	     , #ofc_cd#
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     )
	</insert>
	<select id="searchClsSeq" resultClass="java.lang.String">
	/*WHClosing.searchClsSeq*/
	SELECT ISNULL(MAX(CLS_SEQ),0) + 1 AS NEXT_SEQ
      FROM TL_WH_CLS_SO
     WHERE CLS_NO = #cls_no#
	</select>
	<delete id="deleteWhClsSoFrt">
		/*WHClosing.deleteWhClsSoFrt*/
		DELETE FROM TL_WH_CLS_SO_FRT
		 WHERE CLS_NO = #cls_no# 
		   AND CLS_SEQ = #cls_seq#
		   AND SB_CLS_CD = #sb_cls_cd#
		   AND CLS_FRT_SEQ = #cls_frt_seq#
	</delete>
	<select id="searchWhClsFrtDtlSeqCnt" resultClass="java.lang.String">
	/*WHClosing.searchWhClsFrtDtlSeqCnt*/
	SELECT SUM(FRT_CNT) + SUM(DTL_CNT) AS CNT
	  FROM (
			SELECT COUNT(1) AS FRT_CNT
			     , 0 AS DTL_CNT
			  FROM TL_WH_CLS_SO_FRT
			 WHERE CLS_NO  = #cls_no#
			   AND CLS_SEQ = #cls_seq#
			   AND ISNULL(BASIC_AMT,0) + ISNULL(ADJUST_AMT,0) != 0
			 UNION ALL
			SELECT 0 AS FRT_CNT
			     , COUNT(1) AS DTL_CNT
			  FROM TL_WH_CLS_SO_DTL
			 WHERE CLS_NO  = #cls_no#
			   AND CLS_SEQ = #cls_seq#
	     ) T
	</select>	
	<delete id="deleteWhClsFrt">
	/*WHClosing.deleteWhClsFrt*/
	DELETE FROM TL_WH_CLS_SO_FRT
	 WHERE CLS_NO = #cls_no#
	</delete>
	<delete id="deleteWhClsFrtSeq">
	/*WHClosing.deleteWhClsFrtSeq*/
	DELETE FROM TL_WH_CLS_SO_FRT
	 WHERE CLS_NO  = #cls_no#
	   AND CLS_SEQ = #cls_seq#
	</delete>
	<delete id="deleteWhClsSoSeq">
	/*WHClosing.deleteWhClsSoSeq*/
	DELETE FROM TL_WH_CLS_SO
	 WHERE CLS_NO  = #cls_no#
	   AND CLS_SEQ = #cls_seq#
	</delete>
	<select id="searchWhClsSoCnt" resultClass="java.lang.String">
	/*WHClosing.searchWhClsSoCnt*/
	SELECT SUM(SO_CNT) AS CNT
	  FROM (
			SELECT COUNT(1) AS SO_CNT
			  FROM TL_WH_CLS_SO
			 WHERE CLS_NO  = #cls_no#
			   AND CLS_SEQ = #cls_seq#
		 	) T
	</select>
	<delete id="deleteWhClsSeq">
	/*WHClosing.deleteWhClsSeq*/
	DELETE FROM TL_WH_CLS_SO
	 WHERE CLS_NO  = #cls_no#
	   AND CLS_SEQ = #cls_seq#
	</delete>
	<update id="modifyWhClsSoDtlAmtQtyZero">
	/*WHClosing.modifyWhClsSoDtlAmtQtyZero*/
	UPDATE TL_WH_CLS_SO_DTL
	   SET MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT((SELECT WH_CD FROM TL_WH_CLS WHERE CLS_NO = #cls_no#))
	     <isEqual property="dtl_unit_cd" compareValue="PE">, AMT_PL_LVL = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="BX">, AMT_BX_LVL = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="IC">, AMT_IN_LVL = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="EA">, AMT_EA_LVL = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="CBM">, AMT_CBM = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="CBF">, AMT_CBF = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="GWT">, AMT_CBF = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="GLB">, AMT_GRS_LBS = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="NWT">, AMT_NET_KGS = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="NLB">, AMT_NET_LBS = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="ORD">, AMT_ORD = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="OTH">, AMT_OTH = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="FIX">, AMT_FIX = 0 </isEqual>
	     <isEqual property="dtl_unit_cd" compareValue="LOC">, AMT_LOC = 0 </isEqual>
	     <isNotEqual property="dtl_unit_cd" compareValue="PE">
       		<isNotEqual property="dtl_unit_cd" compareValue="BX">
       			<isNotEqual property="dtl_unit_cd" compareValue="IC">
       				<isNotEqual property="dtl_unit_cd" compareValue="EA">
       					<isNotEqual property="dtl_unit_cd" compareValue="CBM">
       						<isNotEqual property="dtl_unit_cd" compareValue="CBF">
       							<isNotEqual property="dtl_unit_cd" compareValue="GWT">
       								<isNotEqual property="dtl_unit_cd" compareValue="GLB">
       									<isNotEqual property="dtl_unit_cd" compareValue="NWT">
	       									<isNotEqual property="dtl_unit_cd" compareValue="NLB">
	       										<isNotEqual property="dtl_unit_cd" compareValue="ORD">
		       										<isNotEqual property="dtl_unit_cd" compareValue="OTH">
			       										<isNotEqual property="dtl_unit_cd" compareValue="FIX">
				       										<isNotEqual property="unit_cd" compareValue="LOC">
			       												, AMT_EQ = 0
			       											</isNotEqual>
			       										</isNotEqual>
		       										</isNotEqual>
	       										</isNotEqual>
	       									</isNotEqual>
       									</isNotEqual>
       								</isNotEqual>
       							</isNotEqual>
       						</isNotEqual>
       					</isNotEqual>
       				</isNotEqual>
       			</isNotEqual>
       		</isNotEqual>
       </isNotEqual>
     WHERE CLS_NO = #cls_no#
       AND CLS_SEQ = #cls_seq#
       AND SB_CLS_CD = #sb_cls_cd#
       AND RATE_TP_CD = #rate_tp_cd#
       AND ORDER_REL = #order_rel#
       AND SRC_TP_CD = 'A'
       AND FRT_CD = #frt_cd#
       AND FRT_NM = #frt_nm#
       AND CURR_CD = #curr_cd#
       <isEqual property="unit_cd" compareValue="LOC">AND SPACE_TP_CD = #dtl_unit_cd#</isEqual>
       <isEqual property="dtl_unit_cd" compareValue="OTH">AND OTH_UNIT_CD = #dtl_unit_cd2#</isEqual>
       <isEqual property="dtl_unit_cd" compareValue="FIX">AND FIX_UNIT_CD = #dtl_unit_cd2#</isEqual>
       <isNotEqual property="dtl_unit_cd" compareValue="PE">
       		<isNotEqual property="dtl_unit_cd" compareValue="BX">
       			<isNotEqual property="dtl_unit_cd" compareValue="IC">
       				<isNotEqual property="dtl_unit_cd" compareValue="EA">
       					<isNotEqual property="dtl_unit_cd" compareValue="CBM">
       						<isNotEqual property="dtl_unit_cd" compareValue="CBF">
       							<isNotEqual property="dtl_unit_cd" compareValue="GWT">
       								<isNotEqual property="dtl_unit_cd" compareValue="GLB">
       									<isNotEqual property="dtl_unit_cd" compareValue="NWT">
	       									<isNotEqual property="dtl_unit_cd" compareValue="NLB">
	       										<isNotEqual property="dtl_unit_cd" compareValue="ORD">
			       									AND EQ_TPSZ_CD = #dtl_unit_cd#
	       										</isNotEqual>
	       									</isNotEqual>
       									</isNotEqual>
       								</isNotEqual>
       							</isNotEqual>
       						</isNotEqual>
       					</isNotEqual>
       				</isNotEqual>
       			</isNotEqual>
       		</isNotEqual>
       </isNotEqual>
	</update>
		
	<parameterMap class="com.clt.apps.fis.wms.whclosing.dto.ProcWHClosingCreateVO" id="callWHClosingCreateProc_Map">
		<parameter property="cls_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="set_fr_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="set_to_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="sb_cls_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rate_tp_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="wh_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ctrt_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtn_time_stamp" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
    <procedure id="callWHClosingCreateProc" parameterMap="callWHClosingCreateProc_Map">
    	 { CALL PKG_MAKE_TL_WH_CLOSING_CREATE_PRC(?,?,?,?,?,?,?,?,?,?,?,?) } 
	</procedure>
	
	<update id="modifyWhClsSoDtlTotalAmt">
	/*WHClosing.modifyWhClsSoDtlTotalAmt*/
	UPDATE TL_WH_CLS_SO_DTL
	   SET MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT((SELECT WH_CD FROM TL_WH_CLS WHERE CLS_NO = #cls_no#))
	     , TOT_AMT = ISNULL(AMT_PL_LVL,0) + ISNULL(AMT_BX_LVL,0) + ISNULL(AMT_IN_LVL,0) + ISNULL(AMT_EA_LVL,0) + ISNULL(AMT_CBM,0) + ISNULL(AMT_CBF,0) + ISNULL(AMT_GRS_KGS,0) + ISNULL(AMT_GRS_LBS,0) 
	               + ISNULL(AMT_NET_KGS,0) + ISNULL(AMT_NET_LBS,0) + ISNULL(AMT_ORD,0) + ISNULL(AMT_LOC,0) + ISNULL(AMT_OTH,0) + ISNULL(AMT_FIX,0)
     WHERE CLS_NO = #cls_no#
       AND CLS_SEQ = #cls_seq#
       AND SB_CLS_CD = #sb_cls_cd#
       AND RATE_TP_CD = #rate_tp_cd#
       AND ORDER_REL = #order_rel#
       AND SRC_TP_CD = 'A'
       AND FRT_CD = #frt_cd#
       AND FRT_NM = #frt_nm#
       AND CURR_CD = #curr_cd#
       <isEqual property="unit_cd" compareValue="LOC">
       		AND SPACE_TP_CD = #dtl_unit_cd#
       </isEqual>
       <isNotEqual property="dtl_unit_cd" compareValue="PE">
       		<isNotEqual property="dtl_unit_cd" compareValue="BX">
       			<isNotEqual property="dtl_unit_cd" compareValue="IC">
       				<isNotEqual property="dtl_unit_cd" compareValue="EA">
       					<isNotEqual property="dtl_unit_cd" compareValue="CBM">
       						<isNotEqual property="dtl_unit_cd" compareValue="CBF">
       							<isNotEqual property="dtl_unit_cd" compareValue="GWT">
       								<isNotEqual property="dtl_unit_cd" compareValue="GLB">
       									<isNotEqual property="dtl_unit_cd" compareValue="NWT">
	       									<isNotEqual property="dtl_unit_cd" compareValue="NLB">
	       										<isNotEqual property="dtl_unit_cd" compareValue="ORD">
		       										<isNotEqual property="dtl_unit_cd" compareValue="OTH">
			       										<isNotEqual property="dtl_unit_cd" compareValue="FIX">
			       											AND EQ_TPSZ_CD = #dtl_unit_cd#
			       										</isNotEqual>
		       										</isNotEqual>
	       										</isNotEqual>
	       									</isNotEqual>
       									</isNotEqual>
       								</isNotEqual>
       							</isNotEqual>
       						</isNotEqual>
       					</isNotEqual>
       				</isNotEqual>
       			</isNotEqual>
       		</isNotEqual>
       </isNotEqual>
	</update>
	<parameterMap class="com.clt.apps.fis.wms.whclosing.dto.ProcWHClosingConfirmVO" id="callWHClosingConfirmCancelProc_Map">
		<parameter property="cls_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="cls_seq" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<!-- <update id="callWHClosingConfirmCancelProc" parameterMap="callWHClosingConfirmCancelProc_Map">
		{ CALL PKG_MAKE_TL_WH_CLOSING_CANCEL_PRC(#cls_no#, #cls_seq#, #org_cd#, #user_id#, #rtncd#, #rtnmsg#) }
	</update> -->
    <procedure id="callWHClosingConfirmCancelProc" parameterMap="callWHClosingConfirmCancelProc_Map">
		 { CALL PKG_MAKE_TL_WH_CLOSING_CANCEL_PRC(?, ?, ?, ?, ?, ?) } 
	</procedure>
	<parameterMap class="com.clt.apps.fis.wms.whclosing.dto.ProcWHClosingConfirmVO" id="callWHClosingConfirmProc_Map">
		<parameter property="so_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="so_cnfm_timestamp" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	<procedure id="callWHClosingConfirmProc"  parameterMap="callWHClosingConfirmProc_Map">
		 { CALL PKG_MAKE_TL_WH_CLOSING_CONFIRM_PRC(?, ?, ?, ?, ?, ?) } 
	</procedure>
	
	<update id="modifyWhClsSoFrtInfo">
	/*WHClosing.modifyWhClsSoFrtInfo*/
	UPDATE TL_WH_CLS_SO_FRT
	   SET MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT((SELECT WH_CD FROM TL_WH_CLS WHERE CLS_NO = #cls_no# ))
		 , ADJUST_AMT  = #adjust_amt#
		 , UNIT_CD     = #unit_cd#
		 , UNIT_QTY    = #unit_qty#
		 , UNIT_PRICE  = #unit_price#
		 , FRT_NM      = #frt_nm#
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND SB_CLS_CD = #sb_cls_cd#
	   AND CLS_FRT_SEQ = #cls_frt_seq#
	</update>
	<update id="modifyWhClsSoFrtCnfm">
	/**wms.WHClosing.modifyWhClsSoFrtCnfm*/
	UPDATE TL_WH_CLS_SO_FRT
	   SET FRT_NM            = #frt_nm#
	     , UNIT_CD			 = #unit_cd#
	     , UNIT_QTY			 = #unit_qty#
	     , UNIT_PRICE		 = #unit_price#
	     , ADJUST_AMT		 = #adjust_amt#
	     , MODI_ID           = #modi_id#
		 , MODI_OFC_CD       = #modi_ofc_cd#
		 , MODI_SYS_DT       = GETDATE()
		 , MODI_LOC_DT       = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	 WHERE CLS_NO            = #cls_no#
	   AND CLS_SEQ           = #cls_seq#
	   AND SB_CLS_CD		 = #sb_cls_cd#
	   AND CLS_FRT_SEQ		 = #cls_frt_seq#
	</update>
	<typeAlias alias="Grd01ClosingMgmtDto" 	type="com.clt.apps.fis.wms.whclosing.dto.Grd01ClosingMgmtVO"/>
	<select id="searchClosingStsList" resultClass="Grd01ClosingMgmtDto">
	/*WHClosing.searchClosingStsList*/
	SELECT CLS_NO
	     , CLS_SEQ
	     , CTRT_NO
	  FROM TL_WH_CLS_SO
	 WHERE CLS_NO + CONVERT(VARCHAR(1000), CLS_SEQ) IN (
	 	<iterate property="cls_no_seq_in" conjunction=",">#cls_no_seq_in[]#</iterate>
	 							)
	</select>
	<select id="getSoCnfmTimestamp" resultClass="java.lang.String">
	/*WHClosing.getSoCnfmTimestamp*/
	SELECT REPLACE(REPLACE(REPLACE(REPLACE(CONVERT(varchar(100), GETDATE(), 121),'-',''),':',''),' ',''),'.','')
	</select>
	<update id="modifyWhClsSoCnfmTimestamp">
	/**wms.WHClosing.modifyWhClsSoCnfmTimestamp*/
	UPDATE TL_WH_CLS_SO
	   SET SO_CNFM_TIMESTAMP = #so_cnfm_timestamp#
	     , SO_NO             = #so_no#
	     , MODI_ID           = #modi_id#
		 , MODI_OFC_CD       = #modi_ofc_cd#
		 , MODI_SYS_DT       = GETDATE()
		 , MODI_LOC_DT       = dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD)
	 WHERE CLS_NO            = #cls_no#
	   AND CLS_SEQ           = #cls_seq#
	</update>
	
	<!-- LKH::2015-11-03 WMS4.O -->
	<select id="searchClosingMgmtDtl" resultClass="WHClosingVO">
		/*WHClosing.searchClosingMgmtDtl*/
		SELECT ROW_NUMBER() OVER (ORDER BY CLS.CLS_NO, CLS_SO.CTRT_NO) AS RN /*화면에서 SEQ한값을 넣어 MERGE효과를 중지시킨다*/
		     , CLS.CLS_NO + CLS_SO.CTRT_NO AS CLS_KEY
			 , CLS.CLS_NO 
			 , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY
			  , CLS.CLS_NO + CLS_SO.CTRT_NO + CONVERT(VARCHAR(1000), CLS_SO.CLS_SEQ) AS MERGE_KEY2
		     , CLS_SO.CLS_SEQ
		     , CLS_SO.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM
		     , CLS_SO.RTP_NO
		     , ISNULL(CLS_SO.CUST_CD, ' ') AS CUST_CD	     
			 , ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ), ' ') AS CUST_NM
		     , CLS_S.SB_CLS_CD
		     , CLS_S.CLS_FRT_SEQ
		     , CASE WHEN CLS_S.CLS_NO IS NULL THEN 'N'
		            WHEN CLS_SO.STS_CD = 'C' THEN CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0
									                THEN 'I'
									                ELSE CLS_SO.STS_CD
									                END
									                
	                ELSE CLS_SO.STS_CD  
	                END AS STS_CD
	         , ( SELECT TOP 1 C.INV_NO 
						FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ
							JOIN  TB_INV_DTL C ON B.INV_SEQ = C.inv_seq AND C.DELT_FLG = 'N'
						WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
								AND CLS_S.FRT_SEQ = b.FRT_SEQ
					) AS INV_NO
			 , ( SELECT TOP 1 C.INV_SEQ
						FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ
							JOIN  TB_INV_DTL C ON B.INV_SEQ = C.inv_seq AND C.DELT_FLG = 'N'
						WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
								AND CLS_S.FRT_SEQ = b.FRT_SEQ
					) AS INV_SEQ
		     <!-- , ISNULL(CLS_SO.SO_NO, ' ') AS SO_NO -->
		     ,( SELECT
            	TOP 1 A.DOC_REF_NO       
        		FROM
            	tb_wm_doc_mst A 
        		JOIN TB_FRT B 
                ON A.WM_DOC_SEQ = B.WMS_SEQ        
        		WHERE 1 = 1
        		 AND A.DELT_FLG = 'N'
            	 AND A.DOC_REF_NO = CLS_SO.SO_NO         
           		 AND CLS_S.FRT_SEQ = b.FRT_SEQ      ) AS SO_NO
		     , CASE WHEN CLS_S.SB_CLS_CD = 'S' THEN CLS_SO.SELL_RMK
		            ELSE CLS_SO.BUY_RMK
		            END AS RMK	     
		     , CASE WHEN CLS_S.SB_CLS_CD = 'S' THEN CLS_SO.SELL_RMK
		            ELSE CLS_SO.BUY_RMK
		            END AS RMK2
		     , CLS_S.RATE_TP_CD
		     , CLS_S.ORDER_REL
		     , CLS_S.FRT_CD
		     , CLS_S.FRT_NM
		     , CLS_S.DTL_FRT_NM
		     <!-- , CLS_S.CURR_CD -->
		     , #def_ofc_curr_cd# AS CURR_CD
		     , CLS_S.DTL_UNIT_CD
		     , CLS_S.UNIT_CD
		     , CLS_S.UNIT_QTY
		     , CLS_S.UNIT_PRICE
		     , ISNULL(CLS_S.BASIC_AMT, 0) AS BASIC_AMT
		     , ISNULL(CLS_S.ADJUST_AMT, 0) AS ADJUST_AMT
		     , ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) AS TOT_AMT     
		     , CASE WHEN CLS_S.CLS_NO IS NULL THEN 'M' ELSE CLS_S.SRC_TP_CD END AS SRC_TP_CD
		     /*, CLS.CLS_AGR_NO*/
		     , CLS.WH_CD
		     , dbo.TL_GET_LOC_NM(CLS.WH_CD) AS WH_NM
		     , CLS.OFC_CD
		     , CLS.CLS_DT
		     , CLS.SET_FR_DT
		     , CLS.SET_TO_DT
		     , SUM(ISNULL(CLS_S.UNIT_QTY, 0) * ISNULL(CLS_S.UNIT_PRICE, 0) ) OVER ( PARTITION BY CLS.CLS_NO, CLS_SO.CLS_SEQ, CLS_S.SB_CLS_CD) AS SUB_TOT
		     ,(SELECT CD.SRT_SEQ 
	              FROM tb_com_cd_dtl CD 
	             WHERE CD.COM_CD = 'WR0'
	               AND CD.CD_VAL = CLS_S.RATE_TP_CD
	            ) AS CD_DISP_SEQ
	         ,CLS_S.FRT_SEQ   
	         ,(SELECT WM_DOC_SEQ FROM TB_WM_DOC_MST WMDOC WHERE WMDOC.DOC_REF_NO = CLS_SO.SO_NO) AS WM_DOC_SEQ      
		 FROM TL_WH_CLS CLS JOIN TL_WH_CLS_SO CLS_SO ON CLS.CLS_NO =  CLS_SO.CLS_NO JOIN TL_WH_CLS_SO_FRT CLS_S ON CLS_SO.CLS_NO = CLS_S.CLS_NO AND CLS_SO.CLS_SEQ = CLS_S.CLS_SEQ
			
		 WHERE 1 = 1
		   
		   
		  <!--  AND ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) != 0 -->
		  	<![CDATA[ 
		   		AND ISNULL(CLS_S.UNIT_QTY, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) != 0
		     ]]>
		   <isEqual property="search_tp" compareValue="IN_CLS_NO">
		   		AND CLS.CLS_NO = #in_cls_no#
		   </isEqual>
		   <isEqual property="search_tp" compareValue="H_CLS_NO">
		   		AND CLS.CLS_NO IN (
		   							<iterate property="in_cls_no_in" conjunction=",">#in_cls_no_in[]#</iterate>
				                  )
		   </isEqual>
		   <isEqual property="search_tp" compareValue="IN_SO_NO">
		   		AND CLS_SO.SO_NO = #in_so_no#
		   </isEqual>
		   <isEqual property="search_tp" compareValue="IN_CLS_SO_NO">
		   		AND CLS.CLS_NO   = #in_cls_no#
				AND CLS_SO.SO_NO = #in_so_no#
		   </isEqual>
		   <isNotEqual property="search_tp" compareValue="IN_CLS_NO">
		   		<isNotEqual property="search_tp" compareValue="H_CLS_NO">
		   			<isNotEqual property="search_tp" compareValue="IN_SO_NO">
		   				<isNotEqual property="search_tp" compareValue="IN_CLS_SO_NO">
		   					AND CLS.CLS_NO IN (
										SELECT SUB_D.CLS_NO
										  FROM TL_WH_CLS_SO_DTL SUB_D
										 WHERE SUB_D.CLS_NO = CLS.CLS_NO
										   AND SUB_D.CLS_AGR_NO = #cls_agr_no#
				                      )
		   				</isNotEqual>
		   			</isNotEqual>
		   		</isNotEqual>
		   </isNotEqual>
		 ORDER BY CLS.CLS_NO ASC
		        /*, CLS_SO.CUST_CD ASC*/
		        , CLS_SO.CLS_SEQ ASC
		        , CLS_S.SB_CLS_CD DESC /* SELL, BUY */
	            , CD_DISP_SEQ ASC /* TYPE의 코드순서별*/
	            , CLS_S.ORDER_REL ASC
	            , CLS_S.FRT_CD ASC
	            , CLS_S.FRT_NM ASC
	            , CLS_S.CURR_CD ASC
	            , CLS_S.DISP_SEQ ASC /*입력 시 등록된 순서별*/
		</select>	
		
		<!-- Closing Background Search -->	
	<typeAlias alias="Grd01ClosingBackgroundSearchDto" 	type="com.clt.apps.fis.wms.whclosing.dto.WHClosingBackgroundSearchVO"/>
	<select id="searchClosingBackgroundList" resultClass="Grd01ClosingBackgroundSearchDto">
	/*WHClosing.searchClosingBackgroundList*/
	SELECT T.CLS_DT
	      ,T.CLS_AGR_NO
	      ,dbo.TL_GET_COMM_NM('BS1',T.STS_CD) AS STS_NM
	      ,T.WH_CD
	      ,dbo.TL_GET_LOC_NM(T.WH_CD) AS WH_NM 
	      ,T.CTRT_NO
	      ,dbo.TL_GET_CTRT_NM(T.CTRT_NO) AS CTRT_NM   
  		  ,CASE WHEN T.SB_CLS_CD = 'S' THEN 'SELL'
			WHEN T.SB_CLS_CD = 'B' THEN 'BUY'
			ELSE 'ALL' END AS SB_CLS_NM
		  ,(CASE WHEN Isnull(dbo.TL_GET_COMM_NM('WR0',T.RATE_TP_CD),'') <![CDATA[<>]]>  '' THEN dbo.TL_GET_COMM_NM('WR0',T.RATE_TP_CD)
			ELSE 'ALL' END ) AS RATE_TP_NM
<!-- 	      ,Isnull(dbo.TL_GET_COMM_NM('WR0',T.RATE_TP_CD),'ALL') AS RATE_TP_NM -->
	      ,T.RGST_ID
	      ,T.STS_RSLT
	  FROM TL_WH_CLS_AGR_MST T
	 WHERE 1=1
	   <!--   AND T.FB_CLS_CD = 'B' -->
	   <!-- <isEqual property="auth_lvl" compareValue="AQ">
	       AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) IN ( SELECT OFC_CD 
								                    FROM TB_OFC O
								                   WHERE O.USE_FLG = 'Y'
								                     AND O.MODI_OFC_CD =  #org_cd#
								                   UNION
								                  SELECT OFC_CD
								                    FROM TB_OFC O
								                   WHERE O.USE_FLG = 'Y'
								                     AND O.OFC_CD =  #org_cd# 
								                  )
	   </isEqual>
	   <isEqual property="auth_lvl" compareValue="LB">
		       AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) = #org_cd#
		</isEqual> -->
		<isNotNull property="ofc_cd">
			<isNotEmpty property="ofc_cd">
				   AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) = #org_cd#
			</isNotEmpty>    	   
		</isNotNull>
		
		<isNotEqual property="wh_cd" compareValue="ALL">
			   AND T.WH_CD = #wh_cd#
		</isNotEqual>
		
		<isNotNull property="ctrt_no">
			<isNotEmpty property="ctrt_no">
				   AND T.CTRT_NO = #ctrt_no#
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="fm_cls_date">
			<isNotEmpty property="fm_cls_date">
				   AND T.CLS_DT BETWEEN REPLACE(#fm_cls_date#, '-', '') AND REPLACE(#to_cls_date#, '-', '')  
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="sts_cd">
			<isNotEqual property="sts_cd" compareValue="ALL">
				   AND T.STS_CD = #sts_cd#
			</isNotEqual>
		</isNotNull>
		 ORDER BY T.CLS_AGR_NO DESC
	</select>
	
	<select id="searchClosingBackgroundList_CNT" resultClass="Integer">
	/*WHClosing.searchClosingBackgroundList_CNT*/
	SELECT COUNT(*)
	  FROM TL_WH_CLS_AGR_MST T
	 WHERE 1=1
	   <!-- AND T.FB_CLS_CD = 'B' -->
	   <!-- <isEqual property="auth_lvl" compareValue="AQ">
	       AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) IN ( SELECT OFC_CD 
								                    FROM TB_OFC O
								                   WHERE O.USE_FLG = 'Y'
								                     AND O.MODI_OFC_CD =  #org_cd#
								                   UNION
								                  SELECT OFC_CD
								                    FROM TB_OFC O
								                   WHERE O.USE_FLG = 'Y'
								                     AND O.OFC_CD =  #org_cd# 
								                  )
	   </isEqual>
	   <isEqual property="auth_lvl" compareValue="LB">
		       AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) = #org_cd#
		</isEqual> -->
		<isNotNull property="ofc_cd">
			<isNotEmpty property="ofc_cd">
				   AND dbo.TL_GET_USER_BRANCH(T.RGST_ID) = #org_cd#
			</isNotEmpty>    	   
		</isNotNull>
		
		<isNotEqual property="wh_cd" compareValue="ALL">
			   AND T.WH_CD = #wh_cd#
		</isNotEqual>
		
		<isNotNull property="ctrt_no">
			<isNotEmpty property="ctrt_no">
				   AND T.CTRT_NO = #ctrt_no#
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="fm_cls_date">
			<isNotEmpty property="fm_cls_date">
				   AND T.CLS_DT BETWEEN REPLACE(#fm_cls_date#, '-', '') AND REPLACE(#to_cls_date#, '-', '')  
			</isNotEmpty>
		</isNotNull>
		
		<isNotNull property="sts_cd">
			<isNotEqual property="sts_cd" compareValue="ALL">
				   AND T.STS_CD = #sts_cd#
			</isNotEqual>
		</isNotNull>		 
	</select>
	
	<typeAlias alias="ClosingDetailInOutDto" 	type="com.clt.apps.fis.wms.whclosing.dto.ClosingDetailInOutVO"/>
	<select id="searchClosingDetailInfo" resultClass="ClosingDetailInOutDto">
		/*WHClosing.searchClosingDetailInfo*/
		SELECT
	        CLS.CLS_NO        in_cls_no,
	        CONVERT(VARCHAR(15), CONVERT(DATETIME, CLS.CLS_DT), 110) AS CLS_DT		     
			     , CONVERT(VARCHAR(15), CONVERT(DATETIME, CLS.SET_FR_DT), 110) AS SET_FR_DT
			     , CONVERT(VARCHAR(15), CONVERT(DATETIME, CLS.SET_TO_DT), 110) AS SET_TO_DT
			     , CLS.OFC_CD
			     , dbo.TL_GET_ORG_NM(CLS.OFC_CD) AS OFC_NM
			     , CLS.WH_CD
			     , dbo.TL_GET_LOC_NM(CLS.WH_CD) AS WH_NM
			     , CLS_SO.CTRT_NO
			     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM	
			    <!--  , CLS_SO.RTP_NO -->
			     , dbo.TL_GET_ROWTOCOLL_CLOSING_DETAIL(CLS.CLS_NO,'|') AS CUST_CD_ARR
		  FROM TL_WH_CLS CLS
		     , (SELECT CLS_NO, CTRT_NO
		     		<!-- , RTP_NO  -->
		          FROM TL_WH_CLS_SO CLS_SO
		         WHERE 1=1
		         <isNotNull property="in_cls_no">
			         <isNotEmpty property="in_cls_no">
				           AND CLS_SO.CLS_NO = #in_cls_no# 
			         </isNotEmpty>
		         </isNotNull>
		         
		         <isNotNull property="cls_agr_no">
			         <isNotEmpty property="cls_agr_no">
					   AND CLS_SO.CLS_NO IN (
												SELECT SUB_D.CLS_NO
												  FROM TL_WH_CLS_SO_DTL SUB_D
												 WHERE SUB_D.CLS_NO = CLS_SO.CLS_NO
												   AND SUB_D.CLS_AGR_NO = #cls_agr_no#
						                      )
					 </isNotEmpty>
		         </isNotNull>
		         GROUP BY CLS_NO
		         		, CTRT_NO
		         		<!-- , RTP_NO -->
		       ) CLS_SO
		 WHERE CLS.CLS_NO = CLS_SO.CLS_NO
		 <isNotNull property="in_cls_no">
			 <isNotEmpty property="in_cls_no">
				   AND CLS.CLS_NO = #in_cls_no#
			</isNotEmpty>
		 </isNotNull>
		 
		 <isNotNull property="cls_agr_no">
			 <isNotEmpty property="cls_agr_no">
				   AND CLS.CLS_NO IN (
											SELECT SUB_D.CLS_NO
											  FROM TL_WH_CLS_SO_DTL SUB_D
											 WHERE SUB_D.CLS_NO = CLS.CLS_NO
											   AND SUB_D.CLS_AGR_NO = #cls_agr_no#
					                      )
			</isNotEmpty>
		 </isNotNull>
		 
		 <!-- <isEqual property="auth_lvl" compareValue="AQ">
		       AND CLS.OFC_CD IN (SELECT OFC_CD 
		                            FROM TB_OFC O
		                           WHERE O.USE_FLG = 'Y'
		                             AND O.MODI_OFC_CD =  #org_cd#
		                           UNION
		                          SELECT OFC_CD
		                            FROM TB_OFC O
		                           WHERE O.USE_FLG = 'Y'
		                             AND O.OFC_CD =  #org_cd#  
		                         )
		</isEqual>
		<isEqual property="auth_lvl" compareValue="LB">
		       AND CLS.OFC_CD = #org_cd#
		</isEqual>	  -->
	</select>	
	
	<!-- Long.Le (S) -->
		<typeAlias alias="DailyClosingVO" 	type="com.clt.apps.fis.wms.whclosing.dto.DailyClosingVO"/>
		<select id="searchDailyClosingByItemList" resultClass="DailyClosingVO">
		/*WHClosing.searchDailyClosingByItemList*/
		select a2.* from (
		select
			ROW_NUMBER() OVER (ORDER BY a1.CLS_LOC_DT ASC) as ROWNUM, 
			a1.* 
		from(select 
				T.CLS_LOC_DT,
		         T.ITEM_CD,
		         T.ITEM_NM,
		         SUM (T.STC_QTY) AS STC_QTY,
		         SUM (T.ALLC_QTY) AS ALLC_QTY,
		         SUM (T.HOLD_QTY) AS HOLD_QTY,
		         SUM (T.DMG_QTY) AS DMG_QTY,
		         SUM (T.TOT_QTY) AS TOT_QTY,
		         SUM (T.ITEM_CBM) AS ITEM_CBM,
		         SUM (T.ITEM_CBF) AS ITEM_CBF,
		         SUM (T.ITEM_GRS_KGS) AS ITEM_GRS_KGS,
		         SUM (T.ITEM_GRS_LBS) AS ITEM_GRS_LBS,
		         SUM (T.ITEM_NET_KGS) AS ITEM_NET_KGS,
		         SUM (T.ITEM_NET_LBS) AS ITEM_NET_LBS,
		         T.WH_CD,
             	 T.WH_NM,
		         T.CTRT_NO,
		         dbo.TL_GET_CTRT_NM (T.CTRT_NO) AS CTRT_NM
		    FROM (SELECT I.CLS_LOC_DT,
		    			 I.ITEM_CD,
				         I.ITEM_NM,
				         ISNULL (I.IN_QTY, 0) - ISNULL (I.ALLC_QTY, 0) - ISNULL (I.HOLD_QTY, 0) - ISNULL (I.DMG_QTY, 0)  AS STC_QTY,
				         ISNULL (I.ALLC_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS ALLC_QTY,
				         ISNULL (I.HOLD_QTY, 0) AS HOLD_QTY,
				         ISNULL (I.DMG_QTY, 0) AS DMG_QTY,
				         ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS TOT_QTY,
				         <![CDATA[ 
				         CASE WHEN ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     END AS ITEM_CBM,
				         CASE WHEN ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     END AS ITEM_CBF,
				         CASE WHEN ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) END AS ITEM_GRS_KGS,
				         CASE WHEN ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) END AS ITEM_GRS_LBS,
				         CASE WHEN ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) END AS ITEM_NET_KGS,
				         CASE WHEN ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) END AS ITEM_NET_LBS,
				         ]]>
				         I.WH_CD,
		             	 dbo.TL_GET_LOC_NM (I.WH_CD) AS WH_NM,		         
				         I.CTRT_NO,
				         dbo.TL_GET_CTRT_NM (I.CTRT_NO) AS CTRT_NM
				    FROM TL_WH_CLS_INV_ITEM I
				       , TL_CTRT_CUST_ITEM CI
				   WHERE I.CTRT_NO 			= CI.CTRT_NO
				     AND I.ITEM_SYS_NO 		= CI.ITEM_SYS_NO
				     AND CI.ITEM_USE_FLG 	= 'Y'
				     AND ISNULL(I.IN_QTY, 0) - ISNULL(I.OUT_QTY, 0) > 0
				     AND I.WH_CD 	= #wh_cd#
				     <isNotNull property="ctrt_no">
						 <isNotEmpty property="ctrt_no">
								AND I.CTRT_NO 	= #ctrt_no#                                        /* CONTRACT NO */
						 </isNotEmpty>
				     </isNotNull>
				     
				     <isNotNull property="item_cd">
						 <isNotEmpty property="item_cd">		                     
								AND I.ITEM_CD 	= #item_cd#                                        /* ITEM CODE */
						 </isNotEmpty> 
				     </isNotNull>
				     
				     <isNotNull property="prop_date_fm">
						 <isNotEmpty property="prop_date_fm">		                     
								<![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
						 </isNotEmpty>		                     
				     </isNotNull>
				     
				     <isNotNull property="prop_date_to">
						 <isNotEmpty property="prop_date_to">		                     
								<![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
						 </isNotEmpty>
				     </isNotNull>
				
                 ) T
                 GROUP BY T.CLS_LOC_DT,
				 T.ITEM_CD,
		         T.ITEM_NM,
		         T.WH_CD,
		         T.WH_NM,
		         T.CTRT_NO
				
                ) a1
                )a2
				
				 <![CDATA[ where a2.ROWNUM > #beginIdx# AND a2.ROWNUM <= #topCnt#	]]> 
				 
				 ORDER BY a2.CTRT_NO, a2.ITEM_CD
				 
				  
		</select>
		
		<select id="searchDailyClosingByItemList_CNT" resultClass="Integer">
		/*WmsWHClosingSQL.xml > searchDailyClosingByItemList_CNT*/
		
		SELECT
			COUNT (*)
		FROM
			(
				SELECT
					I.CLS_LOC_DT,
					I.ITEM_CD,
					I.WH_CD,
					I.CTRT_NO
		    FROM TL_WH_CLS_INV_ITEM I
		       , TL_CTRT_CUST_ITEM CI
		   WHERE I.CTRT_NO 			= CI.CTRT_NO
		     AND I.ITEM_SYS_NO 		= CI.ITEM_SYS_NO
		     AND CI.ITEM_USE_FLG 	= 'Y'
		     AND ISNULL(I.IN_QTY, 0) - ISNULL(I.OUT_QTY, 0) > 0
		     AND I.WH_CD 	= #wh_cd#
		     <isNotNull property="ctrt_no">
				 <isNotEmpty property="ctrt_no">
						AND I.CTRT_NO 	= #ctrt_no#                                        /* CONTRACT NO */
				 </isNotEmpty>
		     </isNotNull>
		     
		     <isNotNull property="item_cd">
				 <isNotEmpty property="item_cd">		                     
						AND I.ITEM_CD 	= #item_cd#                                        /* ITEM CODE */
				 </isNotEmpty> 
		     </isNotNull>
		     
		     <isNotNull property="prop_date_fm">
				 <isNotEmpty property="prop_date_fm">		                     
						<![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
				 </isNotEmpty>		                     
		     </isNotNull>
		     
		     <isNotNull property="prop_date_to">
				 <isNotEmpty property="prop_date_to">		                     
						<![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
				 </isNotEmpty>
		     </isNotNull>
		     GROUP BY
				I.CLS_LOC_DT,
				I.ITEM_CD,
				I.WH_CD,
				I.CTRT_NO
	              ) T
		</select>
		
		<select id="searchDailyClosingByLotList" resultClass="DailyClosingVO">
		/* WHClosing.searchDailyClosingByLotList */
		SELECT T2.*
		FROM(
				SELECT ROW_NUMBER() OVER (ORDER BY T1.CLS_LOC_DT ASC) as ROWNUM,
						T1.*
				FROM(
					  SELECT T.CLS_LOC_DT,
					  		 T.ITEM_CD,
					         T.ITEM_NM,
					         T.INBOUND_DT,
					         T.LOT_NO,
					         T.LOT_ID,
					         SUM (T.STC_QTY) AS STC_QTY,
					         SUM (T.ALLC_QTY) AS ALLC_QTY,
					         SUM (T.HOLD_QTY) AS HOLD_QTY,
					         SUM (T.DMG_QTY) AS DMG_QTY,
					         SUM (T.TOT_QTY) AS TOT_QTY,
					         SUM (T.ITEM_CBM) AS ITEM_CBM,
					         SUM (T.ITEM_CBF) AS ITEM_CBF,
					         SUM (T.ITEM_GRS_KGS) AS ITEM_GRS_KGS,
					         SUM (T.ITEM_GRS_LBS) AS ITEM_GRS_LBS,
					         SUM (T.ITEM_NET_KGS) AS ITEM_NET_KGS,
					         SUM (T.ITEM_NET_LBS) AS ITEM_NET_LBS,
					         T.WH_CD,
					         T.CTRT_NO,
					         dbo.TL_GET_CTRT_NM (T.CTRT_NO) AS CTRT_NM,
					         T.EXP_DT,
					         T.LOT_04,
					         T.LOT_05
					    FROM (SELECT I.CLS_LOC_DT,
					    			 I.ITEM_CD,
							         I.ITEM_NM,
							         CONVERT(VARCHAR(10), CONVERT(DATETIME, L.LOT_ATTRIB_01, 102), 102) AS INBOUND_DT,
							         L.LOT_ATTRIB_02 AS LOT_NO,
							         L.LOT_ID AS LOT_ID,
							         ISNULL (I.IN_QTY, 0) - ISNULL (I.ALLC_QTY, 0) - ISNULL (I.HOLD_QTY, 0) - ISNULL (I.DMG_QTY, 0)  AS STC_QTY,
							         ISNULL (I.ALLC_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS ALLC_QTY,
							         ISNULL (I.HOLD_QTY, 0) AS HOLD_QTY,
							         ISNULL (I.DMG_QTY, 0) AS DMG_QTY,
							         ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS TOT_QTY,
							          <![CDATA[ 
							          CASE WHEN ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     END AS ITEM_CBM,
							          CASE WHEN ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     END AS ITEM_CBF,
							          CASE WHEN ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) END AS ITEM_GRS_KGS,
							          CASE WHEN ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) END AS ITEM_GRS_LBS,
							          CASE WHEN ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) END AS ITEM_NET_KGS,
							          CASE WHEN ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) END AS ITEM_NET_LBS,
							          ]]>
							         I.WH_CD,
					                 dbo.TL_GET_LOC_NM (I.WH_CD) AS WH_NM,
							         I.CTRT_NO,
							         dbo.TL_GET_CTRT_NM (I.CTRT_NO) AS CTRT_NM,
							         CONVERT(VARCHAR(10), CONVERT(DATETIME, L.LOT_ATTRIB_03, 102), 102) AS EXP_DT,
							         L.LOT_ATTRIB_04 AS LOT_04,
							         L.LOT_ATTRIB_05 AS LOT_05
							    FROM TL_WH_CLS_INV_LOT I,
							         TL_CTRT_CUST_ITEM CI,
							         TL_CTRT_CUST_ITEM_LOT L
							   WHERE I.CTRT_NO = CI.CTRT_NO
							     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
							     AND CI.ITEM_USE_FLG = 'Y'
							     AND I.CTRT_NO = L.CTRT_NO
							     AND I.ITEM_SYS_NO = L.ITEM_SYS_NO
							     AND I.LOT_ID = L.LOT_ID
							     AND ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) > 0
							     
							     <isNotNull property="ctrt_no">
									<isNotEmpty property="ctrt_no">
									     AND I.CTRT_NO = #ctrt_no#                                        /* CONTRACT NO */
							        </isNotEmpty>		     
							     </isNotNull>
							     AND I.WH_CD = #wh_cd#
							     
							     <isNotNull property="item_cd">
							         <isNotEmpty property="item_cd">		                     
							             AND I.ITEM_CD = #item_cd#                                        /* ITEM CODE */
							         </isNotEmpty>
							     </isNotNull>
							     
							     <isNotNull property="prop_no">
								     <isNotEmpty property="prop_no">
								         <isEqual property="prop_no_tp" compareValue="LOT_ID">		     
									         AND L.LOT_ID = #prop_no#                                         /* LOT ID */
								         </isEqual>		     
								         <isEqual property="prop_no_tp" compareValue="LOT_NO">		     
									         AND L.LOT_ATTRIB_02 = #prop_no#                                  /* LOT NO */
								         </isEqual>           		                              
								         <isEqual property="prop_no_tp" compareValue="LOT_04">		                     
								             AND L.LOT_ATTRIB_04 = #prop_no#                                  /* LOT 04 */
								         </isEqual>		        		                              
								         <isEqual property="prop_no_tp" compareValue="LOT_05">		                     
								             AND L.LOT_ATTRIB_05 = #prop_no#                                  /* LOT 05 */
								         </isEqual>
								     </isNotEmpty>
							     </isNotNull>
					     
					     <isNotNull  property="prop_date_fm">
						     <isNotEmpty property="prop_date_fm">		                     
						   <![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
						     </isNotEmpty>		                     
					     </isNotNull>
					     
					     <isNotNull property="prop_date_to">
						     <isNotEmpty property="prop_date_to">		                     
						   <![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
						     </isNotEmpty>
					     </isNotNull>
			                 ) T
					GROUP BY T.CLS_LOC_DT,
						     T.ITEM_CD,
					         T.ITEM_NM,
					         T.INBOUND_DT,
					         T.LOT_NO,
					         T.LOT_ID,
					         T.WH_CD,
					         T.CTRT_NO,
					         T.EXP_DT,
					         T.LOT_04,
					         T.LOT_05
				) T1
			)T2	
			 <![CDATA[ where T2.ROWNUM > #beginIdx# AND T2.ROWNUM <= #topCnt#	]]> 
			ORDER BY T2.CTRT_NO, T2.ITEM_CD, T2.INBOUND_DT
		</select>
		
		<select id="searchDailyClosingByLotList_CNT" resultClass="Integer">
		/* WmsWHClosingSQL.xml > searchDailyClosingByLotList_CNT */
		
			SELECT
				COUNT (*)
			FROM
				(
					SELECT
						T.*
					FROM
						(
							SELECT
								I.CLS_LOC_DT,
								I.ITEM_CD,
								CONVERT (
									VARCHAR (10),
									CONVERT (
										DATETIME,
										L.LOT_ATTRIB_01,
										102
									),
									102
								) AS INBOUND_DT,
								L.LOT_ATTRIB_02 AS LOT_NO,
								L.LOT_ID AS LOT_ID,
								I.WH_CD,
								I.CTRT_NO,
								CONVERT (
									VARCHAR (10),
									CONVERT (
										DATETIME,
										L.LOT_ATTRIB_03,
										102
									),
									102
								) AS EXP_DT,
								L.LOT_ATTRIB_04 AS LOT_04,
								L.LOT_ATTRIB_05 AS LOT_05
					
				    FROM TL_WH_CLS_INV_LOT I,
				         TL_CTRT_CUST_ITEM CI,
				         TL_CTRT_CUST_ITEM_LOT L
				   WHERE I.CTRT_NO = CI.CTRT_NO
				     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
				     AND CI.ITEM_USE_FLG = 'Y'
				     AND I.CTRT_NO = L.CTRT_NO
				     AND I.ITEM_SYS_NO = L.ITEM_SYS_NO
				     AND I.LOT_ID = L.LOT_ID
				     AND ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) > 0
				     
				     <isNotNull property="ctrt_no">
						<isNotEmpty property="ctrt_no">
						     AND I.CTRT_NO = #ctrt_no#                                        /* CONTRACT NO */
				        </isNotEmpty>		     
				     </isNotNull>
				     AND I.WH_CD = #wh_cd#
				     
				     <isNotNull property="item_cd">
				         <isNotEmpty property="item_cd">		                     
				             AND I.ITEM_CD = #item_cd#                                        /* ITEM CODE */
				         </isNotEmpty>
				     </isNotNull>
				     
				     <isNotNull property="prop_no">
					     <isNotEmpty property="prop_no">
					         <isEqual property="prop_no_tp" compareValue="LOT_ID">		     
						         AND L.LOT_ID = #prop_no#                                         /* LOT ID */
					         </isEqual>		     
					         <isEqual property="prop_no_tp" compareValue="LOT_NO">		     
						         AND L.LOT_ATTRIB_02 = #prop_no#                                  /* LOT NO */
					         </isEqual>           		                              
					         <isEqual property="prop_no_tp" compareValue="LOT_04">		                     
					             AND L.LOT_ATTRIB_04 = #prop_no#                                  /* LOT 04 */
					         </isEqual>		        		                              
					         <isEqual property="prop_no_tp" compareValue="LOT_05">		                     
					             AND L.LOT_ATTRIB_05 = #prop_no#                                  /* LOT 05 */
					         </isEqual>
					     </isNotEmpty>
				     </isNotNull>
		     
		     <isNotNull  property="prop_date_fm">
			     <isNotEmpty property="prop_date_fm">		                     
			   <![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
			     </isNotEmpty>		                     
		     </isNotNull>
		     
		     <isNotNull property="prop_date_to">
			     <isNotEmpty property="prop_date_to">		                     
			   <![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
			     </isNotEmpty>
		     </isNotNull>
                 ) T
		GROUP BY T.CLS_LOC_DT,
			     T.ITEM_CD,		        
		         T.INBOUND_DT,
		         T.LOT_NO,
		         T.LOT_ID,
		         T.WH_CD,
		         T.CTRT_NO,
		         T.EXP_DT,
		         T.LOT_04,
		         T.LOT_05 ) T1
		
		</select>
		
		<select id="searchDailyClosingByLocList" resultClass="DailyClosingVO">
			/* WHClosing.searchDailyClosingByLocList */
			SELECT T.*
				FROM (
				  SELECT 
				  		 ROW_NUMBER() OVER (ORDER BY I.CLS_LOC_DT ASC) as ROWNUM,
				  		 I.CLS_LOC_DT,
				  		 I.ITEM_CD,
				         I.ITEM_NM,
				         L.LOT_ATTRIB_01,
				         CONVERT(VARCHAR(10), CONVERT(DATETIME, L.LOT_ATTRIB_01, 102), 102) AS INBOUND_DT,
				         L.LOT_ATTRIB_02 AS LOT_NO,
				         L.LOT_ID AS LOT_ID,
				         I.WH_LOC_CD,
		             dbo.TL_GET_WH_LOC_NM (I.WH_CD, I.WH_LOC_CD) AS WH_LOC_NM,
				         ISNULL(I.IN_QTY, 0) - ISNULL (I.ALLC_QTY, 0) - ISNULL (I.HOLD_QTY, 0) - ISNULL (I.DMG_QTY, 0)  AS STC_QTY,
				         ISNULL (I.ALLC_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS ALLC_QTY,
				         ISNULL (I.HOLD_QTY, 0) AS HOLD_QTY,
				         ISNULL (I.DMG_QTY, 0) AS DMG_QTY,
				         ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) AS TOT_QTY,
				         <![CDATA[ 
				         CASE WHEN ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBM, 0)     - ISNULL(I.OUT_CBM, 0)     END AS ITEM_CBM,
				         CASE WHEN ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     < 0 THEN 0 ELSE ISNULL(I.IN_CBF, 0)     - ISNULL(I.OUT_CBF, 0)     END AS ITEM_CBF,
				         CASE WHEN ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_KGS, 0) - ISNULL(I.OUT_GRS_KGS, 0) END AS ITEM_GRS_KGS,
				         CASE WHEN ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_GRS_LBS, 0) - ISNULL(I.OUT_GRS_LBS, 0) END AS ITEM_GRS_LBS,
				         CASE WHEN ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_KGS, 0) - ISNULL(I.OUT_NET_KGS, 0) END AS ITEM_NET_KGS,
				         CASE WHEN ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) < 0 THEN 0 ELSE ISNULL(I.IN_NET_LBS, 0) - ISNULL(I.OUT_NET_LBS, 0) END AS ITEM_NET_LBS,
				         ]]>
				         I.WH_CD,
		             dbo.TL_GET_LOC_NM (I.WH_CD) AS WH_NM,		         		         
				         I.CTRT_NO,
				         dbo.TL_GET_CTRT_NM (I.CTRT_NO) AS CTRT_NM,
				         CONVERT(VARCHAR(10), CONVERT(DATETIME, L.LOT_ATTRIB_03, 102), 102) AS EXP_DT,
				         L.LOT_ATTRIB_04 AS LOT_04,
				         L.LOT_ATTRIB_05 AS LOT_05,
				         I.WIB_BK_NO,
				         B.CUST_ORD_NO
				    FROM TL_WH_CLS_INV_LOC I LEFT JOIN TL_WH_IB B ON I.WIB_BK_NO = B.WIB_BK_NO,
				         TL_CTRT_CUST_ITEM CI,
				         TL_CTRT_CUST_ITEM_LOT L
				   WHERE I.CTRT_NO = CI.CTRT_NO
				     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
				     AND CI.ITEM_USE_FLG = 'Y'
				     AND I.CTRT_NO = L.CTRT_NO
				     AND I.ITEM_SYS_NO = L.ITEM_SYS_NO
				     AND I.LOT_ID = L.LOT_ID
				     AND ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) > 0
				     <isNotNull property="ctrt_no">
						 <isNotEmpty property="ctrt_no">
								AND I.CTRT_NO = #ctrt_no#                                        /* CONTRACT NO */
						 </isNotEmpty> 		     
				     </isNotNull>
							AND I.WH_CD = #wh_cd#
					
					<isNotNull property="item_cd">
						 <isNotEmpty property="item_cd">		                     
								AND I.ITEM_CD = #item_cd#                                        /* ITEM CODE */
						 </isNotEmpty> 
					</isNotNull>		
					
					<isNotNull property="prop_no">
						<isNotEmpty property="prop_no">
							<isEqual property="prop_no_tp" compareValue="LOT_ID">		     
								AND L.LOT_ID = #prop_no#                                         /* LOT ID */
							</isEqual>		     
							<isEqual property="prop_no_tp" compareValue="LOT_NO">		     
								AND L.LOT_ATTRIB_02 = #prop_no#                                  /* LOT NO */
							</isEqual>           		                              
							<isEqual property="prop_no_tp" compareValue="LOT_04">		                     
								AND L.LOT_ATTRIB_04 = #prop_no#                                  /* LOT 04 */
							</isEqual>		        		                              
							<isEqual property="prop_no_tp" compareValue="LOT_05">		                     
								AND L.LOT_ATTRIB_05 = #prop_no#                                  /* LOT 05 */
							</isEqual>
						</isNotEmpty> 
					</isNotNull>
		     
		     		<isNotNull property="prop_date_fm">
			     	 <isNotEmpty property="prop_date_fm">		                     
					   <![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
					 </isNotEmpty> 		                     
		     		</isNotNull>
		     		
		     		<isNotNull property="prop_date_to">
					 <isNotEmpty property="prop_date_to">		                     
					   <![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
					 </isNotEmpty> 
		     		</isNotNull>
				     
				     <isNotNull property="wh_loc_cd">
				         <isNotEmpty property="wh_loc_cd">		                     
				             AND I.WH_LOC_CD = #wh_loc_cd#   /* LOCATION CODE */
				         </isNotEmpty> 		                     
				     </isNotNull>
				     
				     <isNotNull property="wib_bk_no">
				         <isNotEmpty property="wib_bk_no">		                     
				             AND I.WIB_BK_NO = #wib_bk_no#   /* IN BOOKING NO */
				         </isNotEmpty> 
				     </isNotNull>
				     
				     <isNotNull property="cust_ord_no">
				         <isNotEmpty property="cust_ord_no">		                     
				             AND B.CUST_ORD_NO = #cust_ord_no#   /* CUST ORDER NO */
						 </isNotEmpty>        
				     </isNotNull>
		       
		       )T
		       
		       <![CDATA[ where T.ROWNUM > #beginIdx# AND T.ROWNUM <= #topCnt#	]]> 
		       
				ORDER BY T.CTRT_NO, T.ITEM_CD, T.LOT_ATTRIB_01, T.WH_LOC_CD, T.WIB_BK_NO	
		     
		</select>
		
		<select id="searchDailyClosingByLocList_CNT" resultClass="Integer">
			/* WmsWHClosingSQL.xml > searchDailyClosingByLocList_CNT */
				
				  SELECT COUNT(*)
				    FROM TL_WH_CLS_INV_LOC I LEFT JOIN TL_WH_IB B ON I.WIB_BK_NO = B.WIB_BK_NO,
				         TL_CTRT_CUST_ITEM CI,
				         TL_CTRT_CUST_ITEM_LOT L
				   WHERE I.CTRT_NO = CI.CTRT_NO
				     AND I.ITEM_SYS_NO = CI.ITEM_SYS_NO
				     AND CI.ITEM_USE_FLG = 'Y'
				     AND I.CTRT_NO = L.CTRT_NO
				     AND I.ITEM_SYS_NO = L.ITEM_SYS_NO
				     AND I.LOT_ID = L.LOT_ID
				     AND ISNULL (I.IN_QTY, 0) - ISNULL (I.OUT_QTY, 0) > 0
				     <isNotNull property="ctrt_no">
						 <isNotEmpty property="ctrt_no">
								AND I.CTRT_NO = #ctrt_no#                                        /* CONTRACT NO */
						 </isNotEmpty> 		     
				     </isNotNull>
							AND I.WH_CD = #wh_cd#
					
					<isNotNull property="item_cd">
						 <isNotEmpty property="item_cd">		                     
								AND I.ITEM_CD = #item_cd#                                        /* ITEM CODE */
						 </isNotEmpty> 
					</isNotNull>		
					
					<isNotNull property="prop_no">
						<isNotEmpty property="prop_no">
							<isEqual property="prop_no_tp" compareValue="LOT_ID">		     
								AND L.LOT_ID = #prop_no#                                         /* LOT ID */
							</isEqual>		     
							<isEqual property="prop_no_tp" compareValue="LOT_NO">		     
								AND L.LOT_ATTRIB_02 = #prop_no#                                  /* LOT NO */
							</isEqual>           		                              
							<isEqual property="prop_no_tp" compareValue="LOT_04">		                     
								AND L.LOT_ATTRIB_04 = #prop_no#                                  /* LOT 04 */
							</isEqual>		        		                              
							<isEqual property="prop_no_tp" compareValue="LOT_05">		                     
								AND L.LOT_ATTRIB_05 = #prop_no#                                  /* LOT 05 */
							</isEqual>
						</isNotEmpty> 
					</isNotNull>
		     
		     		<isNotNull property="prop_date_fm">
			     	 <isNotEmpty property="prop_date_fm">		                     
					   <![CDATA[ AND I.CLS_LOC_DT >= ]]> REPLACE (#prop_date_fm#, '-', '')     	/* CLOSING DATE */
					 </isNotEmpty> 		                     
		     		</isNotNull>
		     		
		     		<isNotNull property="prop_date_to">
					 <isNotEmpty property="prop_date_to">		                     
					   <![CDATA[ AND I.CLS_LOC_DT <= ]]> REPLACE (#prop_date_to#, '-', '')
					 </isNotEmpty> 
		     		</isNotNull>
				     
				     <isNotNull property="wh_loc_cd">
				         <isNotEmpty property="wh_loc_cd">		                     
				             AND I.WH_LOC_CD = #wh_loc_cd#   /* LOCATION CODE */
				         </isNotEmpty> 		                     
				     </isNotNull>
				     
				     <isNotNull property="wib_bk_no">
				         <isNotEmpty property="wib_bk_no">		                     
				             AND I.WIB_BK_NO = #wib_bk_no#   /* IN BOOKING NO */
				         </isNotEmpty> 
				     </isNotNull>
				     
				     <isNotNull property="cust_ord_no">
				         <isNotEmpty property="cust_ord_no">		                     
				             AND B.CUST_ORD_NO = #cust_ord_no#   /* CUST ORDER NO */
						 </isNotEmpty>        
				     </isNotNull>
		</select>
	<!-- Long.Le (E) -->
	
	
	<typeAlias alias="Grd01ClosingDetailDto" 	type="com.clt.apps.fis.wms.whclosing.dto.Grd01ClosingDetailVO"/>
	<select id="searchClosingDetailDtl" resultClass="Grd01ClosingDetailDto">
	<!-- LKH 2016.07.21 :: Closing Create 시 Storage 로직 수정 -->
	/*WHClosing.searchClosingDetailDtl*/
	SELECT
		 '' AS STR_IN_EA_QTY, 
		 T.*
<!-- 	     , ROWNUM AS RN /*화면에서 SEQ한값을 넣어 MERGE효과를 중지시킨다*/      -->
	     , T.CLS_NO + CONVERT(VARCHAR(10), T.CLS_SEQ, 102) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO + T.ORDER_REL 
	       + T.ITEM_SYS_NO + CONVERT (VARCHAR(10), T.ITEM_SEQ, 102) + T.WH_LOC_CD  AS MERGE_KEY
	     , T.CLS_NO + CONVERT(VARCHAR(10), T.CLS_SEQ, 102) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO + T.ORDER_REL 
	       + T.ITEM_SYS_NO + CONVERT (VARCHAR(10), T.ITEM_SEQ, 102) + T.LOT_ID + CONVERT(VARCHAR(10), T.EA_QTY, 102) + T.WH_LOC_CD + T.SPACE_TP_CD + EQ_TPSZ_CD + EQ_NO + SEAL_NO AS SUB_KEY
	     , T.CLS_NO + CONVERT(VARCHAR(10), T.CLS_SEQ, 102) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO AS SUB_BK_KEY
	  FROM (
			SELECT DENSE_RANK() OVER( ORDER BY CLS_SO.CLS_NO ASC, CLS_SO.CLS_SEQ ASC) AS SEQ
			     , CLS_SO.CLS_NO
			     , CLS_SO.CLS_SEQ
			     , ISNULL(CLS_SO.CUST_CD, ' ') AS CUST_CD	
	             , CASE WHEN CLS_SO.STS_CD = 'C' THEN 
										       CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0  
									                THEN 'I' /* I : Invoiced */
									                ELSE CLS_SO.STS_CD
									                END
									                
	                     ELSE CLS_SO.STS_CD  
	                     END AS STS_CD
<!-- 			     , ISNULL((SELECT CUST_LOC_NM FROM TL_CUST CUST WHERE CUST.CUST_CD = CLS_SO.CUST_CD AND CUST.USE_FLG = 'Y' ), ' ') AS CUST_NM -->
			     , ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ), ' ') AS CUST_NM
			     , SUB_DTL.SB_CLS_CD
			     , SUB_DTL.CLS_DTL_SEQ
			     , SUB_DTL.RATE_TP_CD
<!-- 			     , ISNULL(TO_CHAR(TO_DATE(SUB_DTL.PRE_CLS_DT, 'YYYYMMDD'), 'YYYY-MM-DD'), ' ') AS PRE_CLS_DT -->
<!-- 			     , Isnull(CONVERT(VARCHAR(10), CONVERT(DATETIME,SUB_DTL.PRE_CLS_DT, 102), 102), ' ') AS PRE_CLS_DT -->
			     ,  CASE
					<!-- WHEN SUB_DTL.PRE_CLS_DT != NULL THEN CONVERT (VARCHAR (10),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT), 102) -->
					<!-- WHEN SUB_DTL.PRE_CLS_DT IS NOT NULL THEN CONVERT (VARCHAR (8),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT, 112) -1, 112) -->
					WHEN SUB_DTL.PRE_CLS_DT IS NOT NULL THEN CONVERT (VARCHAR (8),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT, 112), 112)
					ELSE '' 
					END as PRE_CLS_DT
			     , SUB_DTL.TRANS_DT
			     , ISNULL(SUB_DTL.BK_NO, ' ') AS BK_NO
			     , ISNULL(SUB_DTL.ORD_TP_CD, ' ') AS ORD_TP_CD
			     , ISNULL(SUB_DTL.ORDER_REL, ' ') AS ORDER_REL
			     , ISNULL(SUB_DTL.LOAD_TP_CD, ' ') AS LOAD_TP_CD
			     , CLS_S.FRT_CD		     	     
			     , CLS_S.FRT_NM
			     , CLS_S.FRT_CD AS FRT_CD_ORG	     	     
			     , CLS_S.FRT_NM AS FRT_NM_ORG
			     , SUB_DTL.CTRT_NO
			     , SUB_DTL.RTP_NO
			     , SUB_DTL.WH_CD
			     , SUB_DTL.OFC_CD		     
			     , SUB_DTL.PO_SYS_NO
			     , SUB_DTL.ITEM_SYS_NO
			     , SUB_DTL.ITEM_SEQ
			     , SUB_DTL.PO_NO
			     , SUB_DTL.ITEM_CD
			     , SUB_DTL.ITEM_NM
			     , ISNULL(SUB_DTL.LOT_ID, ' ') AS LOT_ID
			     , SUB_DTL.STOCK_PERIOD
			     , CASE WHEN SUB_DTL.RATE_TP_CD = 'OTH' THEN SUB_DTL.OTH_UNIT_CD 
			            ELSE  
			               CASE WHEN SUB_DTL.FIX_UNIT_CD IS NOT NULL THEN SUB_DTL.FIX_UNIT_CD
			                    ELSE 
					                  CASE WHEN SUB_DTL.ITEM_SYS_NO IS NULL THEN '' 
					                       ELSE (
					                               dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY, CI.PKG_LV1_UNIT_CD, CI.ITEM_PKGBASEQTY, CI.ITEM_PKGUNIT
				                                   , CI.PKG_LV3_QTY, CI.PKG_LV3_UNIT_CD, CI.PKG_LV4_QTY, CI.PKG_LV4_UNIT_CD)
				                                ) 
				                      END
				           END
		           END AS PKG_INFO
			     , CASE WHEN SUB_DTL.RATE_TP_CD = 'OTH' THEN SUB_DTL.OTH_QTY 
			            ELSE 
			                 CASE WHEN SUB_DTL.FIX_UNIT_CD IS NOT NULL THEN SUB_DTL.FIX_QTY
			                      ELSE SUB_DTL.EA_QTY
			                 END
			       END AS EA_QTY
			     , SUB_DTL.PL_OVER_WGT
			     , SUB_DTL.PL_LVL
			     , SUB_DTL.BX_LVL
			     , SUB_DTL.IN_LVL
			     , SUB_DTL.EA_LVL
			     , SUB_DTL.AMT_PL_LVL
			     , SUB_DTL.AMT_BX_LVL
			     , SUB_DTL.AMT_IN_LVL
			     , SUB_DTL.AMT_EA_LVL
			     , SUB_DTL.WH_LOC_CD
			     , ISNULL(dbo.TL_GET_WH_LOC_NM(SUB_DTL.WH_CD, SUB_DTL.WH_LOC_CD), ' ') AS WH_LOC_NM
			     , SUB_DTL.SPACE_TP_CD
			     , ISNULL(dbo.TL_GET_COMM_NM('WS0', SUB_DTL.SPACE_TP_CD), ' ') AS SPACE_TP_NM
			     , SUB_DTL.AMT_LOC
			     , SUB_DTL.CBM
			     , SUB_DTL.CBF
			     , SUB_DTL.GRS_KGS
			     , SUB_DTL.GRS_LBS
			     , SUB_DTL.NET_KGS
			     , SUB_DTL.NET_LBS
			     , SUB_DTL.AMT_CBM
			     , SUB_DTL.AMT_CBF
			     , SUB_DTL.AMT_GRS_KGS
			     , SUB_DTL.AMT_GRS_LBS
			     , SUB_DTL.AMT_NET_KGS
			     , SUB_DTL.AMT_NET_LBS
			     , ISNULL(SUB_DTL.EQ_TPSZ_CD, ' ') AS EQ_TPSZ_CD
			     , ISNULL(SUB_DTL.EQ_NO, ' ') AS EQ_NO
			     , ISNULL(SUB_DTL.SEAL_NO, ' ') AS SEAL_NO
			     , SUB_DTL.AMT_EQ
			     , CLS_S.CURR_CD		
			     , CLS_S.CURR_CD AS CURR_CD_ORG  
			     , SUB_DTL.AMT_ORD
			     , SUB_DTL.TOT_AMT
			     , SUB_DTL.OTH_COST_NO
			     , SUB_DTL.SRC_TP_CD
			     , SUB_DTL.PKG_LV1_UNIT_CD
			     , SUB_DTL.PKG_LV1_QTY
			     , SUB_DTL.PKG_LV2_UNIT_CD
			     , SUB_DTL.PKG_LV2_QTY
			     , SUB_DTL.PKG_LV3_UNIT_CD
			     , SUB_DTL.PKG_LV3_QTY
			     , SUB_DTL.PKG_LV4_UNIT_CD
			     , SUB_DTL.PKG_LV4_QTY
			     , SUB_DTL.PKG_PL_STD_QTY
			     , SUB_DTL.PKG_PL_OVER_WGT
			     , SUB_DTL.AMT_OTH
			     , SUB_DTL.OTH_UNIT_CD
			     , SUB_DTL.AMT_FIX
			     , SUB_DTL.FIX_UNIT_CD
<!-- 			     , CD.DISP_SEQ AS CODE_DISP_SEQ -->
			  FROM TL_WH_CLS_SO CLS_SO
					LEFT JOIN
					        (
					            SELECT
					                * 
					            FROM
					                TL_WH_CLS_SO_FRT A 
					            WHERE
					                ISNULL(A.UNIT_QTY, 0) + ISNULL(A.ADJUST_AMT, 0) != 0
					        ) CLS_S          
					            ON  CLS_SO.CLS_NO = CLS_S.CLS_NO 
					            AND CLS_SO.CLS_SEQ = CLS_S.CLS_SEQ
			  
			     , TL_WH_CLS_SO_DTL SUB_DTL
			     LEFT OUTER JOIN
				        TL_CTRT_CUST_ITEM CI 
				            ON SUB_DTL.CTRT_NO = CI.CTRT_NO 
				            and SUB_DTL.ITEM_SYS_NO  = CI.ITEM_SYS_NO,
				TB_COM_CD_DTL CD
			 WHERE CLS_SO.CLS_NO = SUB_DTL.CLS_NO
			   AND CLS_SO.CLS_SEQ = SUB_DTL.CLS_SEQ
			   
			   	<isEqual property="search_tp" compareValue="CLS_NO">
				    AND SUB_DTL.CLS_NO = #cls_no#
			   </isEqual>
			   <isEqual property="search_tp" compareValue="IN_CLS_NO">
				    AND SUB_DTL.CLS_NO = #in_cls_no#
			   </isEqual>
			   <isNotEqual property="search_tp" compareValue="CLS_NO">
				   <isNotEqual property="search_tp" compareValue="IN_CLS_NO">
				   		AND SUB_DTL.CLS_NO IN (
												SELECT SUB_D.CLS_NO
												  FROM TL_WH_CLS_SO_DTL SUB_D
												 WHERE SUB_D.CLS_NO = SUB_DTL.CLS_NO
												   AND SUB_D.CLS_AGR_NO = #cls_agr_no#
						                      )
				   </isNotEqual>
			   </isNotEqual>
			   
			   <isNotEqual property="sb_cls_cd" compareValue="ALL">
			     AND SUB_DTL.SB_CLS_CD  = #sb_cls_cd#
			   </isNotEqual>
			   <isNotEqual property="rate_tp_cd" compareValue="ALL">
			     AND SUB_DTL.RATE_TP_CD  = #rate_tp_cd#
			   </isNotEqual>
			   <isNotEqual property="cust_cd" compareValue="ALL">
			     AND CLS_SO.CUST_CD  = #cust_cd#
			   </isNotEqual>
<!-- 			   AND CD.GRP_CD = 'WR0' -->
			   AND CD.COM_CD = 'WR0'   
<!-- 		       AND CD.CODE_CD = SUB_DTL.RATE_TP_CD -->
		       AND CD.CD_VAL = SUB_DTL.RATE_TP_CD
	       ) T
	    GROUP BY T.SEQ,T.CLS_NO,T.CLS_SEQ,T.CUST_CD,T.STS_CD,T.CUST_NM,T.SB_CLS_CD,T.CLS_DTL_SEQ,T.RATE_TP_CD
	    ,T.PRE_CLS_DT,T.TRANS_DT,T.BK_NO,T.ORD_TP_CD,T.ORDER_REL,T.LOAD_TP_CD,T.FRT_CD,T.FRT_NM,T.FRT_CD_ORG
	    ,T.FRT_CD_ORG,T.FRT_NM_ORG,T.CTRT_NO,T.RTP_NO,T.WH_CD,T.OFC_CD,T.PO_SYS_NO,T.ITEM_SYS_NO,T.ITEM_SEQ
	    ,T.PO_NO,T.ITEM_CD,T.ITEM_NM,T.LOT_ID,T.STOCK_PERIOD,T.PKG_INFO,T.EA_QTY,T.PL_OVER_WGT
	    ,T.PL_LVL,T.BX_LVL,T.IN_LVL,T.EA_LVL,T.AMT_BX_LVL,T.AMT_PL_LVL,T.AMT_IN_LVL,T.AMT_EA_LVL
	    ,T.WH_LOC_CD,T.WH_LOC_NM,T.SPACE_TP_CD,T.SPACE_TP_NM,T.AMT_LOC,T.CBM,T.CBF,T.GRS_KGS
	    ,T.GRS_LBS,T.NET_KGS,T.NET_LBS,T.AMT_CBM,T.AMT_CBF,T.AMT_GRS_KGS,T.AMT_GRS_LBS
	    ,T.AMT_NET_KGS,T.AMT_NET_LBS,T.EQ_TPSZ_CD,T.EQ_NO,T.SEAL_NO,T.AMT_EQ,T.CURR_CD
	    ,T.CURR_CD_ORG,T.AMT_ORD,T.TOT_AMT,T.OTH_COST_NO,T.SRC_TP_CD,T.PKG_LV1_UNIT_CD
	    ,T.PKG_LV1_QTY,T.PKG_LV2_UNIT_CD,T.PKG_LV2_QTY,T.PKG_LV3_UNIT_CD,T.PKG_LV3_QTY
	    ,T.PKG_LV4_UNIT_CD,T.PKG_LV4_QTY,T.PKG_PL_STD_QTY, T.PKG_PL_OVER_WGT,T.AMT_OTH
	    ,T.OTH_UNIT_CD,T.AMT_FIX,T.FIX_UNIT_CD	    
	<isEqual property="sort_tp_cd" compareValue="A">			    
	     ORDER BY
			    T.ITEM_CD ASC
				,(
				CASE                     
		            WHEN T.RATE_TP_CD = 'IN' THEN 'A'
					WHEN T.RATE_TP_CD = 'STR' THEN 'C'
					WHEN T.RATE_TP_CD = 'OUT' THEN 'B'
		            ELSE 'D'			
		        END
				) ASC
				,T.LOT_ID ASC
				,T.TRANS_DT ASC     
				,SUBSTRING(BK_NO,1,1) DESC
	</isEqual>
	<isEqual property="sort_tp_cd" compareValue="B">	
	     ORDER BY 
	         T.CLS_SEQ ASC /*CLS_SO.CUST_CD*/
	         , T.SB_CLS_CD DESC
<!-- 	         , T.CODE_DISP_SEQ ASC -->
	         , T.PRE_CLS_DT ASC
		     , T.TRANS_DT ASC
		     , T.BK_NO ASC
		     , T.ORDER_REL ASC		     
		     , T.ITEM_SYS_NO ASC
		     , ISNULL(T.ITEM_SEQ, 0) ASC
		     , T.LOT_ID ASC
	         , T.STOCK_PERIOD ASC
		     , T.EA_QTY ASC
		     , T.PL_OVER_WGT ASC
		     , T.PL_LVL ASC
		     , T.BX_LVL ASC
		     , T.IN_LVL ASC
		     , T.EA_LVL ASC
		     , T.CBM ASC
			 , T.CBF ASC
			 , T.GRS_KGS ASC
			 , T.GRS_LBS ASC
			 , T.NET_KGS ASC
			 , T.NET_LBS ASC
		     , T.WH_LOC_NM ASC
		     , T.SPACE_TP_NM ASC
		     , T.EQ_TPSZ_CD ASC
			 , T.EQ_NO ASC
			 , T.SEAL_NO ASC
		     , T.FRT_CD ASC
		     , T.FRT_NM ASC
		     , T.CURR_CD ASC
	</isEqual>
	<isEqual property="sort_tp_cd" compareValue="C">			    
	     ORDER BY
	     		T.LOT_ID ASC
			    ,T.ITEM_CD ASC
				,(
				CASE                     
		            WHEN T.RATE_TP_CD = 'IN' THEN 'A'
					WHEN T.RATE_TP_CD = 'STR' THEN 'C'
					WHEN T.RATE_TP_CD = 'OUT' THEN 'B'
		            ELSE 'D'			
		        END
				) ASC
				,T.TRANS_DT ASC     
				,SUBSTRING(BK_NO,1,1) DESC
	</isEqual>
	</select>
		
		<select id="searchClosingDetailDtlNoAmount" resultClass="Grd01ClosingDetailDto">
			<!-- LKH 2016.07.21 :: Closing Create 시 Storage 로직 수정 -->
			/*WHClosing.searchClosingDetailDtlNoAmount*/
			SELECT 
				<!-- 
				CASE 
					WHEN RATE_TP_CD = 'STR' THEN
						CASE 
							WHEN SUBSTRING(BK_NO,1,1) = 'O' THEN
								0 /* ISNULL(EA_QTY,0) * -1 */
							ELSE ISNULL(EA_QTY,0)
						END
					ELSE
						0 /* ISNULL(EA_QTY,0) */
		
				END AS IN_OUT_EA_QTY_BACK,
				CASE       
		            WHEN RATE_TP_CD = 'STR' THEN       
		            	CASE         
		                	WHEN SUBSTRING(BK_NO,1,1) = 'O' THEN ''
		                ELSE 
							(
							 SELECT CONVERT(varchar(20), ISNULL(SUM(EA_QTY),0) ) 
							   FROM TL_WH_CLS_SO_DTL 
							  WHERE CLS_NO = T.CLS_NO 
							  	AND CLS_SEQ = T.CLS_SEQ 
							  	AND LOT_ID = T.LOT_ID
							  	AND BK_NO = T.BK_NO   
								AND SB_CLS_CD = 'S' AND RATE_TP_CD ='STR' 
								AND SUBSTRING(BK_NO,1,1) = 'I' 
							)    
		            	END      
		            ELSE ''         
		        END AS STR_IN_EA_QTY,
		        -->
		        '' AS STR_IN_EA_QTY,
				 T.*
<!-- 		     , ROWNUM AS RN /*화면에서 SEQ한값을 넣어 MERGE효과를 중지시킨다*/      -->
			, ROW_NUMBER() OVER (ORDER BY T.CLS_SEQ DESC) as RN
		     , T.CLS_NO + CONVERT(VARCHAR(10), T.CLS_SEQ, 102) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO + T.ORDER_REL + T.ITEM_SYS_NO + CONVERT(VARCHAR(10), T.ITEM_SEQ, 102) + T.WH_LOC_CD  AS MERGE_KEY
			, T.CLS_NO +  CONVERT(VARCHAR(10), T.CLS_SEQ, 102) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO + T.ORDER_REL           + T.ITEM_SYS_NO + CONVERT(VARCHAR(10), T.ITEM_SEQ, 102) + T.LOT_ID +  CONVERT(VARCHAR(10), T.EA_QTY, 102) + T.WH_LOC_CD + T.SPACE_TP_CD + EQ_TPSZ_CD + EQ_NO + SEAL_NO AS SUB_KEY        
			, T.CLS_NO +  CONVERT(VARCHAR(10), T.CLS_SEQ) + T.SB_CLS_CD + T.RATE_TP_CD + T.PRE_CLS_DT + T.TRANS_DT + T.BK_NO AS SUB_BK_KEY
			, Isnull(dbo.TL_GET_WH_LOC_NM(T.WH_CD, T.WH_LOC_CD), ' ') AS WH_LOC_NM        
	        , Isnull(dbo.TL_GET_COMM_NM('WS0', T.SPACE_TP_CD), ' ') AS SPACE_TP_NM
			, CASE WHEN T.STS_CD_ORG = 'C' THEN                    
						CASE WHEN (SELECT COUNT(*) 
									FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
									WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = T.SO_NO_ORG
								  ) > 0                             THEN 'I' /* I : Invoiced */                           
					        ELSE T.STS_CD_ORG                           
	            			END ELSE T.STS_CD_ORG                          
	        	END AS STS_CD
			 , CASE WHEN T.RATE_TP_CD = 'OTH' THEN T.OTH_UNIT_CD          
		            ELSE                      
		            	CASE WHEN T.FIX_UNIT_CD IS NOT NULL THEN T.FIX_UNIT_CD                         
		                ELSE 
		                	CASE 
			                    WHEN T.ITEM_SYS_NO IS NULL THEN ''                               
			                    ELSE (                                      dbo.TL_GET_WH_PACK_MST_INFO(CI.PKG_LV1_QTY,
			                    CI.PKG_LV1_UNIT_CD,
			                    CI.ITEM_PKGBASEQTY,
			                    CI.ITEM_PKGUNIT                                         ,
			                    CI.PKG_LV3_QTY,
			                    CI.PKG_LV3_UNIT_CD,
			                    CI.PKG_LV4_QTY,
			                    CI.PKG_LV4_UNIT_CD)                                      )                             
		                END                 
		            END       
		        END AS PKG_INFO,
<!-- 		        Isnull((SELECT CUST_LOC_NM FROM TL_CUST CUST WHERE CUST.CUST_CD = T.CUST_CD AND CUST.USE_FLG = 'Y' ), ' ') AS CUST_NM -->
					ISNULL((SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = T.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ), ' ') AS CUST_NM
		  FROM (
				SELECT DENSE_RANK() OVER(ORDER BY CLS_SO.CLS_NO ASC, CLS_SO.CLS_SEQ ASC) AS SEQ,
			            CLS_SO.CLS_NO          ,
			            CLS_SO.CLS_SEQ          ,
			            Isnull(MAX(CLS_SO.CUST_CD), ' ') AS CUST_CD,
			            SUB_DTL.SB_CLS_CD          ,
			            '' AS CLS_DTL_SEQ          ,
			            SUB_DTL.RATE_TP_CD          ,
<!-- 			            Isnull(CONVERT(VARCHAR(10), CONVERT(DATETIME,SUB_DTL.PRE_CLS_DT, 102), 102), ' ') AS PRE_CLS_DT          , -->
			            CASE
							<!-- WHEN SUB_DTL.PRE_CLS_DT != NULL THEN CONVERT (VARCHAR (10),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT), 102) -->
							<!-- WHEN SUB_DTL.PRE_CLS_DT IS NOT NULL THEN CONVERT (VARCHAR (8),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT, 112) -1, 112) -->
							WHEN SUB_DTL.PRE_CLS_DT IS NOT NULL THEN CONVERT (VARCHAR (8),CONVERT (DATETIME, SUB_DTL.PRE_CLS_DT, 112), 112)
							ELSE '' 
							END as PRE_CLS_DT,
			            SUB_DTL.TRANS_DT,
			            Isnull(SUB_DTL.BK_NO, ' ') AS BK_NO          ,
			            Isnull(MAX(SUB_DTL.ORD_TP_CD), ' ') AS ORD_TP_CD          ,
			            Isnull(SUB_DTL.ORDER_REL, ' ') AS ORDER_REL          ,
			            Isnull(MAX(SUB_DTL.LOAD_TP_CD), ' ') AS LOAD_TP_CD                 ,
			            MAX(SUB_DTL.CTRT_NO) AS CTRT_NO          ,
			            MAX(SUB_DTL.RTP_NO) AS RTP_NO          ,
			            MAX(SUB_DTL.WH_CD) AS WH_CD          ,
			            MAX(SUB_DTL.OFC_CD) AS OFC_CD          ,
			            MAX(CLS_SO.SO_NO) AS SO_NO_ORG          ,
			            MAX(CLS_SO.STS_CD) AS STS_CD_ORG  ,
			            '' AS PO_SYS_NO          ,
			            SUB_DTL.ITEM_SYS_NO          ,
			            SUB_DTL.ITEM_SEQ          ,
			            '' AS PO_NO          ,
			            MAX(SUB_DTL.ITEM_CD) AS ITEM_CD          ,
			            MAX(SUB_DTL.ITEM_NM) AS ITEM_NM          ,
			            Isnull(SUB_DTL.LOT_ID, ' ') AS LOT_ID          ,
			            SUB_DTL.STOCK_PERIOD                             ,
			            CASE 
			                WHEN SUB_DTL.RATE_TP_CD = 'OTH' THEN SUB_DTL.OTH_QTY                  
			                ELSE                       
				                CASE 
				                    WHEN SUB_DTL.FIX_UNIT_CD IS NOT NULL THEN SUB_DTL.FIX_QTY                           
				                    ELSE SUB_DTL.EA_QTY                      
				                END            
			            END AS EA_QTY                       ,
			            SUB_DTL.PL_OVER_WGT          ,
			            SUB_DTL.PL_LVL          ,
			            SUB_DTL.BX_LVL          ,
			            SUB_DTL.IN_LVL          ,
			            SUB_DTL.EA_LVL                ,
			            SUB_DTL.WH_LOC_CD                    ,
			            SUB_DTL.SPACE_TP_CD                    ,
			            MAX(SUB_DTL.AMT_LOC) AS AMT_LOC          ,
			            SUB_DTL.CBM          ,
			            SUB_DTL.CBF          ,
			            SUB_DTL.GRS_KGS          ,
			            SUB_DTL.GRS_LBS          ,
			            SUB_DTL.NET_KGS          ,
			            SUB_DTL.NET_LBS          ,
			            MAX(SUB_DTL.AMT_CBM) AS AMT_CBM          ,
			            MAX(SUB_DTL.AMT_CBF) AS  AMT_CBF                ,
			            Isnull(SUB_DTL.EQ_TPSZ_CD, ' ') AS EQ_TPSZ_CD          ,
			            Isnull(SUB_DTL.EQ_NO, ' ') AS EQ_NO          ,
			            Isnull(SUB_DTL.SEAL_NO, ' ') AS SEAL_NO          ,
			            MAX(SUB_DTL.AMT_EQ) AS  AMT_EQ                    ,
			            MAX(SUB_DTL.AMT_ORD) AS AMT_ORD          ,
			            MAX(SUB_DTL.OTH_COST_NO) AS OTH_COST_NO          ,
			            MAX(SUB_DTL.SRC_TP_CD) AS SRC_TP_CD          ,
			            MAX(SUB_DTL.PKG_LV1_UNIT_CD) AS PKG_LV1_UNIT_CD          ,
			            MAX(SUB_DTL.PKG_LV1_QTY) AS PKG_LV1_QTY          ,
			            MAX(SUB_DTL.PKG_LV2_UNIT_CD) AS PKG_LV2_UNIT_CD          ,
			            MAX(SUB_DTL.PKG_LV2_QTY) AS PKG_LV2_QTY          ,
			            MAX(SUB_DTL.PKG_LV3_UNIT_CD) AS PKG_LV3_UNIT_CD          ,
			            MAX(SUB_DTL.PKG_LV3_QTY) AS PKG_LV3_QTY          ,
			            MAX(SUB_DTL.PKG_LV4_UNIT_CD) AS PKG_LV4_UNIT_CD          ,
			            MAX(SUB_DTL.PKG_LV4_QTY) AS PKG_LV4_QTY          ,
			            MAX(SUB_DTL.PKG_PL_STD_QTY) AS PKG_PL_STD_QTY          ,
			            MAX(SUB_DTL.PKG_PL_OVER_WGT) AS PKG_PL_OVER_WGT          ,
			            MAX(SUB_DTL.AMT_OTH) AS AMT_OTH          ,
			            MAX(SUB_DTL.OTH_UNIT_CD) AS OTH_UNIT_CD          ,
			            MAX(SUB_DTL.AMT_FIX) AS AMT_FIX          ,
			            MAX(SUB_DTL.FIX_UNIT_CD) AS FIX_UNIT_CD          ,
			            SUM(SUB_DTL.TOT_AMT) AS TOT_AMT
				  FROM TL_WH_CLS_SO CLS_SO
				     , TL_WH_CLS_SO_DTL SUB_DTL
				 WHERE CLS_SO.CLS_NO = SUB_DTL.CLS_NO
				   AND CLS_SO.CLS_SEQ = SUB_DTL.CLS_SEQ		
				   <isEqual property="search_tp" compareValue="CLS_NO">
					    AND SUB_DTL.CLS_NO = #cls_no#
				   </isEqual>
				   <isEqual property="search_tp" compareValue="IN_CLS_NO">
					    AND SUB_DTL.CLS_NO = #in_cls_no#
				   </isEqual>
				   <isNotEqual property="search_tp" compareValue="CLS_NO">
					   <isNotEqual property="search_tp" compareValue="IN_CLS_NO">
					   		AND SUB_DTL.CLS_NO IN (
												SELECT SUB_D.CLS_NO
												  FROM TL_WH_CLS_SO_DTL SUB_D
												 WHERE SUB_D.CLS_NO = SUB_DTL.CLS_NO
												   AND SUB_D.CLS_AGR_NO = #cls_agr_no#
						                      )
					   </isNotEqual>
				   </isNotEqual>
				   
				   <isNotEmpty property="sb_cls_cd">
					   <isNotEqual property="sb_cls_cd" compareValue="ALL">
					     AND SUB_DTL.SB_CLS_CD  = #sb_cls_cd#
					   </isNotEqual>
				   </isNotEmpty>
				   <isNotEmpty property="rate_tp_cd">
					   <isNotEqual property="rate_tp_cd" compareValue="ALL">
					     AND SUB_DTL.RATE_TP_CD  = #rate_tp_cd#
					   </isNotEqual>
					</isNotEmpty>
					<isNotEmpty property="cust_cd">
					   <isNotEqual property="cust_cd" compareValue="ALL">
					     AND CLS_SO.CUST_CD  = #cust_cd#
					   </isNotEqual>
				   </isNotEmpty>
				 GROUP BY CLS_SO.CLS_NO
				        , CLS_SO.CLS_SEQ
				        , SUB_DTL.SB_CLS_CD
				        , SUB_DTL.RATE_TP_CD
				        , SUB_DTL.PRE_CLS_DT
				        , SUB_DTL.TRANS_DT
				        , SUB_DTL.BK_NO
				        , SUB_DTL.ORDER_REL
				        , SUB_DTL.ITEM_SYS_NO
				        , SUB_DTL.ITEM_SEQ
				        , SUB_DTL.LOT_ID
				        , SUB_DTL.STOCK_PERIOD
				        , (CASE WHEN SUB_DTL.RATE_TP_CD = 'OTH' THEN SUB_DTL.OTH_QTY 
				                ELSE 
				                     CASE WHEN SUB_DTL.FIX_UNIT_CD IS NOT NULL THEN SUB_DTL.FIX_QTY
				                          ELSE SUB_DTL.EA_QTY
				                     END
				           END)
				        , SUB_DTL.PL_OVER_WGT
				        , SUB_DTL.PL_LVL
				        , SUB_DTL.BX_LVL
				        , SUB_DTL.IN_LVL
				        , SUB_DTL.EA_LVL
				        , CBM
				        , CBF
				        , GRS_KGS
				        , GRS_LBS
				        , NET_KGS
				        , NET_LBS		        
				        , SUB_DTL.WH_LOC_CD
				        , SUB_DTL.SPACE_TP_CD  
				        , SUB_DTL.EQ_TPSZ_CD  
				        , SUB_DTL.EQ_NO  
				        , SUB_DTL.SEAL_NO        
		       ) T
		       LEFT OUTER JOIN TL_CTRT_CUST_ITEM CI ON T.CTRT_NO = CI.CTRT_NO and T.ITEM_SYS_NO  = CI.ITEM_SYS_NO,
				TB_COM_CD_DTL CD
		   WHERE 1=1
				AND CD.COM_CD = 'WR0'
				AND CD.CD_VAL = T.RATE_TP_CD
		   <!-- AND RATE_TP_CD = 'STR' AND SUBSTRING(BK_NO,1,1) = 'I' /* Inventory Storage */ -->
		<isEqual property="sort_tp_cd" compareValue="A">		   
			ORDER BY
			    T.ITEM_CD ASC
				,(
				CASE                     
		            WHEN T.RATE_TP_CD = 'IN' THEN 'A'
					WHEN T.RATE_TP_CD = 'STR' THEN 'C'
					WHEN T.RATE_TP_CD = 'OUT' THEN 'B'
		            ELSE 'D'			
		        END
				) ASC
				,T.LOT_ID ASC
				,T.TRANS_DT ASC     
				,SUBSTRING(BK_NO,1,1) DESC
		</isEqual>
		<isEqual property="sort_tp_cd" compareValue="B">	 		   
		   ORDER BY T.CLS_SEQ ASC            ,
		        T.SB_CLS_CD DESC            ,
		        T.PRE_CLS_DT ASC         ,
		        T.TRANS_DT ASC         ,
		        T.BK_NO ASC         ,
		        T.ORDER_REL ASC                ,
		        T.ITEM_SYS_NO ASC         ,
		        Isnull(T.ITEM_SEQ,
		        0) ASC         ,
		        T.LOT_ID ASC         ,
		        T.STOCK_PERIOD ASC         ,
		        T.EA_QTY ASC         ,
		        T.PL_OVER_WGT ASC         ,
		        T.PL_LVL ASC         ,
		        T.BX_LVL ASC         ,
		        T.IN_LVL ASC         ,
		        T.EA_LVL ASC         ,
		        T.CBM ASC      ,
		        T.CBF ASC      ,
		        T.GRS_KGS ASC      ,
		        T.GRS_LBS ASC      ,
		        T.NET_KGS ASC      ,
		        T.NET_LBS ASC         ,
		        T.EQ_TPSZ_CD ASC      ,
		        T.EQ_NO ASC      ,
		        T.SEAL_NO ASC
		</isEqual> 
		<isEqual property="sort_tp_cd" compareValue="C">			    
	     ORDER BY
	     		T.LOT_ID ASC
			    ,T.ITEM_CD ASC
				,(
				CASE                     
		            WHEN T.RATE_TP_CD = 'IN' THEN 'A'
					WHEN T.RATE_TP_CD = 'STR' THEN 'C'
					WHEN T.RATE_TP_CD = 'OUT' THEN 'B'
		            ELSE 'D'			
		        END
				) ASC
				,T.TRANS_DT ASC     
				,SUBSTRING(BK_NO,1,1) DESC
	</isEqual>   
	</select>
	
	<!-- Hoai.Vo (S) -->
	<!-- Closing Search 고도화로 인한 삭제 -->	
	<typeAlias alias="ClosingSearchVO" 	type="com.clt.apps.fis.wms.whclosing.dto.ClosingSearchVO"/>
 	<select id="searchClosingList_bak" parameterClass="java.util.HashMap" resultClass="ClosingSearchVO">
		/*WHClosing.searchClosingList*/
		SELECT ROW_NUMBER() OVER (ORDER BY (select 1)) AS RN 
		     , DENSE_RANK() OVER( ORDER BY CLS.CLS_NO ASC, CLS_SO.CLS_SEQ, CLS_S.SB_CLS_CD DESC) AS SEQ 
		     , CLS.CLS_NO + CONVERT(VARCHAR(10), CLS_SO.CLS_SEQ) + CLS_S.SB_CLS_CD AS SUB_KEY 
		     , ' ' AS RMK_IMG 
		     , CLS.CLS_NO
		     , CLS_S.SB_CLS_CD
		     ,(CASE CLS_S.SB_CLS_CD
					WHEN 'S' THEN 'SELL'
					WHEN 'B' THEN 'BUY'
					ELSE ''
				END) AS SB_CLS_NM
		     , CLS_SO.CTRT_NO
		     , dbo.TL_GET_CTRT_NM(CLS_SO.CTRT_NO) AS CTRT_NM
		     , CLS_SO.RTP_NO
		     , CLS_SO.CUST_CD
		     , (SELECT LOCL_NM FROM TB_TRDP CUST WHERE CUST.TRDP_CD = CLS_SO.CUST_CD AND ISNULL(CUST.DELT_FLG,'N') = 'N' ) AS CUST_NM
		     , CASE WHEN CLS_SO.STS_CD = 'C' THEN 
										       CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0  
									                THEN 'I' /* I : Invoiced */
									                ELSE CLS_SO.STS_CD
									                END
									                
	                     ELSE CLS_SO.STS_CD  
	                     END AS STS_CD
		     , dbo.TL_GET_COMM_NM('WCS'
              ,(CASE WHEN CLS_SO.STS_CD = 'C' THEN 
			       CASE WHEN (SELECT COUNT(*) 
							FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
							WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
						  ) > 0 
	                THEN 'I' /* I : Invoiced */
	                ELSE CLS_SO.STS_CD
	                END
		                
               ELSE CLS_SO.STS_CD  
               END)
              ) AS STS_NM
		     , (SELECT TOP 1 C.INV_NO 
					FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ
						JOIN  TB_INV_DTL C ON B.INV_SEQ = C.inv_seq
					WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO) AS INV_NO
		     , ISNULL(CLS_SO.SO_NO, ' ') AS SO_NO
		     , 'View' AS FRT_VIEW
		     , ISNULL(CASE WHEN CLS_S.SB_CLS_CD = 'S' THEN CLS_SO.SELL_RMK
		            ELSE CLS_SO.BUY_RMK
		            END, ' ') AS RMK	     
		     , CLS_S.RATE_TP_CD
		     , dbo.TL_GET_COMM_NM('WR0',CLS_S.RATE_TP_CD) AS RATE_TP_NM
		     , CLS_S.ORDER_REL
		     , dbo.TL_GET_COMM_NM('WB1',CLS_S.ORDER_REL) AS ORDER_REL_NM
		     , CLS_S.FRT_CD
		     , CLS_S.FRT_NM
		     , CLS_S.CURR_CD
		     , CLS_S.BASIC_AMT
		     , CLS_S.ADJUST_AMT
		     <!-- , ISNULL(CLS_S.BASIC_AMT, 0) + ISNULL(CLS_S.ADJUST_AMT, 0) AS TOT_AMT TinLuong Modify 20160317-->   
		     , ISNULL(CLS_S.UNIT_QTY, 0) * ISNULL(CLS_S.UNIT_PRICE, 0) AS TOT_AMT     
		     , CLS_S.UNIT_CD
		     , CLS_S.UNIT_QTY
		     , CLS_S.UNIT_PRICE
	         , CLS.WH_CD
<!-- 	         , (SELECT DISP_SEQ  -->
<!-- 	              FROM TB_COM_CD CD  -->
<!-- 	             WHERE CD.PRNT_COM_CD = 'WR0' -->
<!-- 	               AND CD.COM_CD = CLS_S.RATE_TP_CD -->
<!-- 	            ) AS CD_DISP_SEQ -->
	         , SUM(ISNULL(CLS_S.UNIT_QTY, 0) * ISNULL(CLS_S.UNIT_PRICE, 0)) OVER ( PARTITION BY CLS.CLS_NO, CLS_SO.CLS_SEQ, CLS_S.SB_CLS_CD, CLS_S.CURR_CD) AS SUB_TOT
	         , CLS.CLS_DT
	         , CLS.SET_FR_DT
	         , CLS.SET_TO_DT
		  FROM TL_WH_CLS CLS JOIN TL_WH_CLS_SO CLS_SO ON CLS.CLS_NO = CLS_SO.CLS_NO LEFT JOIN
		     <![CDATA[ 
		      (SELECT * FROM TL_WH_CLS_SO_FRT A WHERE ISNULL(A.UNIT_QTY, 0) + ISNULL(A.ADJUST_AMT, 0) != 0) CLS_S 
		     ]]> ON  CLS_SO.CLS_NO = CLS_S.CLS_NO AND CLS_SO.CLS_SEQ = CLS_S.CLS_SEQ
		     
		 WHERE 1 = 1
		   
		      
	<isEqual property="auth_lvl" compareValue="AQ">
	       AND CLS.OFC_CD IN (SELECT OFC_CD 
			                    FROM TB_OFC O
			                   WHERE O.USE_FLG = 'Y'
			                     AND O.MODI_OFC_CD =  #org_cd#
			                   UNION
			                  SELECT OFC_CD
			                    FROM TB_OFC O
			                   WHERE O.USE_FLG = 'Y'
			                     AND O.OFC_CD =  #org_cd# 
			                  )
	</isEqual>
	
	<isEqual property="auth_lvl" compareValue="LB">
	       AND CLS.OFC_CD = #org_cd#
	</isEqual>       
	
	<isNotNull property="fm_cls_date">
		<isNotEmpty property="fm_cls_date">	
			   AND CLS.CLS_DT BETWEEN REPLACE(#fm_cls_date#, '-', '') AND REPLACE(#to_cls_date#, '-', '') 
	 	</isNotEmpty> 
	</isNotNull>       
	
	<isNotNull property="ofc_cd">
		<isNotEmpty property="ofc_cd">	   
			   AND CLS.OFC_CD = #ofc_cd#
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="ctrt_no">
		<isNotEmpty property="ctrt_no">	   
			   AND CLS_SO.CTRT_NO = #ctrt_no#
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="cust_cd">
		<isNotEmpty property="cust_cd">	   
			   AND CLS_SO.CUST_CD = #cust_cd#
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="cls_no">
		<isNotEmpty property="cls_no">	   
			   AND CLS.CLS_NO = #cls_no#
		</isNotEmpty>
	</isNotNull>
	
	<isNotNull property="wh_cd">
		<isNotEmpty property="wh_cd">	   
			   AND CLS.WH_CD = #wh_cd#
		</isNotEmpty>
	</isNotNull>
	
	<isNotEqual property="sb_cls_cd" compareValue="ALL">	
		   AND CLS_S.SB_CLS_CD = #sb_cls_cd#
	</isNotEqual>
	<isNotEqual property="rate_tp_cd" compareValue="ALL">	
		   AND CLS_S.RATE_TP_CD = #rate_tp_cd#
	</isNotEqual>
	<isNotEqual property="sts_cd" compareValue="ALL">	   
		   AND (CASE WHEN CLS_SO.STS_CD = 'C' THEN 
									       CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0 
								                THEN 'I' /* I : Invoiced */
								                ELSE CLS_SO.STS_CD
								                END
								                
	                    ELSE CLS_SO.STS_CD  
	                    END) = #sts_cd#
	</isNotEqual>
		 ORDER BY CLS.CLS_NO ASC
		        /*CLS_SO.CUST_CD ASC */
		        , CLS_SO.CLS_SEQ ASC
		        , CLS_S.SB_CLS_CD DESC /* SELL, BUY */
		        , CLS_S.CURR_CD ASC
	            /*, CD_DISP_SEQ ASC */ /* TYPE의 코드순서별*/
	            , CLS_S.ORDER_REL ASC
	            , CLS_S.FRT_CD ASC   
	            , CLS_S.FRT_NM ASC         
	            , CLS_S.DISP_SEQ ASC /*입력 시 등록된 순서별*/
	</select>
	
 	<select id="searchClosingList" parameterClass="java.util.HashMap" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/*WHClosing.searchClosingList*/
		WITH VTB_FRT AS (
			SELECT  
				frt.CLS_NO, frt.CUST_CD, frt.STS_CD, frt.INV_SEQ, 
				CASE WHEN MAX(frt.RATE_TP_CD) = 'OUT' AND MIN(frt.RATE_TP_CD) = 'IN' THEN 'IAO'
		             ELSE MAX(frt.RATE_TP_CD) 
			    END RATE_TP_CD, 
				SUM(frt.INV_AMT) INV_TTL_AMT,
				<!-- SUM(frt.QTY * frt.UNIT_PRICE) INV_TTL_AMT, --> 
				MAX(frt.SHEET_NM) sheet_nm
			FROM
				TL_CTRT_CUST_FRT frt
			WHERE
				1 = 1                     
				<isNotEmpty property="ctrt_no">	   
				AND frt.CTRT_NO = #ctrt_no#
				</isNotEmpty>
				<isNotEmpty property="wh_cd">	   
				AND frt.WH_CD = #wh_cd#
				</isNotEmpty>
				AND ISNULL(frt.CLS_NO,'') != '' 
				<isNotEmpty property="cls_no">
				AND frt.CLS_NO = #cls_no# 
				</isNotEmpty>          
				AND frt.USE_FLG = 'Y'      
				AND frt.DELT_FLG = 'N'
				<isNotEqual property="rate_tp_cd" compareValue="ALL">	
	            	<isEqual property="rate_tp_cd" compareValue="IAO">
		          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
	            	</isEqual>
	            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
		            	<isEqual property="rate_tp_cd" compareValue="STO">
			          		AND  frt.rate_tp_cd = 'STO'
		            	</isEqual>
		            	<isEqual property="rate_tp_cd" compareValue="OTH"> <!-- #1069 Closing other entry  -->
			          		AND  frt.rate_tp_cd = 'OTH'
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="STO">
			            	<isNotEqual property="rate_tp_cd" compareValue="OTH"> <!-- #1069 Closing other entry  -->
			            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
			            	</isNotEqual>
		            	</isNotEqual>
	            	</isNotEqual>
				</isNotEqual>
				<isNotEmpty property="cust_cd">	   
				AND frt.CUST_CD = #cust_cd#
				</isNotEmpty>
			GROUP BY
				frt.CLS_NO, frt.CUST_CD, frt.STS_CD, frt.INV_SEQ
		), V_SHEET as (
			SELECT
				C.CTRT_NO,
                case 
                    when CAL_METHOD_CD = 'DAY' then 'sheet2'
                    when CAL_METHOD_CD = 'FIX' then 'sheet3'
                    when CAL_METHOD_CD = 'DTV' then 'sheet4'     <!-- #2486 [LOA WMS4.0] EASY INVOICE CREATION FOR IN/OUTBOUND FILE -->
                    else 'sheet1' 
                end sheet_nm            
            FROM
                TL_CTRT C                   
            WHERE 1 = 1
            <!-- #3115 [BINEX WMS4.0] CLOSING LIST, CONTRACT NOT TO BE REQUIRED FIELD FOR SEARCH -->
            <isNotEmpty property="ctrt_no">
              AND C.CTRT_NO =  #ctrt_no#
            </isNotEmpty>
		)  
		SELECT DISTINCT 
				DENSE_RANK() OVER( ORDER BY hrd.CLS_NO ASC) AS SEQ
		      ,hrd.CLS_NO
		      ,hrd.CTRT_NO
		      ,dbo.TL_GET_CTRT_NM(hrd.CTRT_NO) AS CTRT_NM
		      ,hrd.WH_CD
		      ,hrd.SORT_BY
		      <!-- ,hrd.INV_TTL_AMT
		      ,hrd.CUST_CD
		      ,dbo.TL_GET_CUST_NM(hrd.CUST_CD) AS CUST_NM -->
		      ,hrd.CURR_CD
		      ,frt.STS_CD
		      ,case when hrd.STS_CD = 'CON' then 'Confirmed'
		      		when hrd.STS_CD = 'SAV' then 'Saved'
		      		when hrd.STS_CD = 'INV' then 'Invoiced'
		       end AS STS_NM
		      ,case when  ISNULL(hrd.CLS_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.CLS_DT),110),'') end CLS_DT
		      ,hrd.SET_FR_DT
		      ,hrd.SET_TO_DT
		      ,case when  ISNULL(hrd.SET_FR_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.SET_FR_DT),110),'') end + ' ~ ' 
		       + case when  ISNULL(hrd.SET_TO_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.SET_TO_DT),110),'') end AS PERIOD
		      ,hrd.F_REMARK
		      ,hrd.USE_FLG
		      ,hrd.DELT_FLG
		      ,hrd.WM_DOC_SEQ
		      ,hrd.REF_NO
		      ,hrd.OFC_CD
		      ,frt.CUST_CD 
		      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
		      ,frt.RATE_TP_CD
		      ,inv.INV_NO
		      ,inv.INV_SEQ
		      ,frt.INV_TTL_AMT
		      ,hrd.MODI_TMS
		      ,hrd.sell_buy_tp_cd  <!-- #1069 Closing other entry  -->
		  FROM TL_WH_CLS_HRD hrd
			   LEFT JOIN VTB_FRT frt 
		   			ON hrd.CLS_NO = frt.CLS_NO
		   			<isNotEqual property="g_cust_flg" compareValue="Y">
					   	AND hrd.CUST_CD = frt.CUST_CD
		   			</isNotEqual>
		        LEFT JOIN V_SHEET sht          
		            ON hrd.CTRT_NO = sht.CTRT_NO    
			    LEFT OUTER JOIN TB_FRT frt2          
			            ON frt2.WMS_SEQ = hrd.WM_DOC_SEQ 
			            AND frt2.TRDP_CD = hrd.CUST_CD
			            <!-- #6949 :  [Binex-TOR-WMS] Invoice Error  -->       
			 			<!-- AND frt2.INV_AMT > 0 -->   
			            and frt2.WMS_SEQ is not null  <!--  #6949 :  [Binex-TOR-WMS] Invoice Error -->
			            and frt2.WMS_SEQ != ''	  	  <!--  #6949 :  [Binex-TOR-WMS] Invoice Error  -->		 	
			    LEFT OUTER JOIN TB_INV_DTL inv          
			            ON frt2.INV_SEQ = inv.INV_SEQ 
 		 WHERE 1 = 1 
			<isNotEmpty property="cls_no">
			AND hrd.CLS_NO = #cls_no# 
			</isNotEmpty>
			<isNotEmpty property="ofc_cd">	   
			AND hrd.OFC_CD = #ofc_cd#
			</isNotEmpty>
			<isNotEmpty property="ctrt_no">	   
			AND hrd.CTRT_NO = #ctrt_no#
			</isNotEmpty>
			<isNotEmpty property="cust_cd">	   
			AND frt.CUST_CD = #cust_cd#
			</isNotEmpty>
			<isNotEmpty property="fm_cls_date">	
			AND hrd.CLS_DT BETWEEN REPLACE(#fm_cls_date#, '-', '') AND REPLACE(#to_cls_date#, '-', '') 
		 	</isNotEmpty> 
			<isNotEmpty property="wh_cd">	   
			AND hrd.WH_CD = #wh_cd#
			</isNotEmpty>
			<isNotEmpty property="s_ref_no">	   
			AND hrd.REF_NO = #s_ref_no#
			</isNotEmpty>
			AND ISNULL(frt.STS_CD,'') != ''
			<isNotEqual property="sts_cd" compareValue="ALL">	   
			AND frt.STS_CD  = #sts_cd#
			</isNotEqual>
			<isNotEqual property="rate_tp_cd" compareValue="ALL">	
            	<isEqual property="rate_tp_cd" compareValue="IAO">
	          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
            	</isEqual>
            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
	            	<isEqual property="rate_tp_cd" compareValue="STO">
		          		AND  frt.rate_tp_cd = 'STO'
	            	</isEqual>
	            	<isEqual property="rate_tp_cd" compareValue="OTH"> <!-- #1069 Closing other entry  -->
		          		AND  frt.rate_tp_cd = 'OTH'
	            	</isEqual>
	            	<isNotEqual property="rate_tp_cd" compareValue="STO">
		            	<isNotEqual property="rate_tp_cd" compareValue="OTH"> <!-- #1069 Closing other entry  -->
	    	        		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
		            	</isNotEqual>
	            	</isNotEqual>
            	</isNotEqual>
			</isNotEqual>
			<isNotEmpty property="sell_buy_tp_cd">	     <!-- #1069 Closing other entry  -->
			AND hrd.SELL_BUY_TP_CD = #sell_buy_tp_cd#
			</isNotEmpty>			
		   AND hrd.USE_FLG = 'Y'
		   AND hrd.DELT_FLG = 'N'
		   AND (frt.sheet_nm = sht.sheet_nm OR isnull(frt.sheet_nm,'') = '') 
		order by hrd.MODI_TMS desc
	</select>
	
	<select id="searchWarehouseCombo" resultClass="ClosingSearchVO">
	/*WHClosing.searchWarehouseCombo*/
		SELECT 
		   WH_CD,
		   WH_NM		  
		FROM TL_WH
		WHERE USE_FLG = 'Y'	   
	</select>
	<!-- Hoai.Vo (E) -->
	
	<typeAlias alias="ClosingFBStatusDto" 	type="com.clt.apps.fis.wms.whclosing.dto.ClosingFBStatusVO"/>
	<select id="searchClosingStatus" resultClass="ClosingFBStatusDto">
	/*WHClosing.searchClosingStatus*/
	SELECT COUNT(*) AS STS_CD
	  FROM TL_WH_CLS_AGR_MST T
	 WHERE T.WH_CD = #wh_cd#
	   AND T.CLS_MTH = SUBSTRING(REPLACE(#cls_dt#, '-', ''), 1,6)	
	   AND T.STS_CD = 'O'	   
	</select>
	
	<update id="modifyWhClsSoDtl">
	/*WHClosing.modifyWhClsSoDtl*/
	UPDATE TL_WH_CLS_SO_DTL
	   SET TOT_AMT     = #tot_amt#
	     , PL_OVER_WGT = #pl_over_wgt#
	     , PL_LVL      = #pl_lvl#
	     , BX_LVL      = #bx_lvl#
	     , IN_LVL      = #in_lvl#
	     , EA_LVL      = #ea_lvl#
	     , AMT_PL_LVL  = #amt_pl_lvl#
	     , AMT_BX_LVL  = #amt_bx_lvl#
	     , AMT_IN_LVL  = #amt_in_lvl#
	     , AMT_EA_LVL  = #amt_ea_lvl#
	     , AMT_LOC     = #amt_loc#    
	     , CBM         = #cbm#        
	     , CBF         = #cbf#        
	     , GRS_KGS     = #grs_kgs#    
	     , GRS_LBS     = #grs_lbs#    
	     , NET_KGS     = #net_kgs#    
	     , NET_LBS     = #net_lbs#    
	     , AMT_CBM     = #amt_cbm#    
	     , AMT_CBF     = #amt_cbf#    
	     , AMT_GRS_KGS = #amt_grs_kgs#
	     , AMT_GRS_LBS = #amt_grs_lbs#
	     , AMT_NET_KGS = #amt_net_kgs#
	     , AMT_NET_LBS = #amt_net_lbs#
	     , EQ_TPSZ_CD  = #eq_tpsz_cd# 
	     , EQ_NO       = #eq_no#      
	     , SEAL_NO     = #seal_no#    
	     , AMT_EQ      = #amt_eq# 
	     <isEmpty property="frt_cd_org">
	     	<isNotNull property="frt_cd">
		     	<isNotEmpty property="frt_cd">
		     		, FRT_CD      = #frt_cd#
		     		, FRT_NM      = #frt_nm#
		     	</isNotEmpty>
	     	</isNotNull>
	     </isEmpty>
	     
	     <isEmpty property="curr_cd_org">
	     	<isNotNull property="curr_cd">
		     	<isNotEmpty property="curr_cd">
		     		, CURR_CD     = #curr_cd#
		     	</isNotEmpty>
	     	</isNotNull>
	     </isEmpty>
	     , MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND SB_CLS_CD = #sb_cls_cd#
	   AND CLS_DTL_SEQ = #cls_dtl_seq# 
	</update>
	
	<update id="modifyWhClsSubDtlNoAmount">
	/*WHClosing.modifyWhClsSubDtlNoAmount*/
	UPDATE TL_WH_CLS_SO_DTL
	   SET PL_OVER_WGT = #pl_over_wgt#
	     , PL_LVL      = #pl_lvl#
	     , BX_LVL      = #bx_lvl#
	     , IN_LVL      = #in_lvl#
	     , EA_LVL      = #ea_lvl#
	     , CBM         = #cbm#        
	     , CBF         = #cbf#        
	     , GRS_KGS     = #grs_kgs#    
	     , GRS_LBS     = #grs_lbs#    
	     , NET_KGS     = #net_kgs#    
	     , NET_LBS     = #net_lbs#    
	     , EQ_TPSZ_CD  = #eq_tpsz_cd# 
	     , EQ_NO       = #eq_no#      
	     , SEAL_NO     = #seal_no#    
	     , MODI_ID     = #modi_id#
	     , MODI_OFC_CD = #modi_ofc_cd#
	     , MODI_SYS_DT = GETDATE()
	     , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND SB_CLS_CD = #sb_cls_cd#
	   AND RATE_TP_CD = #rate_tp_cd#
	   <isEmpty property="pre_cls_dt">
			AND PRE_CLS_DT = ''
	   </isEmpty>
	   
	   <isNotNull property="pre_cls_dt">
		   <isNotEmpty property="pre_cls_dt">
				AND PRE_CLS_DT = REPLACE(#pre_cls_dt#, '-', '')
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="trans_dt">
			AND TRANS_DT = ''
	   </isEmpty>
	   <isNotNull property="trans_dt">
		   <isNotEmpty property="trans_dt">
				AND TRANS_DT = REPLACE(#trans_dt#, '-', '') 
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="bk_no">
			AND BK_NO = ''
	   </isEmpty>
	   <isNotNull property="bk_no">
		   <isNotEmpty property="bk_no">
				AND BK_NO = #bk_no#    
		   </isNotEmpty>
	   </isNotNull>
	   AND ORDER_REL = #order_rel#
	   
	   <isEmpty property="item_sys_no">
			AND ITEM_SYS_NO = ''
	   </isEmpty>
	   <isNotNull property="item_sys_no">
		   <isNotEmpty property="item_sys_no">
				AND ITEM_SYS_NO = #item_sys_no#    
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="item_seq">
			AND ITEM_SEQ = ''
	   </isEmpty>
	   <isNotNull property="item_seq">
		   <isNotEmpty property="item_seq">
				AND ITEM_SEQ = #item_seq#    
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="lot_id">
			AND LOT_ID = ''
	   </isEmpty>
	   <isNotNull property="lot_id">
		   <isNotEmpty property="lot_id">
				AND LOT_ID = #lot_id#    
		   </isNotEmpty>
	   </isNotNull>
	AND ISNULL(STOCK_PERIOD,0) = #stock_period#
	AND ISNULL(((CASE WHEN RATE_TP_CD = 'OTH' THEN OTH_QTY 
		                ELSE 
		                     CASE WHEN FIX_UNIT_CD IS NOT NULL THEN FIX_QTY
		                          ELSE EA_QTY
		                     END
		           END)),0) = #ea_qty#
		           
	   <isEmpty property="wh_loc_cd">
			AND WH_LOC_CD = ''
	   </isEmpty>
	   <isNotNull property="wh_loc_cd">
		   <isNotEmpty property="wh_loc_cd">
				AND WH_LOC_CD = #wh_loc_cd#    
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="space_tp_cd">
			AND SPACE_TP_CD = ''
	   </isEmpty>
	   <isNotNull property="space_tp_cd">
		   <isNotEmpty property="space_tp_cd">
				AND SPACE_TP_CD = #space_tp_cd#    
		   </isNotEmpty>
	   </isNotNull>
	</update>
	
	<typeAlias alias="ClosingSubExistsInfoDto" 	type="com.clt.apps.fis.wms.whclosing.dto.ClosingSubExistsInfoVO"/>
	<select id="searchWhClsSoExistsInfo" resultClass="ClosingSubExistsInfoDto">
	/*WHClosing.searchWhClsSoExistsInfo*/
	SELECT CLS_SO.CLS_NO
	     , CLS_SO.CLS_SEQ	    
	  FROM TL_WH_CLS_SO CLS_SO	     
	 WHERE CLS_SO.CLS_NO    = #cls_no#
	   AND CLS_SO.CUST_CD   = #cust_cd#	   
	</select>
	
	<insert id="saveWhClsSoForDtl">
	/*WmsWHClosingSQL.xml > saveWhClsSoForDtl*/
	INSERT INTO TL_WH_CLS_SO
	     ( CLS_NO
	     , CLS_SEQ
	     , WH_CD
	     , OFC_CD
	     , CTRT_NO
	     , RTP_NO
	     , CUST_CD
	     , STS_CD
	     , SELL_RMK
	     , BUY_RMK
	     , SO_NO
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	SELECT top 1 CLS_NO
	     , #cls_seq#
	     , WH_CD
	     , OFC_CD
	     , CTRT_NO
	     , RTP_NO
	     , #cust_cd#
	     , #sts_cd#
	     <isEqual property="sb_cls_cd" compareValue="S">
	     ,#rmk#
	     ,NULL
	     </isEqual>
	      <isEqual property="sb_cls_cd" compareValue="B">
	      ,NULL
	      ,#rmk#
	     </isEqual>
	   	 , NULL
	     , #rgst_id#
		 , #rgst_ofc_cd#
		 , GETDATE()
		 , dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD)
		 , #rgst_id#
		 , #rgst_ofc_cd#
		 , GETDATE()
		 , dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD) 
	  FROM TL_WH_CLS_SO
	 WHERE CLS_NO = #cls_no#
	</insert>
	
	<insert id="saveWhClsSoDtl">
	/*WHClosing.saveWhClsSoDtl*/
	INSERT INTO TL_WH_CLS_SO_DTL 
	     ( CLS_NO
	     , CLS_SEQ
	     , SB_CLS_CD
	     , CLS_DTL_SEQ
	     , RATE_TP_CD
	     , PRE_CLS_DT
	     , TRANS_DT
	     , BK_NO
	     , ORD_TP_CD
	     , ORDER_REL
	     , LOAD_TP_CD
	     , FRT_CD
	     , FRT_NM
	     , CTRT_NO
	     , RTP_NO
	     , WH_CD
	     , OFC_CD
	     , CUST_CD
	     , PO_SYS_NO
	     , ITEM_SYS_NO
	     , ITEM_SEQ
	     , PO_NO
	     , ITEM_CD
	     , ITEM_NM
	     , LOT_ID
	     , STOCK_PERIOD
	     /*, PKGUNIT
	     , PKGQTY*/
	     , EA_QTY
	     , PL_OVER_WGT
	     , PL_LVL
	     , BX_LVL
	     , IN_LVL
	     , EA_LVL
	     , AMT_PL_LVL
	     , AMT_BX_LVL
	     , AMT_IN_LVL
	     , AMT_EA_LVL
	     , WH_LOC_CD
	     , SPACE_TP_CD
	     , AMT_LOC
	     , CBM
	     , CBF
	     , GRS_KGS
	     , GRS_LBS
	     , NET_KGS
	     , NET_LBS
	     , AMT_CBM
	     , AMT_CBF
	     , AMT_GRS_KGS
	     , AMT_GRS_LBS
	     , AMT_NET_KGS
	     , AMT_NET_LBS
	     , EQ_TPSZ_CD
	     , EQ_NO
	     , SEAL_NO
	     , AMT_EQ
	     , CURR_CD
	     , AMT_ORD
	     , TOT_AMT
	     , OTH_COST_NO
	     , SRC_TP_CD
	     , PKG_LV1_UNIT_CD
	     , PKG_LV1_QTY
	     , PKG_LV2_UNIT_CD
	     , PKG_LV2_QTY
	     , PKG_LV3_UNIT_CD
	     , PKG_LV3_QTY
	     , PKG_LV4_UNIT_CD
	     , PKG_LV4_QTY
	     , PKG_PL_STD_QTY
	     , PKG_PL_OVER_WGT
	     , AMT_OTH
	     , AMT_FIX
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT 
	     )
    SELECT CLS_NO
	     , CLS_SEQ
	     , #sb_cls_cd#
	     , (SELECT ISNULL(MAX(CLS_DTL_SEQ),0) + 1 
	          FROM TL_WH_CLS_SO_DTL
	         WHERE CLS_NO = #cls_no#
	           AND CLS_SEQ = #cls_seq#
	           AND SB_CLS_CD = #sb_cls_cd#
	       )
	     , #rate_tp_cd#
	     , REPLACE(#pre_cls_dt#, '-', '')
	     , REPLACE(#trans_dt#, '-', '')
	     , #bk_no#
	     , #ord_tp_cd#
	     , #order_rel#
	     , #load_tp_cd#
	     , #frt_cd#
	     , #frt_nm#
	     , CTRT_NO
	     , RTP_NO
	     , WH_CD
	     , OFC_CD
	     , CUST_CD
	     , #po_sys_no#
	     , #item_sys_no#
	     <isEmpty property="item_seq">
	     	, (SELECT ISNULL(MAX(ITEM_SEQ),0) + 1
			       FROM TL_WH_CLS_SO_DTL
			      WHERE CLS_NO = #cls_no#
	                AND CLS_SEQ = #cls_seq#
	                AND SB_CLS_CD = #sb_cls_cd#
	                <isEmpty property="item_sys_no">
                		AND ITEM_SYS_NO IS NULL
	                </isEmpty>
	                <isNotEmpty property="item_sys_no">
                		AND ITEM_SYS_NO = #item_sys_no#    
	                </isNotEmpty>
			    )
	     </isEmpty>
	     <isNotEmpty property="item_seq">
			 , #item_seq#    
	     </isNotEmpty>
	     , #po_no#
	     , #item_cd#
	     , #item_nm#
	     , #lot_id#
	     , convert(NUMERIC(4,0), #stock_period#)
	     /*, pkgunit
	     , pkgqty*/
	     , CONVERT(numeric(18,3), CAST(#ea_qty# AS FLOAT))
	     , CONVERT(numeric(3,1), CAST(#pl_over_wgt# AS FLOAT))
	     , CONVERT(numeric(8,0), CAST(#pl_lvl# AS FLOAT))
	     , CONVERT(numeric(8,0), CAST(#bx_lvl# AS FLOAT))
	     , CONVERT(numeric(8,0), CAST(#in_lvl# AS FLOAT))
	     , CONVERT(numeric(8,0), CAST(#ea_lvl# AS FLOAT))
	     , CONVERT(numeric(15,2), CAST(#amt_pl_lvl# AS FLOAT))
	     , CONVERT(numeric(15,2), CAST(#amt_bx_lvl# AS FLOAT))
	     , CONVERT(numeric(15,2), CAST(#amt_in_lvl# AS FLOAT))
	     , CONVERT(numeric(15,2), CAST(#amt_ea_lvl# AS FLOAT))
	     , #wh_loc_cd#
	     , #space_tp_cd#
	     , CONVERT(numeric(15,3), CAST(#amt_loc# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#cbm# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#cbf# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#grs_kgs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#grs_lbs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#net_kgs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#net_lbs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_cbm# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_cbf# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_grs_kgs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_grs_lbs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_net_kgs# AS FLOAT))
	     , CONVERT(numeric(15,5), CAST(#amt_net_lbs# AS FLOAT))
	     , #eq_tpsz_cd#
	     , #eq_no#
	     , #seal_no#
	     , CONVERT(numeric(15,2), CAST(#amt_eq# AS FLOAT))
	     , #curr_cd#
	     , CONVERT(numeric(15,2), CAST(#amt_ord# AS FLOAT))
	     , CONVERT(numeric(15,2), CAST(#tot_amt# AS FLOAT))
	     , #oth_cost_no#
	     , #src_tp_cd#
	     , #pkg_lv1_unit_cd#
	     , CONVERT(numeric(15,0), CAST(#pkg_lv1_qty# AS FLOAT))
	     , #pkg_lv2_unit_cd#
	     , CONVERT(numeric(15,0), CAST(#pkg_lv2_qty# AS FLOAT))
	     , #pkg_lv3_unit_cd#
	     , CONVERT(numeric(15,0), CAST(#pkg_lv3_qty# AS FLOAT))
	     , #pkg_lv4_unit_cd#
	     , CONVERT(numeric(15,0), CAST(#pkg_lv4_qty# AS FLOAT))
	     , CONVERT(numeric(15,0), CAST(#pkg_pl_std_qty# AS FLOAT))
	     , CONVERT(numeric(3,1), CAST(#pkg_pl_over_wgt# AS FLOAT))
	     , 0
	     , 0
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	     , #rgst_id#
	     , #rgst_ofc_cd#
	     , GETDATE()
	     , dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	  FROM TL_WH_CLS_SO
	 WHERE CLS_NO     = #cls_no#
	   AND CLS_SEQ    = #cls_seq#  
	</insert>
	
	<update id="modifyWhClsSoFrtForUnitAmtQtyZero">
	/*WHClosing.modifyWhClsSoFrtForUnitAmtQtyZero*/
	UPDATE TL_WH_CLS_SO_FRT
	   SET BASIC_AMT = 0
	     , UNIT_QTY = 0
	     , UNIT_PRICE = 0
	     , MODI_ID     = #modi_id#
		 , MODI_OFC_CD = #modi_ofc_cd#
		 , MODI_SYS_DT = GETDATE()
		 , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
	 WHERE CLS_NO = #cls_no#
	 	<isNotNull property="cls_seq">
		 	<isNotEmpty property="cls_seq">
			  AND CLS_SEQ = #cls_seq#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="sb_cls_cd">
		 	<isNotEmpty property="sb_cls_cd">
			  AND SB_CLS_CD = #sb_cls_cd#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="rate_tp_cd">
		 	<isNotEmpty property="rate_tp_cd">
			  AND RATE_TP_CD = #rate_tp_cd#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="order_rel">
		 	<isNotEmpty property="order_rel">
			  AND ORDER_REL = #order_rel#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="frt_cd">
		 	<isNotEmpty property="frt_cd">
			  AND FRT_CD = #frt_cd#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="frt_nm">
		 	<isNotEmpty property="frt_nm">
			  AND DTL_FRT_NM = #frt_nm#
		 	</isNotEmpty>
	 	</isNotNull>
	 	
	 	<isNotNull property="curr_cd">
		 	<isNotEmpty property="curr_cd">
			  AND CURR_CD = #curr_cd#
		 	</isNotEmpty>
	 	</isNotNull>
       AND SRC_TP_CD = 'A'
	</update>
	
	<update id="modifyWhClsSoFrtForUnitSum">
	/*WHClosing.modifyWhClsSoFrtForUnitSum*/
	MERGE
		INTO TL_WH_CLS_SO_FRT A
		USING (
				SELECT TT.* FROM (
		        SELECT CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				     , L.DTL_UNIT_CD
				     , L.DTL_UNIT_CD AS UNIT_CD     
				     , CASE WHEN L.LV = 1 THEN AMT_PL_LVL 
				            WHEN L.LV = 2 THEN AMT_BX_LVL
				            WHEN L.LV = 3 THEN AMT_IN_LVL
				            WHEN L.LV = 4 THEN AMT_EA_LVL
				            WHEN L.LV = 5 THEN AMT_CBM
				            WHEN L.LV = 6 THEN AMT_CBF
				            WHEN L.LV = 7 THEN AMT_GRS_KGS
				            WHEN L.LV = 8 THEN AMT_GRS_LBS
				            WHEN L.LV = 9 THEN AMT_NET_KGS
				            WHEN L.LV = 10 THEN AMT_NET_LBS
				            WHEN L.LV = 11 THEN AMT_ORD
				            ELSE 0 END AS BASIC_AMT
				     , CASE WHEN L.LV = 1 THEN PL_LVL
				            WHEN L.LV = 2 THEN BX_LVL
				            WHEN L.LV = 3 THEN IN_LVL
				            WHEN L.LV = 4 THEN EA_LVL 
				            WHEN L.LV = 5 THEN CBM
				            WHEN L.LV = 6 THEN CBF
				            WHEN L.LV = 7 THEN GRS_KGS
				            WHEN L.LV = 8 THEN GRS_LBS
				            WHEN L.LV = 9 THEN NET_KGS
				            WHEN L.LV = 10 THEN NET_LBS
				            WHEN L.LV = 11 THEN ORD 
				            ELSE 0 END AS UNIT_QTY     
				  FROM (      
				  <![CDATA[ 
				        SELECT SUM(CASE WHEN AMT_PL_LVL != 0 THEN PL_LVL ELSE 0 END) AS PL_LVL
				             , SUM(CASE WHEN AMT_BX_LVL != 0 THEN BX_LVL ELSE 0 END) AS BX_LVL
				             , SUM(CASE WHEN AMT_IN_LVL != 0 THEN IN_LVL ELSE 0 END) AS IN_LVL
				             , SUM(CASE WHEN AMT_EA_LVL != 0 THEN EA_LVL ELSE 0 END) AS EA_LVL
				             , SUM(ISNULL(AMT_PL_LVL,0)) AS AMT_PL_LVL
				             , SUM(ISNULL(AMT_BX_LVL,0)) AS AMT_BX_LVL
				             , SUM(ISNULL(AMT_IN_LVL,0)) AS AMT_IN_LVL
				             , SUM(ISNULL(AMT_EA_LVL,0)) AS AMT_EA_LVL
				             , SUM(CASE WHEN AMT_CBM != 0 THEN CBM ELSE 0 END) AS CBM
				             , SUM(CASE WHEN AMT_CBF != 0 THEN CBF ELSE 0 END) AS CBF
				             , SUM(CASE WHEN AMT_GRS_KGS != 0 THEN GRS_KGS ELSE 0 END) AS GRS_KGS
				             , SUM(CASE WHEN AMT_GRS_LBS != 0 THEN GRS_LBS ELSE 0 END) AS GRS_LBS
				             , SUM(CASE WHEN AMT_NET_KGS != 0 THEN NET_KGS ELSE 0 END) AS NET_KGS
				             , SUM(CASE WHEN AMT_NET_LBS != 0 THEN NET_LBS ELSE 0 END) AS NET_LBS
				             , SUM(ISNULL(AMT_CBM,0)) AS AMT_CBM
				             , SUM(ISNULL(AMT_CBF,0)) AS AMT_CBF
				             , SUM(ISNULL(AMT_GRS_KGS,0)) AS AMT_GRS_KGS
				             , SUM(ISNULL(AMT_GRS_LBS,0)) AS AMT_GRS_LBS
				             , SUM(ISNULL(AMT_NET_KGS,0)) AS AMT_NET_KGS
				             , SUM(ISNULL(AMT_NET_LBS,0)) AS AMT_NET_LBS             
				             , SUM(CASE WHEN AMT_ORD != 0 THEN 1 ELSE 0 END) AS ORD
				             , SUM(ISNULL(AMT_ORD,0)) AS AMT_ORD
				             , CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				          FROM TL_WH_CLS_SO_DTL CLS_DTL ]]>
				         WHERE CLS_NO = #cls_no#
				         	<isNotNull property="cls_seq">
					         	<isNotEmpty property="cls_seq">
								  AND CLS_SEQ = #cls_seq#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="sb_cls_cd">
					         	<isNotEmpty property="sb_cls_cd">
								  AND SB_CLS_CD = #sb_cls_cd#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="rate_tp_cd">
					         	<isNotEmpty property="rate_tp_cd">
								  AND RATE_TP_CD = #rate_tp_cd#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="order_rel">
					         	<isNotEmpty property="order_rel">
								  AND ORDER_REL = #order_rel#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="frt_cd">
					         	<isNotEmpty property="frt_cd">
								  AND FRT_CD = #frt_cd#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="frt_nm">
					         	<isNotEmpty property="frt_nm">
								  AND FRT_NM = #frt_nm#
					         	</isNotEmpty>
				         	</isNotNull>
				         	
				         	<isNotNull property="curr_cd">
					         	<isNotEmpty property="curr_cd">
								  AND CURR_CD = #curr_cd#
					         	</isNotEmpty>
				         	</isNotNull>
				           AND SRC_TP_CD = 'A'
				         GROUP BY CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				       ) T
				       , (SELECT 1 LV, 'PE' DTL_UNIT_CD
							UNION ALL
						  SELECT 2 LV, 'BX' DTL_UNIT_CD
							UNION ALL
						  SELECT 3 LV, 'IC' DTL_UNIT_CD
							UNION ALL
						  SELECT 4 LV, 'EA' DTL_UNIT_CD
							UNION ALL
						  SELECT 5 LV, 'CBM' DTL_UNIT_CD
							UNION ALL
						  SELECT 6 LV, 'CBF' DTL_UNIT_CD
							UNION ALL
						  SELECT 7 LV, 'GWT' DTL_UNIT_CD
							UNION ALL
						  SELECT 8 LV, 'GLB' DTL_UNIT_CD
							UNION ALL
						  SELECT 9 LV, 'NWT' DTL_UNIT_CD
							UNION ALL
						  SELECT 10 LV, 'NLB' DTL_UNIT_CD
							UNION ALL
						  SELECT 11 LV, 'ORD' DTL_UNIT_CD	
				          ) L
				) TT
				WHERE TT.BASIC_AMT != 0				
				UNION ALL
				SELECT CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				     , 'OTH_' + OTH_UNIT_CD AS DTL_UNIT_CD
				     , OTH_UNIT_CD AS UNIT_CD
				     , SUM(ISNULL(AMT_OTH,0)) AS BASIC_AMT
				     , SUM(ISNULL(OTH_QTY,0)) AS  UNIT_QTY
				  FROM TL_WH_CLS_SO_DTL CLS_DTL
				 WHERE CLS_DTL.CLS_NO = #cls_no#
				 <isNotNull property="cls_seq">
					 <isNotEmpty property="cls_seq">
						  AND CLS_SEQ = #cls_seq#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="sb_cls_cd">
					 <isNotEmpty property="sb_cls_cd">
						  AND SB_CLS_CD = #sb_cls_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="rate_tp_cd">
					 <isNotEmpty property="rate_tp_cd">
						  AND RATE_TP_CD = #rate_tp_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="order_rel">
					 <isNotEmpty property="order_rel">
						  AND ORDER_REL = #order_rel#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_cd">
					 <isNotEmpty property="frt_cd">
						  AND FRT_CD = #frt_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_nm">
					 <isNotEmpty property="frt_nm">
						  AND FRT_NM = #frt_nm#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="curr_cd">
					 <isNotEmpty property="curr_cd">
						  AND CURR_CD = #curr_cd#
					 </isNotEmpty>
				 </isNotNull>
				   <![CDATA[ AND AMT_OTH != 0 ]]>
				   AND SRC_TP_CD = 'A'
				 GROUP BY CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD, OTH_UNIT_CD
				UNION ALL
				SELECT CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				     , 'FIX_' + FIX_UNIT_CD AS DTL_UNIT_CD
				     , FIX_UNIT_CD AS UNIT_CD
				     , SUM(ISNULL(AMT_FIX,0)) AS BASIC_AMT
				     , SUM(ISNULL(FIX_QTY,0)) AS  UNIT_QTY
				  FROM TL_WH_CLS_SO_DTL CLS_DTL
				 WHERE CLS_DTL.CLS_NO = #cls_no#
				 <isNotNull property="cls_seq">
					 <isNotEmpty property="cls_seq">
						  AND CLS_SEQ = #cls_seq#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="sb_cls_cd">
					 <isNotEmpty property="sb_cls_cd">
						  AND SB_CLS_CD = #sb_cls_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="rate_tp_cd">
					 <isNotEmpty property="rate_tp_cd">
						  AND RATE_TP_CD = #rate_tp_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="order_rel">
					 <isNotEmpty property="order_rel">
						  AND ORDER_REL = #order_rel#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_cd">
					 <isNotEmpty property="frt_cd">
						  AND FRT_CD = #frt_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_nm">
					 <isNotEmpty property="frt_nm">
						  AND FRT_NM = #frt_nm#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="curr_cd">
					 <isNotEmpty property="curr_cd">
						  AND CURR_CD = #curr_cd#
					 </isNotEmpty>
				 </isNotNull>
				   <![CDATA[ AND AMT_FIX != 0 ]]>
				   AND SRC_TP_CD = 'A'
				 GROUP BY CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD, FIX_UNIT_CD
				UNION ALL
				SELECT CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				     , EQ_TPSZ_CD AS DTL_UNIT_CD
				     , EQ_TPSZ_CD AS UNIT_CD
				     , SUM(AMT_EQ) AS BASIC_AMT
				     , SUM(1) AS  UNIT_QTY
				  FROM TL_WH_CLS_SO_DTL CLS_DTL
				 WHERE CLS_DTL.CLS_NO = #cls_no#
				 <isNotNull property="cls_seq">
					 <isNotEmpty property="cls_seq">
						  AND CLS_SEQ = #cls_seq#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="sb_cls_cd">
					 <isNotEmpty property="sb_cls_cd">
						  AND SB_CLS_CD = #sb_cls_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="rate_tp_cd">
					 <isNotEmpty property="rate_tp_cd">
						  AND RATE_TP_CD = #rate_tp_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="order_rel">
					 <isNotEmpty property="order_rel">
						  AND ORDER_REL = #order_rel#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_cd">
					 <isNotEmpty property="frt_cd">
						  AND FRT_CD = #frt_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_nm">
					 <isNotEmpty property="frt_nm">
						  AND FRT_NM = #frt_nm#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="curr_cd">
					 <isNotEmpty property="curr_cd">
						  AND CURR_CD = #curr_cd#
					 </isNotEmpty>
				 </isNotNull>
				   AND EQ_TPSZ_CD IS NOT NULL
				   <![CDATA[ AND AMT_EQ != 0 ]]>
				   AND SRC_TP_CD = 'A'
				 GROUP BY CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD, EQ_TPSZ_CD 
				UNION ALL
				SELECT CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD
				     , SPACE_TP_CD AS DTL_UNIT_CD
				     , 'LOC' AS UNIT_CD
				     , SUM(AMT_LOC) AS BASIC_AMT
				     , SUM(1) AS  UNIT_QTY
				  FROM TL_WH_CLS_SO_DTL CLS_DTL
				 WHERE CLS_DTL.CLS_NO = #cls_no#
				 <isNotNull property="cls_seq">
					 <isNotEmpty property="cls_seq">
						  AND CLS_SEQ = #cls_seq#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="sb_cls_cd">
					 <isNotEmpty property="sb_cls_cd">
						  AND SB_CLS_CD = #sb_cls_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="rate_tp_cd">
					 <isNotEmpty property="rate_tp_cd">
						  AND RATE_TP_CD = #rate_tp_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="order_rel">
					 <isNotEmpty property="order_rel">
						  AND ORDER_REL = #order_rel#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_cd">
					 <isNotEmpty property="frt_cd">
						  AND FRT_CD = #frt_cd#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="frt_nm">
					 <isNotEmpty property="frt_nm">
						  AND FRT_NM = #frt_nm#
					 </isNotEmpty>
				 </isNotNull>
				 
				 <isNotNull property="curr_cd">
					 <isNotEmpty property="curr_cd">
						  AND CURR_CD = #curr_cd#
					 </isNotEmpty>
				 </isNotNull>
				   AND SPACE_TP_CD IS NOT NULL
				   <![CDATA[ AND AMT_LOC != 0 ]]>
				   AND SRC_TP_CD = 'A'
				 GROUP BY CLS_NO, CLS_SEQ, SB_CLS_CD, RATE_TP_CD, ORDER_REL, FRT_CD, FRT_NM, CURR_CD, SPACE_TP_CD   
		      ) B
		   ON (    A.CLS_NO      = B.CLS_NO   
               AND A.CLS_SEQ     = B.CLS_SEQ 
	           AND A.SB_CLS_CD   = B.SB_CLS_CD  
	           AND A.RATE_TP_CD  = B.RATE_TP_CD 	           
	           AND A.ORDER_REL   = B.ORDER_REL
	           AND A.FRT_CD      = B.FRT_CD
	           AND A.DTL_FRT_NM  = B.FRT_NM 
	           AND A.CURR_CD     = B.CURR_CD
	           AND A.DTL_UNIT_CD = B.DTL_UNIT_CD
	           AND A.SRC_TP_CD   = 'A'
	          )
		WHEN MATCHED THEN
				UPDATE SET A.BASIC_AMT   = B.BASIC_AMT
				         , A.UNIT_QTY    = B.UNIT_QTY
				         , A.UNIT_PRICE  = CASE WHEN ISNULL(B.UNIT_QTY,0) = 0 THEN 0 ELSE ROUND((B.BASIC_AMT + ISNULL(A.ADJUST_AMT,0)) / B.UNIT_QTY, 3) END
					     , A.MODI_ID     = #modi_id#
					     , A.MODI_OFC_CD = #modi_ofc_cd#
					     , A.MODI_SYS_DT = GETDATE()
					     , A.MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#);
	</update>
	
	<select id="searchWhClsSoFrtExistsInfo" resultClass="ClosingSubExistsInfoDto">
	/*WHClosing.searchWhClsSoFrtExistsInfo*/
	SELECT CLS_SO.CLS_NO as cls_no
	     , CLS_SO.CLS_SEQ as cls_seq
	     , CLS_S.SB_CLS_CD	as sb_cls_cd
	     , CLS_S.CLS_FRT_SEQ	as cls_frt_seq
	  FROM TL_WH_CLS_SO CLS_SO
	     , TL_WH_CLS_SO_FRT CLS_S
	 WHERE CLS_SO.CLS_NO = CLS_S.CLS_NO
	   AND CLS_SO.CLS_SEQ = CLS_S.CLS_SEQ
	   <isNotNull property="cls_no">
		   <isNotEmpty property="cls_no">
		   		AND CLS_SO.CLS_NO    = #cls_no#
		   </isNotEmpty>
	   </isNotNull>
	   AND CLS_SO.CLS_SEQ   = #cls_seq#
	   AND CLS_S.SB_CLS_CD  = #sb_cls_cd#
	   AND CLS_S.RATE_TP_CD = #rate_tp_cd#
	   AND CLS_S.ORDER_REL  = #order_rel#
	   AND CLS_S.SRC_TP_CD = 'A'
	   <isEmpty property="frt_cd">
			AND CLS_S.FRT_CD IS NULL
	   </isEmpty>
	   <isNull property="frt_cd">
			AND CLS_S.FRT_CD IS NULL
	   </isNull>
	   <isNotNull property="frt_cd">
		   <isNotEmpty property="frt_cd">
				AND CLS_S.FRT_CD     = #frt_cd#  
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isNull property="frt_nm">
			AND CLS_S.DTL_FRT_NM IS NULL
	   </isNull>
	   <isEmpty property="frt_nm">
			AND CLS_S.DTL_FRT_NM IS NULL
	   </isEmpty>
	   <isNotNull property="frt_nm">
		   <isNotEmpty property="frt_nm">
				AND CLS_S.DTL_FRT_NM  = #frt_nm#  
		   </isNotEmpty>
	   </isNotNull>
	   
	   <isEmpty property="curr_cd">
			AND CLS_S.CURR_CD IS NULL
	   </isEmpty>
	   <isNull property="curr_cd">
			AND CLS_S.CURR_CD IS NULL
	   </isNull>
	   <isNotNull property="curr_cd">
		   <isNotEmpty property="curr_cd">
				AND CLS_S.CURR_CD    = #curr_cd#
		   </isNotEmpty>
	   </isNotNull>
	   AND CLS_S.DTL_UNIT_CD  = #dtl_unit_cd#
	</select>
	
	<insert id="saveWhClsSoFrtForDtl">
	/*WHClosing.saveWhClsSoFrtForDtl*/
	INSERT INTO TL_WH_CLS_SO_FRT
	     ( CLS_NO
	     , CLS_SEQ
	     , SB_CLS_CD
	     , CLS_FRT_SEQ
	     , RATE_TP_CD
	     , ORDER_REL
	     , SRC_TP_CD
	     , FRT_CD
	     , FRT_NM
	     , DTL_FRT_NM
	     , CURR_CD
	     , DTL_UNIT_CD
	     , UNIT_CD
	     , UNIT_QTY
	     , UNIT_PRICE
	     , BASIC_AMT
	     , ADJUST_AMT
	     , DISP_SEQ
	     , RGST_ID
	     , RGST_OFC_CD
	     , RGST_SYS_DT
	     , RGST_LOC_DT
	     , MODI_ID
	     , MODI_OFC_CD
	     , MODI_SYS_DT
	     , MODI_LOC_DT
	     )
	SELECT CLS_NO
	     , CLS_SEQ
	     , #sb_cls_cd#
	     , #cls_frt_seq#
	     , #rate_tp_cd#
	     , #order_rel#
	     , #src_tp_cd#
	     , #frt_cd#
	     , #frt_nm#
	     , #frt_nm#
	     , #curr_cd#
	     , #dtl_unit_cd#
	     , #unit_cd#
	     , 0 /* UNIT_QTY 뒤에서 SUM후 UPDATE */
	     , 0 /* UNIT_PRICE 뒤에서 SUM후 UPDATE */
	     , 0 /* BASIC_AMOUNT 뒤에서 SUM후 UPDATE */
	     , 0 /* ADJUST_AMT */
	     , (SELECT ISNULL(MAX(CLS_FRT_SEQ),0) + 1 
	          FROM TL_WH_CLS_SO_FRT
	         WHERE CLS_NO = #cls_no#
	           AND CLS_SEQ = #cls_seq#
	       )
	     , #rgst_id#
		 , #rgst_ofc_cd#
		 , GETDATE()
		 , dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD)
		 , #rgst_id#
		 , #rgst_ofc_cd#
		 , GETDATE()
		 , dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD) 
	  FROM TL_WH_CLS_SO
	 WHERE CLS_NO  = #cls_no#
	   AND CLS_SEQ = #cls_seq#
	</insert>
	
	<select id="searchClosingCustConfirmInvoicedStsList" resultClass="Grd01ClosingDetailDto">
	/*WHClosing.searchClosingCustConfirmInvoicedStsList*/
	SELECT CLS_NO
	     , CLS_SEQ
	     , CUST_CD
	  FROM TL_WH_CLS_SO CLS_SO
	 WHERE CLS_NO + CUST_CD IN (
<!-- 	 							<foreach collection="cls_no_cust_in" item="cls_no_cust" separator=",">#cls_no_cust#</foreach> -->
	 							<iterate property="cls_no_cust_in" conjunction="," >  #cls_no_cust_in[]#  </iterate>
	 						    )
	   AND (CASE WHEN CLS_SO.STS_CD = 'C' THEN 
									       CASE WHEN (SELECT COUNT(*) 
																FROM tb_wm_doc_mst A JOIN TB_FRT B ON A.WM_DOC_SEQ = B.WMS_SEQ 
																WHERE B.INV_SEQ IS NOT NULL AND A.DOC_REF_NO = CLS_SO.SO_NO
															  ) > 0 
								                THEN 'I' /* I : Invoiced */
								                ELSE CLS_SO.STS_CD
								                END
								                
                     ELSE CLS_SO.STS_CD  
                     END) IN ('I', 'C')
                     
                     
	</select>
	
	<update id="modifyWhClsResetForWhOthCost">
		/*WHClosing.modifyWhClsResetForWhOthCost*/
		UPDATE TL_WH_OTH_COST
		   SET CLS_NO      = NULL
		     , CLS_DT      = NULL
		     , STS_CD      = #sts_cd#
		     , MODI_ID     = #modi_id#
	         , MODI_OFC_CD = #modi_ofc_cd#
	         , MODI_SYS_DT = GETDATE()
	         , MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(WH_CD)
		 WHERE 1=1
		 	<isEqual property="reset_tp" compareValue="OTH_NO">
				AND OTH_COST_NO = #oth_cost_no#
		 	</isEqual>
		 	<isNotEqual property="reset_tp" compareValue="OTH_NO">
				AND OTH_COST_NO IN (SELECT OTH_COST_NO
				                      FROM TL_WH_CLS_SO_DTL
				                     WHERE CLS_NO = #cls_no#
                                    )
		 	</isNotEqual>
	</update>
	
	<delete id="deleteWhClsSoDtlPartial">
	/*WHClosing.deleteWhClsSoDtlPartial*/
	DELETE FROM TL_WH_CLS_SO_DTL
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND SB_CLS_CD = #sb_cls_cd#
	   AND CLS_DTL_SEQ = #cls_dtl_seq#
	</delete>
	
	<delete id="deleteWhClsSoDtlPartialNoAmount">
	/*WHClosing.deleteWhClsSoDtlPartialNoAmount*/
	DELETE FROM TL_WH_CLS_SO_DTL
	 WHERE CLS_NO = #cls_no# 
	   AND CLS_SEQ = #cls_seq#
	   AND SB_CLS_CD = #sb_cls_cd#
	   AND RATE_TP_CD = #rate_tp_cd#
	</delete>
	
	<select id="searchWhClsFrtDtlCnt" resultClass="String">
	/*WHClosing.searchWhClsFrtDtlCnt*/
	SELECT SUM(FRT_CNT) + SUM(DTL_CNT) AS CNT
	  FROM (
			SELECT COUNT(1) AS FRT_CNT
			     , 0 AS DTL_CNT
			  FROM TL_WH_CLS_SO_FRT
			 WHERE CLS_NO = #cls_no#
			   AND ISNULL(BASIC_AMT,0) + ISNULL(ADJUST_AMT,0) != 0
			 UNION ALL
			SELECT 0 AS FRT_CNT
			     , COUNT(1) AS DTL_CNT
			  FROM TL_WH_CLS_SO_DTL
			 WHERE CLS_NO = #cls_no#
	     ) T
	</select>
	
	<delete id="deleteWhClsSo">
	/*WHClosing.deleteWhClsSo*/
	DELETE FROM TL_WH_CLS_SO
	 WHERE CLS_NO = #cls_no#
	</delete>	
	<delete id="deleteWhCls">
	/*WHClosing.deleteWhCls*/
	DELETE FROM TL_WH_CLS
	 WHERE CLS_NO = #cls_no# 
	</delete>	
	
	<select id="getBillingCusts" parameterClass="java.util.HashMap" resultClass="String">
		/*wms.WHClosing> getBillingCusts*/
		SELECT
			C.CTRT_CUST_CD
		FROM
			TL_CTRT C
		WHERE 1 = 1
		AND ctrt_use_flg = 'Y'
		AND CTRT_NO = #ctrt_no#
    </select>
    

	<parameterMap class="com.clt.apps.fis.wms.whclosing.dto.ProcWHClosingCreateVO" id="callWHClosingCreateProcNotRate_Map">
		<parameter property="cls_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="set_fr_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="set_to_dt" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="sb_cls_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rate_tp_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="wh_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ctrt_no" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="org_cd" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="user_id" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="rtn_time_stamp" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtncd" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="rtnmsg" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
    <procedure id="callWHClosingCreateProcNotRate" parameterMap="callWHClosingCreateProcNotRate_Map">
    	 { CALL PKG_MAKE_TL_WH_CLOSING_CREATE_NOT_RATE_PRC(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) } 
	</procedure>

	<select id="searchClosingStrUnit" resultClass="ClosingFBStatusDto">
		/*wms.WHClosing.searchClosingStrUnit*/
		SELECT LTRIM(RTRIM(ISNULL(MAX(UNIT),''))) AS ctrt_str_cls_unit_cd FROM TL_CTRT WHERE CTRT_NO = #ctrt_no#;
	</select>
	
	<!-- Header 정보 조회 -->
	<select id="searchWHClosingHeaderList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClosingHeaderList */
		SELECT top 1
			   hrd.CLS_NO
		      ,dbo.TL_GET_CUST_NM(hrd.CUST_CD) AS CUST_NM
		      ,hrd.CUST_CD
		      ,hrd.SORT_BY
		      ,hrd.INV_TTL_AMT
		      ,hrd.CURR_CD
		      ,hrd.STS_CD
		      ,case when hrd.STS_CD = 'CON' then 'Confirmed'
		      		when hrd.STS_CD = 'SAV' then 'Saved'
		      		when hrd.STS_CD = 'INV' then 'Invoiced'
		       end AS STS_NM
		      ,case when  ISNULL(hrd.CLS_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.CLS_DT),110),'') end CLS_DT
		      ,hrd.SET_FR_DT
		      ,hrd.SET_TO_DT
		      ,case when  ISNULL(hrd.SET_FR_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.SET_FR_DT),110),'') end + ' ~ ' 
		       + case when  ISNULL(hrd.SET_TO_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.SET_TO_DT),110),'') end AS PERIOD
		      ,hrd.F_REMARK
		      ,hrd.USE_FLG
		      ,hrd.DELT_FLG
		      ,hrd.WM_DOC_SEQ
		      ,hrd.REF_NO
		  FROM TL_WH_CLS_HRD hrd
 		 WHERE 1 = 1 
 		   <isNotEmpty property="cls_no">
	       AND hrd.CLS_NO = #cls_no# 
	       </isNotEmpty>
		   AND hrd.USE_FLG = 'Y'
		   AND hrd.DELT_FLG = 'N'
		   <isNotEmpty property="s_cust_cd">
			AND hrd.CUST_CD  = #s_cust_cd#
			</isNotEmpty>
			<isNotEmpty property="req_wm_doc_seq">
			AND hrd.WM_DOC_SEQ  = #req_wm_doc_seq#
			</isNotEmpty>
			<isNotEmpty property="rate_tp_cd">
			AND hrd.RATE_TP_CD  = #rate_tp_cd#
			</isNotEmpty>
	</select>
	
	<!-- STORAGE TL_CTRT_CUST_ITEM으로 부터 RATE설정 아이템 조회 -->
	<select id="searchTlCtrtCustItemRateList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchTlCtrtCustItemRateList */
		SELECT CTRT_NO, ITEM_SYS_NO, UOM_TP_CD, PKG_LV3_UNIT_CD  
		  FROM TL_CTRT_CUST_ITEM 
		 WHERE CTRT_NO = #ctrt_no# 
		   AND UOM_TP_CD IS NOT NULL
	  GROUP BY CTRT_NO, ITEM_SYS_NO, UOM_TP_CD, PKG_LV3_UNIT_CD
	</select>
	
	<!-- STORAGE Ending Banlance - Rate Type : UOM -->
	<select id="searchWHClsStoUOMFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoUOMFreightList */
		 WITH V_UNIT_QTY AS   (
		  SELECT 
				AA.CTRT_NO,
				AA.WH_CD,
				AA.ITEM_CD,
				AA.ITEM_NM,
				SR.HUNIT_FOR_UOM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
				SR.CURR_CD,
		        SUM(ISNULL(0,0)) inbound,
		        SUM(ISNULL(AA.OUT_QTY,0)) outbound,
		        SUM(0 - ISNULL(AA.OUT_QTY,0)) AS QTY,
		        MAX(AA.OUTBOUND_DT) AS TJ_DT,
		        MAX(I.PKG_LV1_UNIT_CD) PKG_LV1_UNIT_CD   
			FROM
			(<!-- SELECT
				B.CTRT_NO,
				B.WH_CD,
				SI.ITEM_CD,
				SI.ITEM_SYS_NO,
				SI.ITEM_NM,
				SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
				S.OUTBOUND_DT	                
			FROM
				TL_WH_OB B,
				TL_WH_ISSU S,
				TL_WH_ISSU_ITEM SI                     
			WHERE
				B.WOB_BK_NO  = SI.WOB_BK_NO                       
				AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#                                                                                                                                                                                                                                                                                                                                                                                       
			UNION -->
			SELECT
				B.CTRT_NO,
				B.WH_CD,
				PI.ITEM_CD,
				PI.ITEM_SYS_NO,
				PI.ITEM_NM,
				PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
				P.OUTBOUND_DT
			FROM
				TL_WH_OB B,
				TL_WH_LOAD_PLAN P,
				TL_WH_LOAD_PLAN_ITEM PI                     
			WHERE
				P.LP_NO     = PI.LP_NO                       
				AND P.LP_STS_CD = 'L'                       
				AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#
			) AA 
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM I      
		            ON AA.CTRT_NO = I.CTRT_NO                      
		            AND AA.ITEM_SYS_NO = I.ITEM_SYS_NO    
		    LEFT JOIN
		        TL_CTRT_STO_RATE SR      
		            ON AA.CTRT_NO = SR.CTRT_NO         
		            AND AA.ITEM_SYS_NO = SR.ITEM_SYS_NO  
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                           
		        AND AA.WH_CD = #wh_cd#                                                      
		        AND AA.CTRT_NO = #ctrt_no#          
		        AND AA.ITEM_SYS_NO =  #item_sys_no#          
		        <!-- AND AA.OUTBOUND_DT >=  REPLACE (  #set_fr_dt# , '-', '')    -->                               
		        AND AA.OUTBOUND_DT   <![CDATA[ <= ]]>  REPLACE (  #set_to_dt# , '-', '')   
		        AND SR.UOM_TP_CD = 'UOM'      
		        AND I.UOM_TP_CD  = 'UOM' 
			GROUP BY
		        AA.CTRT_NO,
		        AA.WH_CD,
		        AA.ITEM_CD,
		        AA.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.CURR_CD,
		        SR.STO_TP
		  UNION ALL   
		  SELECT
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
		        SR.CURR_CD,
		        SUM(ISNULL(IL.IN_QTY,0)) inbound,
		        SUM(ISNULL(0,0)) outbound,
		        SUM(IL.IN_QTY - ISNULL(0,0)) AS QTY,
		        MAX(L.LOT_ATTRIB_01) AS TJ_DT,
		        MAX(I.PKG_LV1_UNIT_CD)                                     
		    FROM
		        TL_WH_IB IB           
		    LEFT JOIN
		        TL_WH_INV_LOC IL      
		            ON IB.WIB_BK_NO = IL.WIB_BK_NO            
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM_LOT L      
		            ON IL.CTRT_NO = L.CTRT_NO                      
		            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
		            AND IL.LOT_ID = L.LOT_ID                      
		            AND IL.WH_CD = L.WH_CD                
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM I      
		            ON IL.CTRT_NO = I.CTRT_NO                      
		            AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
		    LEFT JOIN
		        TL_WH_LOC LOC      
		            ON IL.WH_CD = LOC.LOC_CD                      
		            AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
		    LEFT JOIN
		        TL_CTRT_STO_RATE SR      
		            ON IL.CTRT_NO = SR.CTRT_NO         
		            AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO            
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                                                  
		        AND EXISTS (               
				SELECT
		            'X'                             
		        FROM
		            TL_WH_LOC WL,
		            TL_WH_PROP WP                            
		        WHERE
		            LOC.LOC_CD = WP.LOC_CD                                  
		            AND LOC.USE_FLG = 'Y'                                  
		            AND LOC.PROP_CD = WP.PROP_CD                                                 
		            AND ALLOC_FLG = 'Y'                                   
		            AND WP.USE_FLG = 'Y')                                                        
		        AND L.WH_CD =   #wh_cd#                                                         
		        AND IL.CTRT_NO =  #ctrt_no#          
		        AND IL.ITEM_SYS_NO =  #item_sys_no#       
		        <!-- AND L.LOT_ATTRIB_01 >=  REPLACE ( #set_fr_dt# , '-', '')  -->                      
		        AND L.LOT_ATTRIB_01  <![CDATA[ <= ]]>  REPLACE ( #set_to_dt#, '-', '')
		        AND SR.UOM_TP_CD = 'UOM'      
		        AND I.UOM_TP_CD  = 'UOM'                          
		    GROUP BY
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.CURR_CD,
		        SR.STO_TP )   
		SELECT
		    V_TB.CTRT_NO CTRT_NO,
		    <!-- ISNULL(MAX(V_TB.TJ_DT),'') TJ_DT, -->
		    #set_to_dt# TJ_DT,
		    #set_fr_dt# AS set_fr_dt,
		    #set_to_dt# AS set_to_dt,
		    MAX(V_TB.HUNIT_FOR_UOM) HUNIT_FOR_UOM,
		    SUM(V_TB.QTY/V_TB.HUNIT_FOR_UOM) QTY,
		    (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
		    (
		     SELECT TOP 1 frt_cd_nm
			  FROM  tb_frt_cd
			  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
		    ) FRT_NM,
		    MAX(V_TB.UNIT_PRICE) UNIT_PRICE,
		    '' INV_AMT,
		    #s_cust_cd# CUST_CD,
		    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
		    MAX(V_TB.CURR_CD) CURR_CD,
		    '' CLS_NO,
		    '' CLS_DT,
		    '' INV_SEQ,
			'STO' RATE_TP_CD,
			#wh_cd# WH_CD,
			#ofc_cd# OFC_CD, 
		    '' INV_TTL_AMT,
		    '' SELL_BUY_TP_CD,
		    '' FRT_SEQ,
		    '' RATING_FLG,
		    '' STS_CD,
		    V_TB.ITEM_CD,
		    V_TB.ITEM_NM,
		    MAX(V_TB.UNIT_CD) UNIT_CD,
		    MAX(V_TB.PKG_LV1_UNIT_CD) hndl_unit,
		    SUM(V_TB.inbound) inbound,
		    SUM(V_TB.outbound) outbound
		FROM
		    V_UNIT_QTY V_TB
		<!-- LEFT OUTER JOIN
		    TL_CTRT_CUST_FRT FRT      
		        ON V_TB.CTRT_NO  = FRT.CTRT_NO       
		        AND FRT.RATE_TP_CD = 'STO' 
				<isNotEmpty property="cls_no">
		 		AND (frt.CLS_NO = #cls_no# OR isnull(frt.CLS_NO,'') = '') 다른 Closing#에 assign 되지 않는 데이터 리스트업
		 		</isNotEmpty>
				<isNotEmpty property="wh_cd">
				AND  frt.wh_cd = #wh_cd# 
				</isNotEmpty>
				<isNotEmpty property="ctrt_no">
				AND  frt.ctrt_no = #ctrt_no# 
				</isNotEmpty>
				<isNotEmpty property="s_cust_cd">
				AND frt.CUST_CD  = #s_cust_cd#
				</isNotEmpty>
			   AND frt.USE_FLG = 'Y'
			   AND frt.DELT_FLG = 'N' -->
		WHERE
		    1= 1   
		GROUP BY 
			V_TB.CTRT_NO,
			V_TB.ITEM_CD,
			V_TB.ITEM_NM
		ORDER BY 
			V_TB.ITEM_CD,
			V_TB.ITEM_NM
	</select>
	
	<!-- STORAGE Fixed Rate - Rate Cycle : Week(WEK) -->
	<select id="searchWHClsStoFixWeekFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoFixWeekFreightList */
		SELECT 
			X.*,
			CASE WHEN X.IN_SET_TO_DT > CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112) THEN
					CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112)
			ELSE X.IN_SET_TO_DT
			END SET_TO_DT
		FROM
		(
			SELECT 
			    #ctrt_no# CTRT_NO,
			    #in_set_to_dt# TJ_DT,
			    <isEqual property="from_set" compareValue="Y">
				CONVERT(varchar(8), #in_set_fr_dt#, 112) AS SET_FR_DT,
			    </isEqual>
			    <isNotEqual property="from_set" compareValue="Y">
				CONVERT(varchar(8), (DATEADD(dd, @@DATEFIRST - DATEPART(dw, #in_set_fr_dt#) - 6, #in_set_fr_dt#)), 112) AS SET_FR_DT,
			    </isNotEqual>
			    CONVERT(varchar(8), (DATEADD(dd, @@DATEFIRST - DATEPART(dw, #in_set_fr_dt#), #in_set_fr_dt#)), 112) AS IN_SET_TO_DT,
			    '1' HUNIT_FOR_UOM,
			    '1' QTY,
				(SELECT ofc.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
			    (
			     SELECT TOP 1 frt_cd_nm
				  FROM  tb_frt_cd
				  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
			    ) FRT_NM,
			    #unit_price# UNIT_PRICE,
			    '' INV_AMT,
			    #s_cust_cd# CUST_CD,
			    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
			    #curr_cd# CURR_CD,
			    '' CLS_NO,
			    '' CLS_DT,
			    '' INV_SEQ,
				'STO' RATE_TP_CD,
				#wh_cd# WH_CD,
				#ofc_cd# OFC_CD, 
			    '' INV_TTL_AMT,
			    '' SELL_BUY_TP_CD,
			    '' FRT_SEQ,
			    '' RATING_FLG,
			    '' STS_CD,
			    '' ITEM_CD,
			    '' ITEM_NM,
			    'UNIT' UNIT_CD,
			    '' hndl_unit,
			    '' inbound,
			    '' outbound
			WHERE 
				CONVERT(varchar(8), convert(datetime,#in_set_to_dt#), 112) >= CONVERT(varchar(8), convert(datetime,#in_set_fr_dt#), 112)
		) X
	</select>
	
	<!-- STORAGE Fixed Rate - Rate Cycle : Twice a Month(TMN) -->
	<select id="searchWHClsStoFixTmnFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoFixTmnFreightList */
		SELECT 
				X.*,
				CASE WHEN X.IN_SET_TO_DT > CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112) THEN
						CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112)
				ELSE X.IN_SET_TO_DT
				END SET_TO_DT
			FROM
			(
			SELECT 
			    #ctrt_no# CTRT_NO,
			    #in_set_to_dt# TJ_DT,
				CONVERT(varchar(8), #in_set_fr_dt#, 112) AS SET_FR_DT,
				CASE 
					WHEN CONVERT(int, substring(#in_set_fr_dt#,7,2)) > 15 THEN
						CONVERT(varchar(8), dateadd(month,1,CONVERT(DATETIME, #in_set_fr_dt#))-day(CONVERT(DATETIME, #in_set_fr_dt#)) , 112) 
					ELSE 
			    		CAST(DATENAME(yyyy, getdate()) AS char(4)) + substring(#in_set_fr_dt#,5,2) + '15'
			    END AS IN_SET_TO_DT,
			    '1' HUNIT_FOR_UOM,
			    '1' QTY,
				(SELECT ofc.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
			    (
			     SELECT TOP 1 frt_cd_nm
				  FROM  tb_frt_cd
				  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
			    ) FRT_NM,
			    #unit_price# UNIT_PRICE,
			    '' INV_AMT,
			    #s_cust_cd# CUST_CD,
			    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
			    #curr_cd# CURR_CD,
			    '' CLS_NO,
			    '' CLS_DT,
			    '' INV_SEQ,
				'STO' RATE_TP_CD,
				#wh_cd# WH_CD,
				#ofc_cd# OFC_CD, 
			    '' INV_TTL_AMT,
			    '' SELL_BUY_TP_CD,
			    '' FRT_SEQ,
			    '' RATING_FLG,
			    '' STS_CD,
			    '' ITEM_CD,
			    '' ITEM_NM,
			    'UNIT' UNIT_CD,
			    '' hndl_unit,
			    '' inbound,
			    '' outbound
			WHERE 
				CONVERT(varchar(8), convert(datetime,#in_set_to_dt#), 112) >= CONVERT(varchar(8), convert(datetime,#in_set_fr_dt#), 112)
				AND (DATEDIFF ( day ,  convert(datetime, #set_fr_dt#) , convert(datetime, #set_to_dt#) ) >= 15 
					OR CONVERT(int, substring(#in_set_to_dt#,7,2)) > 15
					OR substring(#set_fr_dt#,5,2) != substring(#set_to_dt#,5,2)
					)
			) X
	</select>
	
	<!-- STORAGE Fixed Rate - Rate Cycle : Month(MON) -->
	<select id="searchWHClsStoFixMonFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoFixMonFreightList */
		SELECT 
				X.*,
				CASE WHEN X.IN_SET_TO_DT > CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112) THEN
						CONVERT(varchar(8), convert(datetime, #in_set_to_dt#), 112)
				ELSE X.IN_SET_TO_DT
				END SET_TO_DT
			FROM
			(
			SELECT 
			    #ctrt_no# CTRT_NO,
			    #in_set_to_dt# TJ_DT,
				CONVERT(varchar(8), #in_set_fr_dt#, 112) AS SET_FR_DT,
			    CONVERT(varchar(8), dateadd(month,1,CONVERT(DATETIME, #in_set_fr_dt#))-day(CONVERT(DATETIME, #in_set_fr_dt#)) , 112) AS IN_SET_TO_DT,
			    '1' HUNIT_FOR_UOM,
			    '1' QTY,
				(SELECT ofc.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
			    (
			     SELECT TOP 1 frt_cd_nm
				  FROM  tb_frt_cd
				  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
			    ) FRT_NM,
			    #unit_price# UNIT_PRICE,
			    '' INV_AMT,
			    #s_cust_cd# CUST_CD,
			    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
			    #curr_cd# CURR_CD,
			    '' CLS_NO,
			    '' CLS_DT,
			    '' INV_SEQ,
				'STO' RATE_TP_CD,
				#wh_cd# WH_CD,
				#ofc_cd# OFC_CD, 
			    '' INV_TTL_AMT,
			    '' SELL_BUY_TP_CD,
			    '' FRT_SEQ,
			    '' RATING_FLG,
			    '' STS_CD,
			    '' ITEM_CD,
			    '' ITEM_NM,
			    'UNIT' UNIT_CD,
			    '' hndl_unit,
			    '' inbound,
			    '' outbound
			WHERE 
				CONVERT(varchar(8), convert(datetime,#in_set_to_dt#), 112) >= CONVERT(varchar(8), convert(datetime,#in_set_fr_dt#), 112)
			) X
			<!-- CONVERT(varchar(8), convert(datetime,#in_set_to_dt#), 112) > CONVERT(varchar(8), dateadd(month,1,CONVERT(DATETIME, #in_set_fr_dt#))-day(CONVERT(DATETIME, #in_set_fr_dt#)) , 112)
			OR
			(	
				CONVERT(varchar(8), convert(datetime,#in_set_to_dt#), 112) TO DATE
				BETWEEN 
				CONVERT(varchar(8), convert(datetime,#in_set_fr_dt#), 112) FROM DATE
				AND
				CONVERT(varchar(8), dateadd(month,1,CONVERT(DATETIME, #in_set_fr_dt#))-day(CONVERT(DATETIME, #in_set_fr_dt#)) , 112) 
			) -->
	</select>
	
	<!-- STORAGE Daily In & Out - Rate Type : Beginning Balance / Ending Balance / Caculating Banlance -->
	<select id="searchWHClsStoDailyBalanceList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoDailyBalanceList */
		SELECT
			'OUT' in_out_flag,
			<!-- #2486 [LOA WMS4.0] EASY INVOICE CREATION FOR IN/OUTBOUND FILE - 조회순서가 'IN' 과 달라서 위치를 바꿈 -->
			<!-- N_OB.ITEM_CD, -->
			N_OB.CTRT_NO,
			N_OB.ITEM_CD,
			N_OB.TOT_QTY,
			N_OB.TJ_DT	
		FROM
			(SELECT 
				BB.ITEM_CD,
				MAX(BB.CTRT_NO) CTRT_NO,
				SUM(BB.OUT_QTY) TOT_QTY,
				MAX(BB.OUTBOUND_DT) TJ_DT	
			FROM
				(
				<!-- SELECT
						B.CTRT_NO,
						SI.ITEM_CD,
						SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
						S.OUTBOUND_DT	                
					FROM
						TL_WH_OB B,
						TL_WH_ISSU S,
						TL_WH_ISSU_ITEM SI                 
					WHERE
						B.WOB_BK_NO  = SI.WOB_BK_NO       
						AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
						AND B.CTRT_NO =  #ctrt_no#                                                                                
						AND B.WH_CD   =  #wh_cd#  
						AND SI.ITEM_SYS_NO =  #item_sys_no#  
						AND S.OUTBOUND_DT   <![CDATA[ < ]]>  REPLACE (  #set_dt# , '-', '')   
					UNION -->
					SELECT
						B.CTRT_NO,
						PI.ITEM_CD,
						PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
						P.OUTBOUND_DT
					FROM
						TL_WH_OB B,
						TL_WH_LOAD_PLAN P,
						TL_WH_LOAD_PLAN_ITEM PI                     
					WHERE
						P.LP_NO     = PI.LP_NO                       
						AND P.LP_STS_CD = 'L'                       
						AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
						AND B.CTRT_NO =  #ctrt_no#                                                                             
						AND B.WH_CD   =  #wh_cd# 
						AND PI .ITEM_SYS_NO =  #item_sys_no#
						AND P.OUTBOUND_DT  <![CDATA[ < ]]>  REPLACE ( #set_dt# , '-', '') 
				) BB
			GROUP BY 
				BB.CTRT_NO,
				BB.ITEM_CD
		) N_OB
		UNION ALL
		SELECT
			'IN' in_out_flag,
			IL.CTRT_NO,
			IL.ITEM_CD,
			SUM(ISNULL(IL.IN_QTY,0)) TOT_QTY,
			MAX(L.LOT_ATTRIB_01) AS TJ_DT                                  
		FROM
			TL_WH_IB IB           
		LEFT JOIN
			TL_WH_INV_LOC IL      
				ON IB.WIB_BK_NO = IL.WIB_BK_NO            
		LEFT JOIN
			TL_CTRT_CUST_ITEM_LOT L      
				ON IL.CTRT_NO = L.CTRT_NO                      
				AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
				AND IL.LOT_ID = L.LOT_ID                      
				AND IL.WH_CD = L.WH_CD                
		LEFT JOIN
			TL_CTRT_CUST_ITEM I      
				ON IL.CTRT_NO = I.CTRT_NO                      
				AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
		LEFT JOIN
			TL_WH_LOC LOC      
				ON IL.WH_CD = LOC.LOC_CD                      
				AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
		LEFT JOIN
			TL_CTRT_STO_RATE SR      
				ON IL.CTRT_NO = SR.CTRT_NO         
				AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO 
		WHERE
			1= 1           
			AND I.ITEM_USE_FLG = 'Y'                                                                  
			AND EXISTS       (               
			SELECT
				'X'                             
			FROM
				TL_WH_LOC WL,
				TL_WH_PROP WP                            
			WHERE
				LOC.LOC_CD = WP.LOC_CD                                  
				AND LOC.USE_FLG = 'Y'                                  
				AND LOC.PROP_CD = WP.PROP_CD                                                 
				AND (1 = 1 OR ALLOC_FLG = 'Y') AND WP.USE_FLG = 'Y')                                                        
				AND IL.CTRT_NO =  #ctrt_no#          
				AND L.WH_CD =   #wh_cd#                                                         
				AND IL.ITEM_SYS_NO =  #item_sys_no#                               
				AND L.LOT_ATTRIB_01 <![CDATA[ < ]]> REPLACE ( #set_dt# , '-', '')     
				AND SR.UOM_TP_CD = 'UOM'      
				AND I.UOM_TP_CD  = 'UOM'  
		GROUP BY
			IL.CTRT_NO,
			IL.ITEM_CD
	</select>
	
	<!-- STORAGE Daily In & Out - Rate Type : UOM -->
	<select id="searchWHClsStoDailyUOMFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoDailyUOMFreightList */
		  WITH V_UNIT_QTY AS   (
		  SELECT 
				AA.CTRT_NO,
				AA.WH_CD,
				AA.ITEM_CD,
				AA.ITEM_NM,
				SR.HUNIT_FOR_UOM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
				SR.CURR_CD,
		        SUM(ISNULL(0,0)) inbound,
		        SUM(ISNULL(AA.OUT_QTY,0)) outbound,
		        SUM(0 - ISNULL(AA.OUT_QTY,0))/SR.HUNIT_FOR_UOM AS QTY,
		        AA.OUTBOUND_DT AS TJ_DT,
		        I.PKG_LV1_UNIT_CD   
			FROM
			(<!-- SELECT
				B.CTRT_NO,
				B.WH_CD,
				SI.ITEM_CD,
				SI.ITEM_SYS_NO,
				SI.ITEM_NM,
				SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
				S.OUTBOUND_DT	                
			FROM
				TL_WH_OB B,
				TL_WH_ISSU S,
				TL_WH_ISSU_ITEM SI                     
			WHERE
				B.WOB_BK_NO  = SI.WOB_BK_NO                       
				AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#                                                                                                                                                                                                                                                                                                                                                                                       
			UNION -->
			SELECT
				B.CTRT_NO,
				B.WH_CD,
				PI.ITEM_CD,
				PI.ITEM_SYS_NO,
				PI.ITEM_NM,
				PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
				P.OUTBOUND_DT
			FROM
				TL_WH_OB B,
				TL_WH_LOAD_PLAN P,
				TL_WH_LOAD_PLAN_ITEM PI                     
			WHERE
				P.LP_NO     = PI.LP_NO                       
				AND P.LP_STS_CD = 'L'                       
				AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#
			) AA 
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM I      
		            ON AA.CTRT_NO = I.CTRT_NO                      
		            AND AA.ITEM_SYS_NO = I.ITEM_SYS_NO    
		    LEFT JOIN
		        TL_CTRT_STO_RATE SR      
		            ON AA.CTRT_NO = SR.CTRT_NO         
		            AND AA.ITEM_SYS_NO = SR.ITEM_SYS_NO  
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                           
		        AND AA.WH_CD = #wh_cd#                                                      
		        AND AA.CTRT_NO = #ctrt_no#          
		        AND AA.ITEM_SYS_NO =  #item_sys_no#          
		        AND AA.OUTBOUND_DT >=  REPLACE (  #set_fr_dt# , '-', '')                                  
		        AND AA.OUTBOUND_DT   <![CDATA[ <= ]]>  REPLACE (  #set_to_dt# , '-', '')   
		        AND SR.UOM_TP_CD = 'UOM'      
		        AND I.UOM_TP_CD  = 'UOM' 
			GROUP BY
		        AA.CTRT_NO,
		        AA.WH_CD,
		        AA.ITEM_CD,
		        AA.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.CURR_CD,
		        SR.STO_TP,
		        AA.OUTBOUND_DT,
		        I.PKG_LV1_UNIT_CD
		  UNION ALL   
		  SELECT
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
		        SR.CURR_CD,
		        SUM(ISNULL(IL.IN_QTY,0)) inbound,
		        SUM(ISNULL(0,0)) outbound,
		        SUM(IL.IN_QTY - ISNULL(0,0))/SR.HUNIT_FOR_UOM AS QTY,
		        L.LOT_ATTRIB_01 AS TJ_DT,
		        I.PKG_LV1_UNIT_CD                                      
		    FROM
		        TL_WH_IB IB           
		    LEFT JOIN
		        TL_WH_INV_LOC IL      
		            ON IB.WIB_BK_NO = IL.WIB_BK_NO            
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM_LOT L      
		            ON IL.CTRT_NO = L.CTRT_NO                      
		            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
		            AND IL.LOT_ID = L.LOT_ID                      
		            AND IL.WH_CD = L.WH_CD                
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM I      
		            ON IL.CTRT_NO = I.CTRT_NO                      
		            AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
		    LEFT JOIN
		        TL_WH_LOC LOC      
		            ON IL.WH_CD = LOC.LOC_CD                      
		            AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
		    LEFT JOIN
		        TL_CTRT_STO_RATE SR      
		            ON IL.CTRT_NO = SR.CTRT_NO         
		            AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO            
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                                                  
		        <!-- AND EXISTS (               
				SELECT
		            'X'                             
		        FROM
		            TL_WH_LOC WL,
		            TL_WH_PROP WP                            
		        WHERE
		            LOC.LOC_CD = WP.LOC_CD                                  
		            AND LOC.USE_FLG = 'Y'                                  
		            AND LOC.PROP_CD = WP.PROP_CD                                                 
		            AND ALLOC_FLG = 'Y'                                   
		            AND WP.USE_FLG = 'Y') -->                                                        
		        AND L.WH_CD =   #wh_cd#                                                         
		        AND IL.CTRT_NO =  #ctrt_no#          
		        AND IL.ITEM_SYS_NO =  #item_sys_no#       
		        AND L.LOT_ATTRIB_01 >=  REPLACE ( #set_fr_dt# , '-', '')                       
		        AND L.LOT_ATTRIB_01  <![CDATA[ <= ]]>  REPLACE ( #set_to_dt#, '-', '')
		        AND SR.UOM_TP_CD = 'UOM'      
		        AND I.UOM_TP_CD  = 'UOM'                          
		    GROUP BY
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.HUNIT_FOR_UOM,
		        SR.CURR_CD,
		        SR.STO_TP,
		        L.LOT_ATTRIB_01,
		        I.PKG_LV1_UNIT_CD   ) 
		SELECT XX.*
		FROM
		(
			SELECT 
					#ctrt_no# CTRT_NO,
				    CASE WHEN ISNULL(BB.TJ_DT,'')='' THEN AA.REGDATE 
				         ELSE BB.TJ_DT
				    END TJ_DT,
				    #set_fr_dt# set_fr_dt,
				    #set_to_dt# set_to_dt,
				    ISNULL(BB.HUNIT_FOR_UOM, 
						    (SELECT top 1 HUNIT_FOR_UOM FROM TL_CTRT_STO_RATE
							WHERE CTRT_NO = #ctrt_no#
							AND ITEM_SYS_NO = #item_sys_no#
							AND UOM_TP_CD = 'UOM')
					) HUNIT_FOR_UOM,
				    ISNULL(BB.QTY,0) QTY,
	 				(SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
				    (
				     SELECT TOP 1 frt_cd_nm
					  FROM  tb_frt_cd
					  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
				    ) FRT_NM,
				    ISNULL(BB.UNIT_PRICE, 
						    (SELECT top 1 UNIT_PRICE FROM TL_CTRT_STO_RATE
							WHERE CTRT_NO = #ctrt_no#
							AND ITEM_SYS_NO = #item_sys_no#
							AND UOM_TP_CD = 'UOM')
					) UNIT_PRICE,
				    BB.INV_AMT,
				    #s_cust_cd# CUST_CD,
				    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
				    ISNULL(BB.CURR_CD, 
						    (SELECT top 1 CURR_CD FROM TL_CTRT_STO_RATE
							WHERE CTRT_NO = #ctrt_no#
							AND ITEM_SYS_NO = #item_sys_no#
							AND UOM_TP_CD = 'UOM')
					) CURR_CD,
				    BB.CLS_NO,
				    BB.CLS_DT,
				    BB.INV_SEQ,
					'STO' RATE_TP_CD,
					#wh_cd# WH_CD,
					#ofc_cd# OFC_CD, 
				    BB.INV_TTL_AMT,
				    BB.SELL_BUY_TP_CD,
				    BB.FRT_SEQ,
				    BB.RATING_FLG,
				    BB.STS_CD,
				    ISNULL(BB.ITEM_CD, (SELECT IT.ITEM_CD FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) ITEM_CD,
				    ISNULL(BB.ITEM_NM, (SELECT IT.ITEM_NM FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) ITEM_NM,
				    ISNULL(BB.UNIT_CD, (SELECT IT.STR_UOM FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) UNIT_CD,
				    ISNULL(BB.hndl_unit, (SELECT IT.PKG_LV1_UNIT_CD FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) hndl_unit,
				    ISNULL(BB.inbound, 0) inbound,
				    ISNULL(BB.outbound, 0) outbound 
			FROM
				(
				   SELECT CONVERT(CHAR(10),DATEADD(D,NUMBER,REPLACE ( #set_fr_dt# , '-', '') ),112) AS REGDATE
				   FROM MASTER..SPT_VALUES WITH(NOLOCK) 
				   WHERE TYPE = 'P' 
				   AND CONVERT(CHAR(10),DATEADD(D,NUMBER,REPLACE ( #set_fr_dt# , '-', '') ),112) <![CDATA[ < ]]> DATEADD(D, 1, REPLACE ( #set_to_dt#, '-', ''))  
				) AA
				LEFT JOIN 
				(  
				SELECT
				    V_TB.CTRT_NO CTRT_NO,
				    ISNULL(MAX(V_TB.TJ_DT),'') TJ_DT,
				    #set_fr_dt# AS set_fr_dt,
				    #set_to_dt# AS set_to_dt,
				    MAX(V_TB.HUNIT_FOR_UOM) HUNIT_FOR_UOM,
				    MAX(V_TB.QTY) QTY,
				    '' FRT_CD,
				    '' FRT_NM,
				    MAX(V_TB.UNIT_PRICE) UNIT_PRICE,
				    '' INV_AMT,
				    '' CUST_CD,
				    '' CUST_NM,
				    MAX(V_TB.CURR_CD) CURR_CD,
				    '' CLS_NO,
				    '' CLS_DT,
				    '' INV_SEQ,
					'STO' RATE_TP_CD,
					#wh_cd# WH_CD,
					#ofc_cd# OFC_CD, 
				    '' INV_TTL_AMT,
				    '' SELL_BUY_TP_CD,
				    '' FRT_SEQ,
				    '' RATING_FLG,
				    '' STS_CD,
				    V_TB.ITEM_CD,
				    V_TB.ITEM_NM,
				    MAX(V_TB.UNIT_CD) UNIT_CD,
				    MAX(V_TB.PKG_LV1_UNIT_CD) hndl_unit,
				    SUM(V_TB.inbound) inbound,
				    SUM(V_TB.outbound) outbound
				FROM
				    V_UNIT_QTY V_TB
				WHERE
				    1= 1   
				GROUP BY 
					V_TB.CTRT_NO,
					V_TB.ITEM_CD,
					V_TB.ITEM_NM,
					V_TB.TJ_DT
				) AS BB
				ON AA.REGDATE = BB.TJ_DT
		) XX
		<!-- WHERE 
		 XX.TJ_DT NOT IN  (
				SELECT frt.TJ_DT
			  FROM TL_CTRT_CUST_FRT frt
			 WHERE 1 = 1 
			 		<isNotEmpty property="cls_no">
			 		AND frt.CLS_NO = #cls_no#
			 		</isNotEmpty>
		            <isNotEmpty property="set_to_dt">
		            	<isEqual property="sheet_nm" compareValue="sheet1">
			          		AND  frt.TJ_DT = #set_to_dt# 
		            	</isEqual>
		            	<isEqual property="sheet_nm" compareValue="sheet2">
			          		<![CDATA[AND  (frt.TJ_DT >=#set_fr_dt# AND frt.TJ_DT <=#set_to_dt#) ]]> 
		            	</isEqual>
		            </isNotEmpty>
		            <isNotEmpty property="wh_cd">
		          		AND  frt.wh_cd = #wh_cd# 
		            </isNotEmpty>
		            <isNotEmpty property="ctrt_no">
		          		AND  frt.ctrt_no = #ctrt_no# 
		            </isNotEmpty>
		            <isNotEmpty property="rate_tp_cd">
		            	<isEqual property="rate_tp_cd" compareValue="IAO">
			          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
			            	<isEqual property="rate_tp_cd" compareValue="STO">
				          		AND  frt.rate_tp_cd = 'STO' Storage
			            	</isEqual>
			            	<isNotEqual property="rate_tp_cd" compareValue="STO">
			            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
			            	</isNotEqual>
		            	</isNotEqual>
		            </isNotEmpty>
				<isNotEmpty property="s_cust_cd">
				AND frt.CUST_CD  = #s_cust_cd#
				</isNotEmpty>
			   AND frt.USE_FLG = 'Y'
			   AND frt.SHEET_NM = #sheet_nm#
			   AND frt.DELT_FLG = 'N'
		 	)      -->  
		ORDER BY
		    XX.TJ_DT  
	</select>

	<!-- #2486 [LOA WMS4.0] EASY INVOICE CREATION FOR IN/OUTBOUND FILE -->
	<!-- STORAGE Daily Total Volume - Rate Type : UOM -->
	<select id="searchWHClsStoDailyTotalVolUOMFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
        /* wms.WHClosing.searchWHClsStoDailyTotalVolUOMFreightList */
        WITH UNIT_UOM AS
        (
         SELECT CTRT.CTRT_NO
              , ITEM.ITEM_CD
              , ITEM.ITEM_NM
              , ITEM.ITEM_SYS_NO
              , CTRT.VOL_UNIT
              , CASE WHEN CTRT.VOL_UNIT = 'CBM' AND ITEM.LV1_CBM         != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_CBM , 7)
                     WHEN CTRT.VOL_UNIT = 'CFT' AND ITEM.LV1_CBF         != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_CBF , 7)
                     WHEN CTRT.VOL_UNIT = 'GKG' AND ITEM.LV1_GRS_KGS     != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_GRS_KGS, 7)
                     WHEN CTRT.VOL_UNIT = 'GLB' AND ITEM.LV1_GRS_LBS     != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_GRS_LBS, 7)
                     WHEN CTRT.VOL_UNIT = 'NKG' AND ITEM.LV1_NET_KGS     != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_NET_KGS, 7)
                     WHEN CTRT.VOL_UNIT = 'NLB' AND ITEM.LV1_NET_LBS     != 0 THEN ROUND(ITEM.PKG_LV1_QTY / ITEM.LV1_NET_LBS, 7)
                     WHEN CTRT.VOL_UNIT = 'PKU' AND ITEM.ITEM_PKGBASEQTY != 0 THEN CASE WHEN ITEM.ITEM_PKGBASEQTY is NOT null AND
                                                                                             ITEM.ITEM_PKGBASEQTY > 0 THEN ROUND(1 / ITEM.ITEM_PKGBASEQTY, 7)
                                                                                        ELSE 0
                                                                                   END
                     WHEN CTRT.VOL_UNIT = 'LCP' AND ITEM.PKG_LV3_QTY != 0     THEN CASE WHEN ITEM.PKG_LV3_QTY IS NOT NULL AND
                                                                                             ITEM.PKG_LV3_QTY > 0 THEN ROUND(1 / ITEM.PKG_LV3_QTY, 7)
                                                                                        ELSE 0
                                                                                   END
                     ELSE ITEM.PKG_LV1_QTY
                END HUNIT_FOR_UOM
              , ITEM.PKG_LV1_UNIT_CD
              , CTRT.UNIT_PRICE
              , CTRT.CURR_CD
              , CTRT.INCL_IB_DT_FLG
              , CTRT.INCL_OB_DT_FLG
           FROM TL_CTRT CTRT
           JOIN TL_CTRT_CUST_ITEM AS ITEM ON CTRT.CTRT_NO = ITEM.CTRT_NO
           WHERE ITEM.CTRT_NO      = #ctrt_no#
             AND ITEM.ITEM_USE_FLG = 'Y'
        )
        , V_UNIT_QTY AS
        (
         SELECT AA.CTRT_NO
              , AA.OUTBOUND_DT AS TJ_DT
              , AA.ITEM_SYS_NO
              , SUM(ISNULL(0, 0)) inbound
              , SUM(ISNULL(AA.OUT_QTY, 0)) outbound
           FROM (SELECT B.CTRT_NO
                      , B.WH_CD
                      , PI.ITEM_SYS_NO
                      , PI.LOAD_ITEM_EA_QTY AS OUT_QTY
                      , P.OUTBOUND_DT
                   FROM TL_WH_OB B
                      , TL_WH_LOAD_PLAN P
                      , TL_WH_LOAD_PLAN_ITEM PI
                   JOIN TL_CTRT_CUST_ITEM ITEM ON PI.ITEM_SYS_NO = ITEM.ITEM_SYS_NO
                  WHERE P.LP_NO = PI.LP_NO
                    AND P.LP_STS_CD = 'L'
                    AND B.WOB_BK_NO = PI.WOB_BK_NO
                    AND B.CTRT_NO   = #ctrt_no#
                    AND B.WH_CD     = #wh_cd#
                ) AA
          WHERE 1 = 1
            AND AA.CTRT_NO     = #ctrt_no#
            AND AA.WH_CD       = #wh_cd#
            AND AA.OUTBOUND_DT <![CDATA[ >= ]]> REPLACE(#set_fr_dt#, '-', '')
            AND AA.OUTBOUND_DT <![CDATA[ <= ]]> REPLACE(#set_to_dt#, '-', '')
          GROUP BY AA.CTRT_NO, AA.OUTBOUND_DT, AA.ITEM_SYS_NO
          UNION ALL
         SELECT IL.CTRT_NO
              , L.LOT_ATTRIB_01 AS TJ_DT
              , IL.ITEM_SYS_NO
              , SUM(ISNULL(IL.IN_QTY, 0)) inbound
              , SUM(ISNULL(0, 0)) outbound
           FROM TL_WH_IB IB
           LEFT JOIN TL_WH_INV_LOC IL ON IB.WIB_BK_NO = IL.WIB_BK_NO
           LEFT JOIN TL_CTRT_CUST_ITEM_LOT L ON IL.CTRT_NO = L.CTRT_NO
            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO
            AND IL.LOT_ID      = L.LOT_ID
            AND IL.WH_CD       = L.WH_CD
           JOIN TL_CTRT_CUST_ITEM ITEM ON IL.ITEM_SYS_NO = ITEM.ITEM_SYS_NO
          WHERE 1 = 1
            AND IL.CTRT_NO      = #ctrt_no#
            AND L.WH_CD         = #wh_cd#
            AND L.LOT_ATTRIB_01 <![CDATA[ >= ]]> REPLACE(#set_fr_dt#, '-', '')
            AND L.LOT_ATTRIB_01 <![CDATA[ <= ]]> REPLACE(#set_to_dt#, '-', '')
          GROUP BY IL.CTRT_NO, L.LOT_ATTRIB_01, IL.ITEM_SYS_NO
        )
        , IN_OUT_QTY AS
        (
         SELECT QTY.CTRT_NO
              , TJ_DT
              , SUM(INBOUND * HUNIT_FOR_UOM) AS INBOUND
              , SUM(OUTBOUND * HUNIT_FOR_UOM) AS OUTBOUND
           FROM (
                 SELECT CTRT_NO
                      , TJ_DT
                      , ITEM_SYS_NO
                      , MAX(INBOUND) AS INBOUND
                      , MAX(OUTBOUND) AS OUTBOUND
                   FROM V_UNIT_QTY
                  GROUP BY CTRT_NO, TJ_DT, ITEM_SYS_NO
                ) qty
           JOIN UNIT_UOM UOM ON QTY.CTRT_NO = UOM.CTRT_NO
            AND QTY.ITEM_SYS_NO = UOM.ITEM_SYS_NO
          GROUP BY QTY.CTRT_NO, TJ_DT
        )
        , SUM_QTY AS
        (
         SELECT MAX(UOM.CTRT_NO) AS CTRT_NO
              , MAX(ISNULL(IN_QTY, 0) * UOM.HUNIT_FOR_UOM) AS IN_QTY
              , MAX(ISNULL(OUT_QTY, 0) * UOM.HUNIT_FOR_UOM) AS OUT_QTY
              , MAX(UOM.INCL_IB_DT_FLG) AS INCL_IB_DT_FLG
              , MAX(UOM.INCL_OB_DT_FLG) AS INCL_OB_DT_FLG
           FROM UNIT_UOM UOM
           LEFT JOIN
                (
                 SELECT B.CTRT_NO
                      , PI.ITEM_SYS_NO
                      , 0 AS IN_QTY
                      , SUM(PI.LOAD_ITEM_EA_QTY) AS OUT_QTY
                   FROM TL_WH_OB B
                      , TL_WH_LOAD_PLAN P
                      , TL_WH_LOAD_PLAN_ITEM PI
                  WHERE P.LP_NO         = PI.LP_NO
                    AND P.LP_STS_CD     = 'L'
                    AND B.WOB_BK_NO     = PI.WOB_BK_NO
                    AND B.CTRT_NO       = #ctrt_no#
                    AND B.WH_CD         = #wh_cd#
                    AND P.OUTBOUND_DT <![CDATA[ < ]]>  REPLACE(#set_fr_dt#, '-', '')
                 GROUP BY B.CTRT_NO, PI.ITEM_SYS_NO
                 UNION ALL
                 SELECT IL.CTRT_NO
                      , IL.ITEM_SYS_NO
                      , SUM(ISNULL(IL.IN_QTY,0)) in_QTY
                      , 0 AS OUT_QTY
                   FROM TL_WH_IB IB
                   LEFT JOIN TL_WH_INV_LOC IL ON IB.WIB_BK_NO = IL.WIB_BK_NO
                   LEFT JOIN TL_CTRT_CUST_ITEM_LOT L ON IL.CTRT_NO = L.CTRT_NO
                    AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO
                    AND IL.LOT_ID      = L.LOT_ID
                    AND IL.WH_CD       = L.WH_CD
                   LEFT JOIN TL_CTRT_CUST_ITEM I ON IL.CTRT_NO = I.CTRT_NO
                    AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO
                   LEFT JOIN TL_WH_LOC LOC ON IL.WH_CD = LOC.LOC_CD
                    AND IL.WH_LOC_CD = LOC.WH_LOC_CD
                   LEFT JOIN TL_CTRT_STO_RATE SR ON IL.CTRT_NO = SR.CTRT_NO
                    AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO
                  WHERE 1 = 1
                    AND I.ITEM_USE_FLG = 'Y'
                    AND EXISTS (SELECT 'X'
                                  FROM TL_WH_LOC WL
                                     , TL_WH_PROP WP
                                 WHERE LOC.LOC_CD = WP.LOC_CD
                                   AND LOC.USE_FLG = 'Y'
                                   AND LOC.PROP_CD = WP.PROP_CD
                                   AND WP.ALLOC_FLG = 'Y'
                                   AND WP.USE_FLG = 'Y'
                               )
                    AND IL.CTRT_NO      = #ctrt_no#
                    AND L.WH_CD         = #wh_cd#
                    AND L.LOT_ATTRIB_01 <![CDATA[ < ]]> REPLACE(#set_fr_dt#, '-', '')
                  GROUP BY IL.CTRT_NO, IL.ITEM_SYS_NO
                ) SUM_QTY
             ON UOM.CTRT_NO = SUM_QTY.CTRT_NO
            AND UOM.ITEM_SYS_NO = SUM_QTY.ITEM_SYS_NO
        )
        , BASE_TBL AS
        (
         SELECT CONVERT(CHAR(10), DATEADD(D, NUMBER, REPLACE(#set_fr_dt#, '-', '')), 112) AS REGDATE
           FROM MASTER..SPT_VALUES WITH(NOLOCK)
          WHERE TYPE = 'P'
            AND CONVERT(CHAR(10),DATEADD(D, NUMBER, REPLACE(#set_fr_dt#, '-', '')), 112) <![CDATA[ < ]]> DATEADD(D, 1, REPLACE(#set_to_dt#, '-', ''))
        )
        SELECT DISTINCT
               A.CTRT_NO
             , A.REGDATE AS TJ_DT
             , #set_fr_dt# AS SET_FR_DT
             , #set_to_dt# AS SET_TO_DT
             , UOM.VOL_UNIT AS UNIT_CD
             , (SELECT OFC.WH_STO_ACC_CD
                  FROM TB_OFC ofc
                 WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD
             , (SELECT TOP 1 frt_cd_nm
                  FROM tb_frt_cd
                 WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD
                                   FROM TB_OFC ofc
                                  WHERE ofc.ofc_cd = #ofc_cd#
                                )
               ) FRT_NM
             , UOM.UNIT_PRICE
             , #s_cust_cd# AS CUST_CD
             , dbo.TL_GET_CUST_NM(#s_cust_cd#) AS CUST_NM
             , UOM.CURR_CD
             , '' CLS_NO
             , '' CLS_DT
             , '' INV_SEQ
             , 'STO' RATE_TP_CD
             , #wh_cd# WH_CD
             , #ofc_cd# OFC_CD
             , '' INV_TTL_AMT
             , '' SELL_BUY_TP_CD
             , '' FRT_SEQ
             , '' RATING_FLG
             , '' STS_CD
             , A.TOT_QTY
             , ISNULL(QTY.INBOUND, 0) AS INBOUND
             , ISNULL(QTY.OUTBOUND, 0) AS OUTBOUND
             , MAX(A.INCL_IB_DT_FLG) OVER() AS INCL_IB_DT_FLG
             , MAX(A.INCL_OB_DT_FLG) OVER() AS INCL_OB_DT_FLG
          FROM (
                SELECT MAX(SUM_QTY.CTRT_NO) OVER() AS CTRT_NO
                     , BASE.REGDATE
                     , ISNULL(SUM_QTY.IN_QTY, 0) - ISNULL(SUM_QTY.OUT_QTY, 0) AS TOT_QTY
                     , SUM_QTY.INCL_IB_DT_FLG
                     , SUM_QTY.INCL_OB_DT_FLG
                  FROM BASE_TBL BASE
                     , SUM_QTY SUM_QTY
               ) A
          LEFT JOIN IN_OUT_QTY QTY ON QTY.CTRT_NO = A.CTRT_NO
           AND A.REGDATE = QTY.TJ_DT
          LEFT JOIN UNIT_UOM UOM ON UOM.CTRT_NO = A.CTRT_NO
         ORDER BY A.REGDATE
    </select>

	<!--  #1,068: [WMS4.o]Storage Closing 계산 로직 추가  -->
	<!-- [License Plate별 산정]STORAGE Daily In & Out - Rate Type : Beginning Balance / Ending Balance / Caculating Banlance -->
	<select id="searchWHClsStoDailyLCPBalanceList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoDailyLCPBalanceList */
		SELECT 
		    X.ITEM_CD,
		    X.CTRT_NO,
		    SUM(X.TOT_QTY) TOT_QTY,
		    X.LIC_PLAT_NO  
		FROM
		(
			SELECT
				'OUT' in_out_flag,
				N_OB.ITEM_CD,
				N_OB.CTRT_NO,
				N_OB.TOT_QTY,
				N_OB.TJ_DT,
				N_OB.LIC_PLAT_NO	
			FROM
				(SELECT 
					AA.ITEM_CD,
					AA.CTRT_NO CTRT_NO,
					SUM(AA.OUT_QTY)*-1 TOT_QTY,
					AA.OUTBOUND_DT TJ_DT,
					ALLC_ITM.LIC_PLAT_NO	
				FROM
					(
					<!-- SELECT
							B.CTRT_NO,
							SI.ITEM_CD,
							SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
			                S.OUTBOUND_DT,
							B.WOB_BK_NO,
							SI.ITEM_SYS_NO,
							B.WH_CD                   
						FROM
							TL_WH_OB B,
							TL_WH_ISSU S,
							TL_WH_ISSU_ITEM SI                 
						WHERE
							B.WOB_BK_NO  = SI.WOB_BK_NO       
							AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
							AND B.CTRT_NO =  #ctrt_no#                                                                                
							AND B.WH_CD   =  #wh_cd#  
							AND SI.ITEM_SYS_NO =  #item_sys_no#  
							AND S.OUTBOUND_DT   <![CDATA[ < ]]>  REPLACE (  #set_dt# , '-', '')   
						UNION -->
						SELECT
							B.CTRT_NO,
							PI.ITEM_CD,
							PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
			                P.OUTBOUND_DT,
							B.WOB_BK_NO,
							PI.ITEM_SYS_NO,
							B.WH_CD,
							<!-- #5838 [Binex-WMS] STORAGE INVOICE 확인 요청
								-20190611:LP NO 기준 전월의 ending balance 와 이번달 beginning balance 사이에 difference(OUT QTY 와 IN QTY 가 잘못 계산) 현상 -->
							PI.LIC_PLAT_NO         
						FROM
							TL_WH_OB B,
							TL_WH_LOAD_PLAN P,
							TL_WH_LOAD_PLAN_ITEM PI                     
						WHERE
							P.LP_NO     = PI.LP_NO                       
							AND P.LP_STS_CD = 'L'                       
							AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
							AND B.CTRT_NO =  #ctrt_no#                                                                             
							AND B.WH_CD   =  #wh_cd# 
							AND PI .ITEM_SYS_NO =  #item_sys_no#
							AND P.OUTBOUND_DT  <![CDATA[ < ]]>  REPLACE ( #set_dt# , '-', '') 
					) AA
					LEFT JOIN 
						TL_WH_OB_ITEM OBI ON AA.WOB_BK_NO = OBI.WOB_BK_NO
				    LEFT JOIN
				        TL_CTRT_CUST_ITEM I      
				            ON AA.CTRT_NO = I.CTRT_NO                      
				            AND AA.ITEM_SYS_NO = I.ITEM_SYS_NO    
			        LEFT JOIN
			            TL_WH_ALLC ALLC          
			                ON AA.WOB_BK_NO = ALLC.WOB_BK_NO         
			        LEFT JOIN
			            TL_WH_ALLC_ITEM ALLC_ITM         
			                ON ALLC.WALC_NO = ALLC_ITM.WALC_NO        
			                AND ALLC_ITM.SAO_SYS_NO = OBI.SAO_SYS_NO        
			                AND ALLC_ITM.ITEM_SYS_NO = I.ITEM_SYS_NO        
			                AND ALLC_ITM.ITEM_SEQ = OBI.ITEM_SEQ  
			                <!-- #5838 [Binex-WMS] STORAGE INVOICE 확인 요청
								-20190611:LP NO 기준 전월의 ending balance 와 이번달 beginning balance 사이에 difference(OUT QTY 와 IN QTY 가 잘못 계산) 현상 -->               
							AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(AA.LIC_PLAT_NO,'') 
				   <!-- LEFT JOIN TL_WH_PSUDO_LP_SHIP SHIP
						ON (ALLC_ITM.WOB_BK_NO   = SHIP.WOB_BK_NO
			           		AND ALLC_ITM.SAO_SYS_NO  = SHIP.SAO_SYS_NO
			           		AND ALLC_ITM.WIB_BK_NO   = SHIP.WIB_BK_NO
			           		AND ALLC_ITM.PO_SYS_NO   = SHIP.PO_SYS_NO
			           		AND ALLC_ITM.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
			           		AND ALLC_ITM.LOT_ID      = SHIP.LOT_ID
			           		AND ALLC_ITM.WH_LOC_CD   = SHIP.WH_LOC_CD
			           		AND ALLC_ITM.ITEM_SEQ    = SHIP.ITEM_SEQ
			           		AND 'G' 		  = SHIP.LP_STATUS 
			           		AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
				           	AND ISNULL(ALLC_ITM.PO_NO,'')		= ISNULL(SHIP.PO_NO,'')
				           	AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,'')) -->
				    LEFT JOIN
				        TL_CTRT_STO_RATE SR      
				            ON AA.CTRT_NO = SR.CTRT_NO         
				            AND AA.ITEM_SYS_NO = SR.ITEM_SYS_NO  
				    WHERE
				        1= 1           
				        AND I.ITEM_USE_FLG = 'Y'                                           
				        AND AA.WH_CD = #wh_cd#                                                      
				        AND AA.CTRT_NO = #ctrt_no#          
				        AND AA.ITEM_SYS_NO =  #item_sys_no#          
				        AND SR.UOM_TP_CD = 'LCP'      
				        AND I.UOM_TP_CD  = 'LCP' 
				        AND SR.STO_TP = #pkg_lv3_unit_cd#
				        AND ISNULL(ALLC_ITM.LIC_PLAT_NO, '') != ''
					GROUP BY
				        AA.CTRT_NO,
				        AA.WH_CD,
				        AA.ITEM_CD,
				        SR.CURR_CD,
				        SR.STO_TP,
				        AA.OUTBOUND_DT,
				        I.PKG_LV1_UNIT_CD,
				        SR.UNIT_PRICE,
				        ALLC_ITM.LIC_PLAT_NO
			) N_OB
			UNION ALL
			SELECT
				'IN' in_out_flag,
				IL.ITEM_CD,
				IL.CTRT_NO,
				SUM(ISNULL(IL.IN_QTY,0)) TOT_QTY,
				L.LOT_ATTRIB_01 AS TJ_DT,
				R_ITEM.LIC_PLAT_NO                                  
			FROM
				TL_WH_IB IB           
		        LEFT JOIN
		              TL_WH_IB_ITEM I_ITEM   
		                  ON IB.WIB_BK_NO = I_ITEM.WIB_BK_NO                    
		        LEFT JOIN
		              TL_WH_RCV_ITEM R_ITEM  
		                  ON I_ITEM.WIB_BK_NO = R_ITEM.WIB_BK_NO 
		                  AND I_ITEM.PO_SYS_NO = R_ITEM.PO_SYS_NO                                                 
		                  AND I_ITEM.ITEM_SYS_NO = R_ITEM.ITEM_SYS_NO                                                
		                  AND I_ITEM.ITEM_SEQ = R_ITEM.ITEM_SEQ            
			    LEFT JOIN
			        TL_WH_INV_LOC IL      
			            ON IB.WIB_BK_NO = IL.WIB_BK_NO            
			    	    <!-- #5838 [Binex-WMS] STORAGE INVOICE 확인 요청
								-20190611:LP NO 기준 전월의 ending balance 와 이번달 beginning balance 사이에 difference(OUT QTY 와 IN QTY 가 잘못 계산) 현상 -->               
						AND R_ITEM.LIC_PLAT_NO = IL.LIC_PLAT_NO        
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM_LOT L      
			            ON IL.CTRT_NO = L.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
			            AND IL.LOT_ID = L.LOT_ID                      
			            AND IL.WH_CD = L.WH_CD                
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM I      
			            ON IL.CTRT_NO = I.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
			    LEFT JOIN
			        TL_WH_LOC LOC      
			            ON IL.WH_CD = LOC.LOC_CD                      
			            AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
			    LEFT JOIN
			        TL_CTRT_STO_RATE SR      
			            ON IL.CTRT_NO = SR.CTRT_NO         
			            AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO 
			WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                                                  
		        AND EXISTS (               
				SELECT
		            'X'                             
		        FROM
		            TL_WH_LOC WL,
		            TL_WH_PROP WP                            
		        WHERE
		            LOC.LOC_CD = WP.LOC_CD                                  
		            AND LOC.USE_FLG = 'Y'                                  
		            AND LOC.PROP_CD = WP.PROP_CD                                                 
		            AND ALLOC_FLG = 'Y'                                   
		            AND WP.USE_FLG = 'Y')                                                        
		        AND L.WH_CD =   #wh_cd#                                                         
		        AND IL.CTRT_NO =  #ctrt_no#   
		        AND IL.ITEM_SYS_NO =  #item_sys_no#       
		        AND R_ITEM.ITEM_SYS_NO = #item_sys_no#        
		        AND L.LOT_ATTRIB_01  <![CDATA[ < ]]>  REPLACE ( #set_dt#, '-', '')
		        AND SR.UOM_TP_CD = 'LCP'      
		        AND I.UOM_TP_CD  = 'LCP'                          
		        AND SR.STO_TP = #pkg_lv3_unit_cd#
		        AND ISNULL(R_ITEM.LIC_PLAT_NO, '') != ''
		    GROUP BY
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.CURR_CD,
		        SR.STO_TP,
		        L.LOT_ATTRIB_01,
		        I.PKG_LV1_UNIT_CD,
		        SR.UNIT_PRICE,
		        R_ITEM.LIC_PLAT_NO
		) X
		GROUP BY
		    X.ITEM_CD,
		    X.CTRT_NO,
		    X.LIC_PLAT_NO 
		HAVING SUM(X.TOT_QTY) > 0
	</select>
	
	<!--  #1,068: [WMS4.o]Storage Closing 계산 로직 추가  -->
	<!-- [License Plate #]STORAGE Daily In & Out - Rate Type : License Plate # -->
	<select id="searchWHClsStoDailyLCPFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoDailyLCPFreightList */
		  WITH V_UNIT_QTY AS   (
			SELECT
			    IN_VB.CTRT_NO,
			    IN_VB.WH_CD,
			    IN_VB.ITEM_CD,
			    IN_VB.ITEM_NM,
			    '1' HUNIT_FOR_UOM,
			    IN_VB.UNIT_CD,
			    IN_VB.UNIT_PRICE,
			    IN_VB.CURR_CD,
			    SUM(ISNULL(IN_VB.inbound_qty,0)) inbound_qty,
			    SUM(ISNULL(IN_VB.outbound_qty,0)) outbound_qty,
			    SUM(IN_VB.inbound) inbound,
			    SUM(IN_VB.outbound) outbound,
			    SUM(ISNULL(IN_VB.inbound_qty,0)) - SUM(ISNULL(IN_VB.outbound_qty,0)) AS QTY,
			    IN_VB.TJ_DT,
			    IN_VB.PKG_LV1_UNIT_CD,
			    IN_VB.LIC_PLAT_NO  
			FROM
			  (SELECT 
					AA.CTRT_NO,
					AA.WH_CD,
					AA.ITEM_CD,
					AA.ITEM_NM,
					'1' HUNIT_FOR_UOM,
			        SR.STO_TP unit_cd,
			        SR.UNIT_PRICE,
					SR.CURR_CD,
			        SUM(ISNULL(0,0)) inbound_qty,
			        SUM(ISNULL(AA.OUT_QTY,0)) outbound_qty,
			        0 inbound,
			        1 outbound,
			        SUM(0 - ISNULL(AA.OUT_QTY,0)) AS QTY,
			        AA.OUTBOUND_DT AS TJ_DT,
			        I.PKG_LV1_UNIT_CD,
			        ALLC_ITM.LIC_PLAT_NO   
				FROM
				(<!-- SELECT
					B.CTRT_NO,
					B.WH_CD,
					SI.ITEM_CD,
					SI.ITEM_SYS_NO,
					SI.ITEM_NM,
					SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
					S.OUTBOUND_DT,
					B.WOB_BK_NO	                
				FROM
					TL_WH_OB B,
					TL_WH_ISSU S,
					TL_WH_ISSU_ITEM SI                     
				WHERE
					B.WOB_BK_NO  = SI.WOB_BK_NO                       
					AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
					AND B.CTRT_NO = #ctrt_no#                                                                                
					AND B.WH_CD   = #wh_cd#                                                                                                                                                                                                                                                                                                                                                                                       
				UNION -->
				SELECT
					B.CTRT_NO,
					B.WH_CD,
					PI.ITEM_CD,
					PI.ITEM_SYS_NO,
					PI.ITEM_NM,
					PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
					P.OUTBOUND_DT,
					B.WOB_BK_NO
				FROM
					TL_WH_OB B,
					TL_WH_LOAD_PLAN P,
					TL_WH_LOAD_PLAN_ITEM PI                     
				WHERE
					P.LP_NO     = PI.LP_NO                       
					AND P.LP_STS_CD = 'L'                       
					AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
					AND B.CTRT_NO = #ctrt_no#                                                                                
					AND B.WH_CD   = #wh_cd#
				) AA 
				LEFT JOIN 
					TL_WH_OB_ITEM OBI ON AA.WOB_BK_NO = OBI.WOB_BK_NO
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM I      
			            ON AA.CTRT_NO = I.CTRT_NO                      
			            AND AA.ITEM_SYS_NO = I.ITEM_SYS_NO    
		        LEFT JOIN
		            TL_WH_ALLC ALLC          
		                ON AA.WOB_BK_NO = ALLC.WOB_BK_NO         
		        LEFT JOIN
		            TL_WH_ALLC_ITEM ALLC_ITM         
		                ON ALLC.WALC_NO = ALLC_ITM.WALC_NO        
		                AND ALLC_ITM.SAO_SYS_NO = OBI.SAO_SYS_NO        
		                AND ALLC_ITM.ITEM_SYS_NO = I.ITEM_SYS_NO        
		                AND ALLC_ITM.ITEM_SEQ = OBI.ITEM_SEQ   
			    <!-- LEFT JOIN TL_WH_PSUDO_LP_SHIP SHIP
					ON (ALLC_ITM.WOB_BK_NO   = SHIP.WOB_BK_NO
		           		AND ALLC_ITM.SAO_SYS_NO  = SHIP.SAO_SYS_NO
		           		AND ALLC_ITM.WIB_BK_NO   = SHIP.WIB_BK_NO
		           		AND ALLC_ITM.PO_SYS_NO   = SHIP.PO_SYS_NO
		           		AND ALLC_ITM.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
		           		AND ALLC_ITM.LOT_ID      = SHIP.LOT_ID
		           		AND ALLC_ITM.WH_LOC_CD   = SHIP.WH_LOC_CD
		           		AND ALLC_ITM.ITEM_SEQ    = SHIP.ITEM_SEQ
		           		AND 'G' 		  = SHIP.LP_STATUS 
		           		AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
			           	AND ISNULL(ALLC_ITM.PO_NO,'')		= ISNULL(SHIP.PO_NO,'')
			           	AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,'')) -->
			    LEFT JOIN
			        TL_CTRT_STO_RATE SR      
			            ON AA.CTRT_NO = SR.CTRT_NO         
			            AND AA.ITEM_SYS_NO = SR.ITEM_SYS_NO  
			    WHERE
			        1= 1           
			        AND I.ITEM_USE_FLG = 'Y'                                           
			        AND AA.WH_CD = #wh_cd#                                                      
			        AND AA.CTRT_NO = #ctrt_no#          
			        AND AA.ITEM_SYS_NO =  #item_sys_no#          
			        AND AA.OUTBOUND_DT >=  REPLACE (  #set_fr_dt# , '-', '')                                  
			        AND AA.OUTBOUND_DT   <![CDATA[ <= ]]>  REPLACE (  #set_to_dt# , '-', '')   
			        AND SR.UOM_TP_CD = 'LCP'      
			        AND I.UOM_TP_CD  = 'LCP' 
			        AND SR.STO_TP = #pkg_lv3_unit_cd#
			        AND ISNULL(ALLC_ITM.LIC_PLAT_NO, '') != ''
				GROUP BY
			        AA.CTRT_NO,
			        AA.WH_CD,
			        AA.ITEM_CD,
			        AA.ITEM_NM,
			        SR.CURR_CD,
			        SR.STO_TP,
			        AA.OUTBOUND_DT,
			        I.PKG_LV1_UNIT_CD,
			        SR.UNIT_PRICE,
			        ALLC_ITM.LIC_PLAT_NO
			  UNION ALL   
			  SELECT
			        IL.CTRT_NO,
			        IL.WH_CD,
			        IL.ITEM_CD,
			        IL.ITEM_NM,
			        '1' HUNIT_FOR_UOM,
			        SR.STO_TP unit_cd,
			        SR.UNIT_PRICE,
			        SR.CURR_CD,
			        SUM(ISNULL(IL.IN_QTY,0)) inbound_qty,
			        SUM(ISNULL(0,0)) outbound_qty,
			        1 inbound,
			        0 outbound,
			        SUM(IL.IN_QTY - ISNULL(0,0)) AS QTY,
			        L.LOT_ATTRIB_01 AS TJ_DT,
			        I.PKG_LV1_UNIT_CD,
			        R_ITEM.LIC_PLAT_NO                                      
			    FROM
			        TL_WH_IB IB   
	            LEFT JOIN
	                TL_WH_IB_ITEM I_ITEM   
	                    ON IB.WIB_BK_NO = I_ITEM.WIB_BK_NO                    
	            LEFT JOIN
	                TL_WH_RCV_ITEM R_ITEM  
	                    ON I_ITEM.WIB_BK_NO = R_ITEM.WIB_BK_NO 
	                    AND I_ITEM.PO_SYS_NO = R_ITEM.PO_SYS_NO                                                 
	                    AND I_ITEM.ITEM_SYS_NO = R_ITEM.ITEM_SYS_NO                                                
	                    AND I_ITEM.ITEM_SEQ = R_ITEM.ITEM_SEQ            
			    LEFT JOIN
			        TL_WH_INV_LOC IL      
			            ON IB.WIB_BK_NO = IL.WIB_BK_NO            
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM_LOT L      
			            ON IL.CTRT_NO = L.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
			            AND IL.LOT_ID = L.LOT_ID                      
			            AND IL.WH_CD = L.WH_CD                
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM I      
			            ON IL.CTRT_NO = I.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
			    LEFT JOIN
			        TL_WH_LOC LOC      
			            ON IL.WH_CD = LOC.LOC_CD                      
			            AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
			    LEFT JOIN
			        TL_CTRT_STO_RATE SR      
			            ON IL.CTRT_NO = SR.CTRT_NO         
			            AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO            
			    WHERE
			        1= 1           
			        AND I.ITEM_USE_FLG = 'Y'                                                                  
			        AND EXISTS (               
					SELECT
			            'X'                             
			        FROM
			            TL_WH_LOC WL,
			            TL_WH_PROP WP                            
			        WHERE
			            LOC.LOC_CD = WP.LOC_CD                                  
			            AND LOC.USE_FLG = 'Y'                                  
			            AND LOC.PROP_CD = WP.PROP_CD                                                 
			            AND ALLOC_FLG = 'Y'                                   
			            AND WP.USE_FLG = 'Y')                                                        
			        AND L.WH_CD =   #wh_cd#                                                         
			        AND IL.CTRT_NO =  #ctrt_no#   
			        AND IL.ITEM_SYS_NO =  #item_sys_no#       
			        AND R_ITEM.ITEM_SYS_NO = #item_sys_no#        
			        AND L.LOT_ATTRIB_01 >=  REPLACE ( #set_fr_dt# , '-', '')                       
			        AND L.LOT_ATTRIB_01  <![CDATA[ <= ]]>  REPLACE ( #set_to_dt#, '-', '')
			        AND SR.UOM_TP_CD = 'LCP'      
			        AND I.UOM_TP_CD  = 'LCP'                          
			        AND SR.STO_TP = #pkg_lv3_unit_cd#
			        AND ISNULL(R_ITEM.LIC_PLAT_NO, '') != ''
			    GROUP BY
			        IL.CTRT_NO,
			        IL.WH_CD,
			        IL.ITEM_CD,
			        IL.ITEM_NM,
			        SR.CURR_CD,
			        SR.STO_TP,
			        L.LOT_ATTRIB_01,
			        I.PKG_LV1_UNIT_CD,
			        SR.UNIT_PRICE,
			        R_ITEM.LIC_PLAT_NO
			 ) IN_VB
		GROUP BY
	        IN_VB.CTRT_NO,
	        IN_VB.WH_CD,
	        IN_VB.ITEM_CD,
	        IN_VB.ITEM_NM,
	        IN_VB.CURR_CD,
	        IN_VB.UNIT_CD,
	        IN_VB.TJ_DT,
	        IN_VB.PKG_LV1_UNIT_CD,
	        IN_VB.UNIT_PRICE,
	        IN_VB.LIC_PLAT_NO
		)	 
		SELECT 
			#ctrt_no# CTRT_NO,
		    XX.TJ_DT,
		    #set_fr_dt# set_fr_dt,
		    #set_to_dt# set_to_dt,
		    '1' HUNIT_FOR_UOM,
		    ISNULL(SUM(XX.QTY),0) QTY,
			(SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
		    (
		     SELECT TOP 1 frt_cd_nm
			  FROM  tb_frt_cd
			  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
		    ) FRT_NM,
		    XX.UNIT_PRICE,
		    <!-- SUM(XX.INV_AMT) INV_AMT, -->
		    0 INV_AMT,
		    #s_cust_cd# CUST_CD,
		    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
		    XX.CURR_CD,
		    MAX(XX.CLS_NO) CLS_NO,
		    MAX(XX.CLS_DT) CLS_DT,
		    MAX(XX.INV_SEQ) INV_SEQ,
			'STO' RATE_TP_CD,
			#wh_cd# WH_CD,
			#ofc_cd# OFC_CD, 
		    <!-- SUM(XX.INV_TTL_AMT) INV_TTL_AMT, -->
		    0 INV_TTL_AMT,
		    MAX(XX.SELL_BUY_TP_CD) SELL_BUY_TP_CD,
		    MAX(XX.FRT_SEQ) FRT_SEQ,
		    MAX(XX.RATING_FLG) RATING_FLG,
		    MAX(XX.STS_CD) STS_CD,
		    XX.ITEM_CD,
		    XX.ITEM_NM,
		    ISNULL(MAX(XX.UNIT_CD), (SELECT STO_TP FROM TL_CTRT_STO_RATE WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO = #ctrt_no# AND UOM_TP_CD = 'LCP' AND STO_TP = #pkg_lv3_unit_cd#)) UNIT_CD,
		    ISNULL(MAX(XX.hndl_unit), (SELECT IT.PKG_LV1_UNIT_CD FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) hndl_unit,
		    ISNULL(SUM(XX.inbound), 0) inbound,
		    ISNULL(SUM(XX.outbound), 0) outbound
		FROM
		(
			SELECT 
					#ctrt_no# CTRT_NO,
				    CASE WHEN ISNULL(BB.TJ_DT,'')='' THEN AA.REGDATE 
				         ELSE BB.TJ_DT
				    END TJ_DT,
				    #set_fr_dt# set_fr_dt,
				    #set_to_dt# set_to_dt,
				    '1' HUNIT_FOR_UOM,
				    ISNULL(BB.QTY,0) QTY,
	 				<!-- (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
				    (
				     SELECT TOP 1 frt_cd_nm
					  FROM  tb_frt_cd
					  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
				    ) FRT_NM, -->
				    ISNULL(BB.UNIT_PRICE, 
						    (SELECT top 1 UNIT_PRICE FROM TL_CTRT_STO_RATE
							WHERE CTRT_NO = #ctrt_no#
							AND ITEM_SYS_NO = #item_sys_no#
							AND UOM_TP_CD = 'LCP'
							AND STO_TP = #pkg_lv3_unit_cd#)
					) UNIT_PRICE,
				    BB.INV_AMT,
				    #s_cust_cd# CUST_CD,
				    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
				    ISNULL(BB.CURR_CD, 
						    (SELECT top 1 CURR_CD FROM TL_CTRT_STO_RATE
							WHERE CTRT_NO = #ctrt_no#
							AND ITEM_SYS_NO = #item_sys_no#
							AND UOM_TP_CD = 'LCP')
					) CURR_CD,
				    BB.CLS_NO,
				    BB.CLS_DT,
				    BB.INV_SEQ,
					'STO' RATE_TP_CD,
					#wh_cd# WH_CD,
					#ofc_cd# OFC_CD, 
				    BB.INV_TTL_AMT,
				    BB.SELL_BUY_TP_CD,
				    BB.FRT_SEQ,
				    BB.RATING_FLG,
				    BB.STS_CD,
				    ISNULL(BB.ITEM_CD, (SELECT IT.ITEM_CD FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) ITEM_CD,
				    ISNULL(BB.ITEM_NM, (SELECT IT.ITEM_NM FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) ITEM_NM,
				    ISNULL(BB.UNIT_CD, (SELECT STO_TP FROM TL_CTRT_STO_RATE WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO = #ctrt_no# AND UOM_TP_CD = 'LCP' AND STO_TP = #pkg_lv3_unit_cd#)) UNIT_CD,
				    <!-- ISNULL(BB.hndl_unit, (SELECT IT.PKG_LV1_UNIT_CD FROM TL_CTRT_CUST_ITEM IT WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO =  #ctrt_no#)) hndl_unit, -->
				    ISNULL(BB.UNIT_CD, (SELECT STO_TP FROM TL_CTRT_STO_RATE WHERE ITEM_SYS_NO = #item_sys_no# AND CTRT_NO = #ctrt_no# AND UOM_TP_CD = 'LCP' AND STO_TP = #pkg_lv3_unit_cd#)) hndl_unit,
				    ISNULL(BB.inbound, 0) inbound,
				    ISNULL(BB.outbound, 0) outbound
				    <!-- CASE WHEN ISNULL(BB.outbound, 0) > 0 AND (ISNULL(BB.inbound_qty, 0) - ISNULL(BB.outbound_qty, 0) = 0) THEN 1 ELSE 0 END outbound --> 
			FROM
				(
				   SELECT CONVERT(CHAR(10),DATEADD(D,NUMBER,REPLACE ( #set_fr_dt# , '-', '') ),112) AS REGDATE
				   FROM MASTER..SPT_VALUES WITH(NOLOCK) 
				   WHERE TYPE = 'P' 
				   AND CONVERT(CHAR(10),DATEADD(D,NUMBER,REPLACE ( #set_fr_dt# , '-', '') ),112) <![CDATA[ < ]]> DATEADD(D, 1, REPLACE ( #set_to_dt#, '-', ''))  
				) AA
				LEFT JOIN 
				(  
				SELECT
				    V_TB.CTRT_NO CTRT_NO,
				    ISNULL(MAX(V_TB.TJ_DT),'') TJ_DT,
				    #set_fr_dt# AS set_fr_dt,
				    #set_to_dt# AS set_to_dt,
				    '1' HUNIT_FOR_UOM,
				    MAX(V_TB.QTY) QTY,
				    '' FRT_CD,
				    '' FRT_NM,
				    V_TB.UNIT_PRICE,
				    '' INV_AMT,
				    '' CUST_CD,
				    '' CUST_NM,
				    MAX(V_TB.CURR_CD) CURR_CD,
				    '' CLS_NO,
				    '' CLS_DT,
				    '' INV_SEQ,
					'STO' RATE_TP_CD,
					#wh_cd# WH_CD,
					#ofc_cd# OFC_CD, 
				    '' INV_TTL_AMT,
				    '' SELL_BUY_TP_CD,
				    '' FRT_SEQ,
				    '' RATING_FLG,
				    '' STS_CD,
				    V_TB.ITEM_CD,
				    V_TB.ITEM_NM,
				    MAX(V_TB.UNIT_CD) UNIT_CD,
				    MAX(V_TB.PKG_LV1_UNIT_CD) hndl_unit,
				    SUM(V_TB.inbound) inbound,
				    <!-- SUM(V_TB.outbound) outbound, -->
				    <!-- START ==================== outbound ========================== -->
				    (
						SELECT CASE WHEN V_IN.QTY - V_OUT.SHIP_ITEM_EA_QTY > 0 THEN 0 ELSE 1 END
						FROM 
								(	   
									SELECT
		                                SUM(LAST_TAB.SHIP_ITEM_EA_QTY)  SHIP_ITEM_EA_QTY,
										MAX(LAST_TAB.OUTBOUND_DT) AS OUTBOUND_DT      
						            FROM
						                (SELECT
						                    0 AS DIV,
						                    WOB_BK_NO,
						                    MAX(WH_CD) AS WH_CD,
						                    MAX(OUTBOUND_DT) AS OUTBOUND_DT,
						                    SAO_SYS_NO,
						                    ITEM_SYS_NO,
						                    MAX(ITEM_CD) AS ITEM_CD,
						                    MAX(ITEM_NM) AS ITEM_NM,
						                    MAX(ITEM_PKGUNIT) AS ITEM_PKGUNIT,
						                    MAX(ITEM_PKGQTY) AS ITEM_PKGQTY,
						                    MAX(ITEM_EA_QTY) AS ITEM_EA_QTY,
						                    MAX(SAO_NO) AS SAO_NO,
						                    WALC_NO,
						                    '' AS WIB_BK_NO,
						                    MAX(PO_NO) AS PO_NO,
						                    MAX(BK_STS_CD) AS BK_STS_CD,
						                    SUM(PICK_ITEM_EA_QTY) AS PICK_ITEM_EA_QTY,
						                    SUM(PICKD_ITEM_EA_QTY) AS PICKD_ITEM_EA_QTY,
						                    MAX(SEAL_NO) AS SEAL_NO,
						                    SUM(SHIP_ITEM_EA_QTY) AS SHIP_ITEM_EA_QTY,
						                    MAX(INBOUND_DT_OB) AS INBOUND_DT,
						                    MAX(LOT_NO_OB) AS LOT_NO,
						                    MAX(EXP_DT_OB) AS EXP_DT,
						                    MAX(LOT_04_OB) AS LOT_04,
						                    MAX(LOT_05_OB) AS LOT_05,
						                    MAX(FIX_LOT_ID) AS LOT_ID,
						                    MAX(CURR_CD) AS CURR_CD,
						                    MAX(UNIT_PRICE) AS UNIT_PRICE,
						                    MAX(RGST_TIMESTAMP) AS RGST_TT,
						                    ITEM_SEQ,
						                    ITEM_SER_NO,
						                    LIC_PLAT_NO       
						                FROM
						                    (      
												SELECT
											        T.*
											    FROM
											        (   SELECT
											            OB.WOB_BK_NO,
											            OB.WH_CD,
											            OB.CTRT_NO,            
											            OB_ITEM.SAO_SYS_NO,
											            OB_ITEM.ITEM_SYS_NO,
											            OB_ITEM.ITEM_CD,
											            OB_ITEM.ITEM_SEQ,
											            OB_ITEM.ITEM_NM,
											            OB_ITEM.ITEM_PKGUNIT,
											            OB_ITEM.ITEM_PKGQTY,
											            OB_ITEM.ITEM_EA_QTY,
											            OB_ITEM.SAO_NO,
											            OB_ITEM.RGST_TIMESTAMP,
											            OB_ITEM.INBOUND_DT AS INBOUND_DT_OB,
											            OB_ITEM.LOT_NO AS LOT_NO_OB,
											            OB_ITEM.EXP_DT AS EXP_DT_OB,
											            OB_ITEM.LOT_04 AS LOT_04_OB,
											            OB_ITEM.LOT_05 AS LOT_05_OB,
											            OB_ITEM.FIX_LOT_ID,
											            OB_ITEM.CURR_CD,
											            OB_ITEM.UNIT_PRICE,
											            ALLC_ITEM.WALC_NO,
											            ALLC_ITEM.WIB_BK_NO,
											            ALLC_ITEM.PO_SYS_NO,
											            ALLC_ITEM.LOT_ID,
											            ALLC_ITEM.WH_LOC_CD,
											            ALLC_ITEM.PO_NO,
											            CASE 
											                WHEN (SELECT
											                    COUNT (1)                      
											                FROM
											                    TL_WH_LOAD_PLAN LP,
											                    TL_WH_LOAD_PLAN_ITEM LPI                      
											                WHERE
											                    LP.LP_NO = LPI.LP_NO                                                               
											                    AND OB.WOB_BK_NO = LPI.WOB_BK_NO                        
											                    AND LP.LP_STS_CD = 'L') > 0 THEN 'X'                               
											                WHEN (SELECT
											                    COUNT (1)                      
											                FROM
											                    TL_WH_ISSU ISSU,
											                    TL_WH_ISSU_ITEM ISSUI                      
											                WHERE
											                    ISSU.WOB_OUT_NO = ISSUI.WOB_OUT_NO                                                               
											                    AND ALLC.WALC_NO = ISSU.WALC_NO) > 0 THEN 'BK'                                        
											                WHEN ALLC.WALC_NO IS NOT NULL 
											                AND ALLC.PICKD_FLG = 'Y' THEN 'P'               
											                WHEN ALLC.WALC_NO IS NOT NULL 
											                AND ISNULL(ALLC.PICKD_FLG,
											                'N') != 'Y' THEN 'A'               
											                ELSE OB.BK_STS_CD 
											            END AS BK_STS_CD,
											            ISNULL(ALLC_ITEM.PICK_ITEM_EA_QTY,
											            0) AS PICK_ITEM_EA_QTY,
											            CASE 
											                WHEN ISNULL(ALLC.PICKD_FLG,
											                'N') = 'Y' THEN ISNULL(ALLC_ITEM.PICKD_ITEM_EA_QTY,
											                0) 
											                ELSE 0 
											            END AS PICKD_ITEM_EA_QTY,
											            
											            CASE 
											                WHEN LP.LP_NO IS NOT NULL THEN LP.SEAL_NO                
											                WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.SEAL_NO               
											                WHEN ALLC_ITEM.WALC_NO IS NOT NULL THEN ALLC_ITEM.SEAL_NO               
											                ELSE OB.SEAL_NO 
											            END AS SEAL_NO,
											            CASE 
											                WHEN LP_ITEM.LP_NO IS NOT NULL THEN LP_ITEM.LOAD_ITEM_EA_QTY               
											                WHEN ISSU_ITEM.WOB_OUT_NO IS NOT NULL THEN ISSU_ITEM.ISSU_ITEM_EA_QTY               
											                ELSE 0 
											            END AS SHIP_ITEM_EA_QTY,
											            LP_ITEM.LP_NO,
											            CASE 
											                WHEN LP.LP_NO IS NOT NULL THEN LP.OUTBOUND_DT                
											                WHEN ISSU.WOB_OUT_NO IS NOT NULL THEN ISSU.OUTBOUND_DT               
											                ELSE NULL 
											            END AS OUTBOUND_DT,
											            R_ITEM.ITEM_SER_NO,
											            R_ITEM.LIC_PLAT_NO      
											        FROM
											            TL_WH_OB OB         
											        INNER JOIN
											            TL_WH_OB_ITEM OB_ITEM          
											                ON OB.WOB_BK_NO = OB_ITEM.WOB_BK_NO     
											        LEFT JOIN
											            TL_WH_ALLC ALLC       
											                ON OB.WOB_BK_NO = ALLC.WOB_BK_NO     
											        LEFT JOIN
											            TL_WH_ALLC_ITEM ALLC_ITEM       
											                ON OB_ITEM.WOB_BK_NO         = ALLC_ITEM.WOB_BK_NO        
											                AND OB_ITEM.SAO_SYS_NO       = ALLC_ITEM.SAO_SYS_NO        
											                AND OB_ITEM.ITEM_SYS_NO      = ALLC_ITEM.ITEM_SYS_NO        
											                AND OB_ITEM.ITEM_SEQ         = ALLC_ITEM.ITEM_SEQ         
											        LEFT JOIN
											            TL_WH_LOAD_PLAN_ITEM LP_ITEM          
											                ON ALLC_ITEM.WOB_BK_NO       = LP_ITEM.WOB_BK_NO        
											                AND ALLC_ITEM.SAO_SYS_NO     = LP_ITEM.SAO_SYS_NO        
											                AND ALLC_ITEM.WIB_BK_NO      = LP_ITEM.WIB_BK_NO        
											                AND ALLC_ITEM.PO_SYS_NO      = LP_ITEM.PO_SYS_NO        
											                AND ALLC_ITEM.ITEM_SYS_NO    = LP_ITEM.ITEM_SYS_NO        
											                AND ALLC_ITEM.LOT_ID         = LP_ITEM.LOT_ID        
											                AND ALLC_ITEM.WH_LOC_CD      = LP_ITEM.WH_LOC_CD        
											                AND ALLC_ITEM.ITEM_SEQ       = LP_ITEM.ITEM_SEQ     
											        LEFT JOIN
											            TL_WH_LOAD_PLAN LP        
											                ON LP_ITEM.LP_NO = LP.LP_NO          
											        LEFT JOIN
											            TL_WH_ISSU_ITEM ISSU_ITEM       
											                ON ALLC_ITEM.WALC_NO         = ISSU_ITEM.WALC_NO        
											                AND ALLC_ITEM.SAO_SYS_NO     = ISSU_ITEM.SAO_SYS_NO        
											                AND ALLC_ITEM.WIB_BK_NO      = ISSU_ITEM.WIB_BK_NO        
											                AND ALLC_ITEM.PO_SYS_NO      = ISSU_ITEM.PO_SYS_NO        
											                AND ALLC_ITEM.ITEM_SYS_NO    = ISSU_ITEM.ITEM_SYS_NO        
											                AND ALLC_ITEM.LOT_ID         = ISSU_ITEM.LOT_ID        
											                AND ALLC_ITEM.WH_LOC_CD      = ISSU_ITEM.WH_LOC_CD        
											                AND ALLC_ITEM.ITEM_SEQ       = ISSU_ITEM.ITEM_SEQ     
											        LEFT JOIN
											            TL_WH_ISSU ISSU               
											                ON ALLC_ITEM.WALC_NO         = ISSU.WALC_NO      
											        LEFT JOIN
											            TL_WH_RCV_ITEM R_ITEM        
											                ON ALLC_ITEM.WIB_BK_NO = R_ITEM.WIB_BK_NO       
											                AND ALLC_ITEM.PO_SYS_NO = R_ITEM.PO_SYS_NO       
											                AND ALLC_ITEM.ITEM_SYS_NO = R_ITEM.ITEM_SYS_NO       
											                <!-- AND ALLC_ITEM.ITEM_SEQ = R_ITEM.ITEM_SEQ    -->
											                AND ALLC_ITEM.LIC_PLAT_NO = R_ITEM.LIC_PLAT_NO  
											        WHERE
											            1 = 1            
											            AND OB.WH_CD =  #wh_cd#               
											            AND OB.CTRT_NO =  #ctrt_no#                    
														) T    
											        LEFT JOIN
											            TL_CTRT_CUST_ITEM CI           
											                ON T.CTRT_NO     = CI.CTRT_NO          
											                AND T.ITEM_SYS_NO = CI.ITEM_SYS_NO    
											        LEFT JOIN
											            TL_CTRT_CUST_ITEM_LOT D            
											                ON T.CTRT_NO     = D.CTRT_NO           
											                AND T.ITEM_SYS_NO = D.ITEM_SYS_NO       
											                AND T.LOT_ID      = D.LOT_ID    
											        LEFT JOIN
											            TL_WH_WAVE_OB WAVE_OB        
											                ON T.WOB_BK_NO     = WAVE_OB.WOB_BK_NO    
											        LEFT JOIN
											            TL_WH_WAVE WAVE                 
											                ON WAVE_OB.WAVE_NO = WAVE.WAVE_NO   
											        WHERE
											            1=1   
											            AND       T.BK_STS_CD != 'C')TAB      
										WHERE                      
											CTRT_NO  = #ctrt_no# 
											AND WH_CD  = #wh_cd#
											AND ITEM_SYS_NO = #item_sys_no#  
											AND LIC_PLAT_NO = V_TB.LIC_PLAT_NO  
						                GROUP BY
						                    WALC_NO,
						                    WOB_BK_NO,
						                    SAO_SYS_NO,
						                    ITEM_SYS_NO,
						                    ITEM_SEQ,
						                    ITEM_SER_NO,
						                    LIC_PLAT_NO) LAST_TAB 
						) V_OUT,    
						(SELECT SUM(TT.IN_ITEM_EA_QTY) QTY
						FROM
							(SELECT T.*
						  	FROM (
							SELECT C.WIB_BK_NO
							     , C.ORD_TP_CD
							     , C.EST_IN_DT
							     , C.MODI_SYS_DT
							     , ISNULL(C.CUST_ORD_NO, ' ') AS CUST_ORD_NO
							     , C.WH_CD
							     , DBO.TL_GET_LOC_NM(C.WH_CD) AS WH_NM
							     , C.CTRT_NO
							     , DBO.TL_GET_CTRT_NM(C.CTRT_NO) AS CTRT_NM	
							     , C.REF_NO
							     , C.MBL_NO
							     , C.HBL_NO
							     , E.PO_SYS_NO
							     , E.ITEM_SYS_NO
							     , E.ITEM_SEQ
							     , E.PO_NO
							     , E.ITEM_CD
							     , E.ITEM_NM
							     , E.INBOUND_DT AS INBOUND_DT_IB
						         , E.LOT_NO AS LOT_NO_IB
						         , E.EXP_DT AS EXP_DT_IB
						         , E.LOT_04 AS LOT_04_IB
						         , E.LOT_05 AS LOT_05_IB
							     , E.ITEM_PKGQTY
							     , E.ITEM_PKGUNIT
							     , E.ITEM_EA_QTY
							     , E.ITEM_CBM
							     , E.ITEM_CBF
							     , E.ITEM_GRS_KGS
							     , E.ITEM_GRS_LBS
							     , E.ITEM_NET_KGS
							     , E.ITEM_NET_LBS
							     , E.RGST_TIMESTAMP
							     , E.CURR_CD
							     , E.UNIT_PRICE  
							     , B.WIB_IN_NO
							     , B.LOT_ID
						         , B.SND_PKGUNIT
						         , B.SND_PKGQTY
						         , B.DMG_PKGUNIT
						         , B.DMG_PKGQTY
						         , B.IN_ITEM_EA_QTY
						         , B.IN_ITEM_PE_QTY
						         , B.OS_ITEM_EA_QTY
						         , B.ITEM_SER_NO
						         , B.LIC_PLAT_NO        
							  FROM TL_WH_IB C
							    , TL_WH_IB_ITEM E 
							     LEFT JOIN TL_WH_RCV_ITEM B 
							       ON E.WIB_BK_NO   = B.WIB_BK_NO 
						       	  AND E.PO_SYS_NO   = B.PO_SYS_NO
						       	  AND E.ITEM_SYS_NO = B.ITEM_SYS_NO
						       	  AND E.ITEM_SEQ    = B.ITEM_SEQ		     
							 WHERE 1 = 1
								AND	C.WIB_BK_NO = E.WIB_BK_NO 
							    AND C.WH_CD = #wh_cd#
						        AND C.BK_STS_CD != 'C'                   
						        AND C.CTRT_NO =  #ctrt_no#
							  ) T
							  LEFT JOIN TL_CTRT_CUST_ITEM CI	 
						  		ON  T.CTRT_NO      = CI.CTRT_NO
								AND T.ITEM_SYS_NO  = CI.ITEM_SYS_NO  
							WHERE                      
								T.CTRT_NO  = #ctrt_no#
								AND T.WH_CD  = #wh_cd#
								AND T.ITEM_SYS_NO = #item_sys_no#  
								AND T.LIC_PLAT_NO = V_TB.LIC_PLAT_NO
							) TT  
						) V_IN
						WHERE 
							V_OUT.SHIP_ITEM_EA_QTY > 0
							AND V_OUT.OUTBOUND_DT = V_TB.TJ_DT
				    ) outbound,
				    <!-- END ==================== outbound ========================== -->
				    SUM(V_TB.inbound_qty) inbound_qty,
				    SUM(V_TB.outbound_qty) outbound_qty
				FROM
				    V_UNIT_QTY V_TB
				WHERE
				    1= 1   
				GROUP BY 
					V_TB.CTRT_NO,
					V_TB.ITEM_CD,
					V_TB.ITEM_NM,
					V_TB.TJ_DT,
					V_TB.UNIT_PRICE,
					V_TB.LIC_PLAT_NO
				) AS BB
				ON AA.REGDATE = BB.TJ_DT
		) XX
		GROUP BY 
			XX.CTRT_NO,
			XX.ITEM_CD,
			XX.ITEM_NM,
			XX.TJ_DT,
			XX.CURR_CD,
			XX.UNIT_PRICE
			
		<!-- WHERE 
		 XX.TJ_DT NOT IN  (
				SELECT frt.TJ_DT
			  FROM TL_CTRT_CUST_FRT frt
			 WHERE 1 = 1 
			 		<isNotEmpty property="cls_no">
			 		AND frt.CLS_NO = #cls_no#
			 		</isNotEmpty>
		            <isNotEmpty property="set_to_dt">
		            	<isEqual property="sheet_nm" compareValue="sheet1">
			          		AND  frt.TJ_DT = #set_to_dt# 
		            	</isEqual>
		            	<isEqual property="sheet_nm" compareValue="sheet2">
			          		<![CDATA[AND  (frt.TJ_DT >=#set_fr_dt# AND frt.TJ_DT <=#set_to_dt#) ]]> 
		            	</isEqual>
		            </isNotEmpty>
		            <isNotEmpty property="wh_cd">
		          		AND  frt.wh_cd = #wh_cd# 
		            </isNotEmpty>
		            <isNotEmpty property="ctrt_no">
		          		AND  frt.ctrt_no = #ctrt_no# 
		            </isNotEmpty>
		            <isNotEmpty property="rate_tp_cd">
		            	<isEqual property="rate_tp_cd" compareValue="IAO">
			          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
			            	<isEqual property="rate_tp_cd" compareValue="STO">
				          		AND  frt.rate_tp_cd = 'STO' Storage
			            	</isEqual>
			            	<isNotEqual property="rate_tp_cd" compareValue="STO">
			            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
			            	</isNotEqual>
		            	</isNotEqual>
		            </isNotEmpty>
				<isNotEmpty property="s_cust_cd">
				AND frt.CUST_CD  = #s_cust_cd#
				</isNotEmpty>
			   AND frt.USE_FLG = 'Y'
			   AND frt.SHEET_NM = #sheet_nm#
			   AND frt.DELT_FLG = 'N'
		 	)        -->
		ORDER BY
		    XX.TJ_DT  
	</select>
	
	<!-- STORAGE Ending Banlance - Rate Type : License Plate #(LCP) -->
	<select id="searchWHClsStoLCPFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoLCPFreightList */
		WITH V_UNIT_QTY AS   (
		  SELECT 
				AA.CTRT_NO,
				AA.WH_CD,
				AA.ITEM_CD,
				AA.ITEM_NM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
				SR.CURR_CD,
		        SUM(ISNULL(0,0)) inbound,
		        <!-- SUM(ISNULL(AA.OUT_QTY,0)) outbound, -->
		        1 outbound,
		        SUM(0 - ISNULL(AA.OUT_QTY,0)) AS QTY,
		        MAX(AA.OUTBOUND_DT) AS TJ_DT,
		        MAX(I.PKG_LV1_UNIT_CD) PKG_LV1_UNIT_CD,
		        ALLC_ITM.LIC_PLAT_NO   
			FROM
			(<!-- SELECT
				B.CTRT_NO,
				B.WH_CD,
				SI.ITEM_CD,
				SI.ITEM_SYS_NO,
				SI.ITEM_NM,
				SI.ISSU_ITEM_EA_QTY AS OUT_QTY,
				S.OUTBOUND_DT,
				B.WOB_BK_NO	                
			FROM
				TL_WH_OB B,
				TL_WH_ISSU S,
				TL_WH_ISSU_ITEM SI                     
			WHERE
				B.WOB_BK_NO  = SI.WOB_BK_NO                       
				AND S.WOB_OUT_NO = SI.WOB_OUT_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#                                                                                                                                                                                                                                                                                                                                                                                       
			UNION -->
			SELECT
				B.CTRT_NO,
				B.WH_CD,
				PI.ITEM_CD,
				PI.ITEM_SYS_NO,
				PI.ITEM_NM,
				PI.LOAD_ITEM_EA_QTY AS OUT_QTY,
				P.OUTBOUND_DT,
				B.WOB_BK_NO
			FROM
				TL_WH_OB B,
				TL_WH_LOAD_PLAN P,
				TL_WH_LOAD_PLAN_ITEM PI                     
			WHERE
				P.LP_NO     = PI.LP_NO                       
				AND P.LP_STS_CD = 'L'                       
				AND B.WOB_BK_NO = PI.WOB_BK_NO                                                                          
				AND B.CTRT_NO = #ctrt_no#                                                                                
				AND B.WH_CD   = #wh_cd#
			) AA 
			LEFT JOIN 
				TL_WH_OB_ITEM OBI ON AA.WOB_BK_NO = OBI.WOB_BK_NO
		    LEFT JOIN
		        TL_CTRT_CUST_ITEM I      
		            ON AA.CTRT_NO = I.CTRT_NO                      
		            AND AA.ITEM_SYS_NO = I.ITEM_SYS_NO 
	        LEFT JOIN
	            TL_WH_ALLC ALLC          
	                ON AA.WOB_BK_NO = ALLC.WOB_BK_NO         
	        LEFT JOIN
	            TL_WH_ALLC_ITEM ALLC_ITM         
	                ON ALLC.WALC_NO = ALLC_ITM.WALC_NO        
	                AND ALLC_ITM.SAO_SYS_NO = OBI.SAO_SYS_NO        
	                AND ALLC_ITM.ITEM_SYS_NO = I.ITEM_SYS_NO        
	                AND ALLC_ITM.ITEM_SEQ = OBI.ITEM_SEQ   
		    <!-- LEFT JOIN TL_WH_PSUDO_LP_SHIP SHIP
				ON (ALLC_ITM.WOB_BK_NO   = SHIP.WOB_BK_NO
	           		AND ALLC_ITM.SAO_SYS_NO  = SHIP.SAO_SYS_NO
	           		AND ALLC_ITM.WIB_BK_NO   = SHIP.WIB_BK_NO
	           		AND ALLC_ITM.PO_SYS_NO   = SHIP.PO_SYS_NO
	           		AND ALLC_ITM.ITEM_SYS_NO = SHIP.ITEM_SYS_NO
	           		AND ALLC_ITM.LOT_ID      = SHIP.LOT_ID
	           		AND ALLC_ITM.WH_LOC_CD   = SHIP.WH_LOC_CD
	           		AND ALLC_ITM.ITEM_SEQ    = SHIP.ITEM_SEQ
	           		AND 'G' 		  = SHIP.LP_STATUS 
	           		AND ISNULL(ALLC_ITM.LIC_PLAT_NO,'') = ISNULL(SHIP.LIC_PLAT_NO,'')
		           	AND ISNULL(ALLC_ITM.PO_NO,'')		= ISNULL(SHIP.PO_NO,'')
		           	AND ISNULL(ALLC_ITM.ITEM_SER_NO,'') = ISNULL(SHIP.ITEM_SER_NO,'')) -->   
		    LEFT JOIN
		        TL_CTRT_STO_RATE SR      
		            ON AA.CTRT_NO = SR.CTRT_NO         
		            AND AA.ITEM_SYS_NO = SR.ITEM_SYS_NO  
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                           
		        AND AA.WH_CD = #wh_cd#                                                      
		        AND AA.CTRT_NO = #ctrt_no#          
		        AND AA.ITEM_SYS_NO =  #item_sys_no#          
		        AND ALLC_ITM.ITEM_SYS_NO =  #item_sys_no#          
		        AND AA.OUTBOUND_DT   <![CDATA[ <= ]]>  REPLACE (  #set_to_dt# , '-', '')   
		        AND SR.UOM_TP_CD = 'LCP'      
		        AND I.UOM_TP_CD  = 'LCP' 
		        AND SR.STO_TP = #pkg_lv3_unit_cd#
		        AND ISNULL(ALLC_ITM.LIC_PLAT_NO, '') != ''
			GROUP BY
		        AA.CTRT_NO,
		        AA.WH_CD,
		        AA.ITEM_CD,
		        AA.ITEM_NM,
		        SR.CURR_CD,
		        SR.STO_TP,
		        ALLC_ITM.LIC_PLAT_NO
		  UNION ALL   
		  SELECT
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.STO_TP unit_cd,
		        MAX(SR.UNIT_PRICE) UNIT_PRICE,
		        SR.CURR_CD,
		        <!-- SUM(ISNULL(IL.IN_QTY,0)) inbound, -->
		        1 inbound,
		        SUM(ISNULL(0,0)) outbound,
		        SUM(IL.IN_QTY - ISNULL(0,0)) AS QTY,
		        MAX(L.LOT_ATTRIB_01) AS TJ_DT,
		        MAX(I.PKG_LV1_UNIT_CD),
		        R_ITEM.LIC_PLAT_NO                                     
		    FROM
		        TL_WH_IB IB           
				LEFT JOIN
		              TL_WH_IB_ITEM I_ITEM   
		                  ON IB.WIB_BK_NO = I_ITEM.WIB_BK_NO                    
		        LEFT JOIN
		              TL_WH_RCV_ITEM R_ITEM  
		                  ON I_ITEM.WIB_BK_NO = R_ITEM.WIB_BK_NO 
		                  AND I_ITEM.PO_SYS_NO = R_ITEM.PO_SYS_NO                                                 
		                  AND I_ITEM.ITEM_SYS_NO = R_ITEM.ITEM_SYS_NO                                                
		                  AND I_ITEM.ITEM_SEQ = R_ITEM.ITEM_SEQ            
			    LEFT JOIN
			        TL_WH_INV_LOC IL      
			            ON IB.WIB_BK_NO = IL.WIB_BK_NO            
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM_LOT L      
			            ON IL.CTRT_NO = L.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                      
			            AND IL.LOT_ID = L.LOT_ID                      
			            AND IL.WH_CD = L.WH_CD                
			    LEFT JOIN
			        TL_CTRT_CUST_ITEM I      
			            ON IL.CTRT_NO = I.CTRT_NO                      
			            AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO  
			    LEFT JOIN
			        TL_WH_LOC LOC      
			            ON IL.WH_CD = LOC.LOC_CD                      
			            AND IL.WH_LOC_CD = LOC.WH_LOC_CD       
			    LEFT JOIN
			        TL_CTRT_STO_RATE SR      
			            ON IL.CTRT_NO = SR.CTRT_NO         
			            AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO         
		    WHERE
		        1= 1           
		        AND I.ITEM_USE_FLG = 'Y'                                                                  
		        AND EXISTS (               
				SELECT
		            'X'                             
		        FROM
		            TL_WH_LOC WL,
		            TL_WH_PROP WP                            
		        WHERE
		            LOC.LOC_CD = WP.LOC_CD                                  
		            AND LOC.USE_FLG = 'Y'                                  
		            AND LOC.PROP_CD = WP.PROP_CD                                                 
		            AND ALLOC_FLG = 'Y'                                   
		            AND WP.USE_FLG = 'Y')                                                        
		        AND L.WH_CD =   #wh_cd#                                                         
		        AND IL.CTRT_NO =  #ctrt_no#          
		        AND IL.ITEM_SYS_NO =  #item_sys_no#       
		        AND R_ITEM.ITEM_SYS_NO =  #item_sys_no#       
		        AND L.LOT_ATTRIB_01  <![CDATA[ <= ]]>  REPLACE ( #set_to_dt#, '-', '')
		        AND SR.UOM_TP_CD = 'LCP'      
		        AND I.UOM_TP_CD  = 'LCP'                          
		        AND SR.STO_TP = #pkg_lv3_unit_cd#
		        AND ISNULL(R_ITEM.LIC_PLAT_NO, '') != ''                      
		    GROUP BY
		        IL.CTRT_NO,
		        IL.WH_CD,
		        IL.ITEM_CD,
		        IL.ITEM_NM,
		        SR.CURR_CD,
		        SR.STO_TP,
		        R_ITEM.LIC_PLAT_NO 
		)   
		SELECT
		    V_TB.CTRT_NO CTRT_NO,
		    #set_to_dt# TJ_DT,
		    #set_fr_dt# AS set_fr_dt,
		    #set_to_dt# AS set_to_dt,
		    '1' HUNIT_FOR_UOM,
		    <!-- SUM(V_TB.QTY) QTY, -->
		    SUM(V_TB.inbound) - SUM(V_TB.outbound) QTY,
		    (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#) FRT_CD,
		    (
		     SELECT TOP 1 frt_cd_nm
			  FROM  tb_frt_cd
			  WHERE frt_cd = (SELECT OFC.WH_STO_ACC_CD FROM TB_OFC ofc WHERE ofc.ofc_cd = #ofc_cd#)
		    ) FRT_NM,
		    MAX(V_TB.UNIT_PRICE) UNIT_PRICE,
		    '' INV_AMT,
		    #s_cust_cd# CUST_CD,
		    dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
		    MAX(V_TB.CURR_CD) CURR_CD,
		    '' CLS_NO,
		    '' CLS_DT,
		    '' INV_SEQ,
			'STO' RATE_TP_CD,
			#wh_cd# WH_CD,
			#ofc_cd# OFC_CD, 
		    '' INV_TTL_AMT,
		    '' SELL_BUY_TP_CD,
		    '' FRT_SEQ,
		    '' RATING_FLG,
		    '' STS_CD,
		    V_TB.ITEM_CD,
		    V_TB.ITEM_NM,
		    MAX(V_TB.UNIT_CD) UNIT_CD,
		    MAX(V_TB.PKG_LV1_UNIT_CD) hndl_unit,
		    SUM(V_TB.inbound) inbound,
		    SUM(V_TB.outbound) outbound
		FROM
		    V_UNIT_QTY V_TB
		WHERE
		    1= 1   
		GROUP BY 
			V_TB.CTRT_NO,
			V_TB.ITEM_CD,
			V_TB.ITEM_NM
		ORDER BY 
			V_TB.ITEM_CD,
			V_TB.ITEM_NM
	</select>
	
	<!-- STORAGE Ending Banlance - Rate Type : Location(LOC) -->
	<select id="searchWHClsStoLOCFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoLOCFreightList */
		WITH V_UNIT_QTY AS
		(
		SELECT
		        IL.CTRT_NO,
				IL.ITEM_CD,
				IL.ITEM_NM,
		        IL.WH_CD,
				IL.WH_LOC_CD,
				MAX(SR.UNIT_PRICE) UNIT_PRICE,
				SR.CURR_CD,
		        dbo.TL_GET_WH_LOC_NM (IL.WH_CD,IL.WH_LOC_CD) AS unit_cd,
				COUNT(IL.WH_LOC_CD) AS QTY		                             
		    FROM
		        TL_WH_IB IB
		        LEFT JOIN TL_WH_INV_LOC IL
					ON IB.WIB_BK_NO = IL.WIB_BK_NO 
		        LEFT JOIN TL_CTRT_CUST_ITEM_LOT L
					ON IL.CTRT_NO = L.CTRT_NO                
					AND IL.ITEM_SYS_NO = L.ITEM_SYS_NO                
					AND IL.LOT_ID = L.LOT_ID                
					AND IL.WH_CD = L.WH_CD     
		        LEFT JOIN TL_CTRT_CUST_ITEM I
					ON IL.CTRT_NO = I.CTRT_NO                
					AND IL.ITEM_SYS_NO = I.ITEM_SYS_NO
		        LEFT JOIN TL_WH_LOC LOC
					ON IL.WH_CD = LOC.LOC_CD                
					AND IL.WH_LOC_CD = LOC.WH_LOC_CD  
				LEFT JOIN TL_CTRT_STO_RATE SR
					ON IL.CTRT_NO = SR.CTRT_NO   
					AND IL.ITEM_SYS_NO = SR.ITEM_SYS_NO       
		    WHERE 1= 1
		        AND I.ITEM_USE_FLG = 'Y'          
		        <!-- AND IL.IN_QTY - ISNULL(IL.ALLC_QTY,0) > 0 -->            
		        AND IL.IN_QTY - ISNULL(IL.OUT_QTY,0) > 0 
		        AND EXISTS       (
		            SELECT
		                'X'              
		            FROM
		                TL_WH_LOC WL,
		                TL_WH_PROP WP             
		            WHERE
		                LOC.LOC_CD = WP.LOC_CD               
		                AND LOC.USE_FLG = 'Y'               
		                AND LOC.PROP_CD = WP.PROP_CD                              
		                AND (
		                    1 = 1                                       
		                    OR ALLOC_FLG = 'Y'                                     
		                )                
		                AND WP.USE_FLG = 'Y'            
		        )                                             
		        AND L.WH_CD =  #wh_cd#                                              
		        AND IL.CTRT_NO = #ctrt_no#
		        AND IL.ITEM_SYS_NO = #item_sys_no# 
		        AND L.LOT_ATTRIB_01 <![CDATA[ <= ]]> REPLACE ( #set_to_dt# , '-', '')                       
				AND SR.UOM_TP_CD = 'LOC' 
				AND I.UOM_TP_CD  = 'LOC'
				AND SR.STO_TP = IL.WH_LOC_CD 
				AND isnull(IL.WH_LOC_CD,'') != ''                   
		    GROUP BY
				IL.CTRT_NO,
		        IL.ITEM_CD,
				IL.ITEM_NM,
			    IL.WH_CD,
			    SR.CURR_CD,
				IL.WH_LOC_CD
		)
		SELECT
 				V_TB.CTRT_NO,
				#set_to_dt# AS TJ_DT,
				#set_fr_dt# AS set_fr_dt,
				#set_to_dt# AS set_to_dt,
				V_TB.QTY,
				'' FRT_CD,
				'' FRT_NM,
				V_TB.UNIT_PRICE UNIT_PRICE,
				'' INV_AMT,
				#s_cust_cd# CUST_CD,
				dbo.TL_GET_CUST_NM(#s_cust_cd#) CUST_NM,
				<!-- #curr_cd# CURR_CD, -->
				V_TB.CURR_CD,
				'' CLS_NO,
				'' CLS_DT,
				'' INV_SEQ,
				'STO' RATE_TP_CD,
				#wh_cd# WH_CD,
				#ofc_cd# OFC_CD, 
				'' INV_TTL_AMT,
				'' SELL_BUY_TP_CD,
				'' FRT_SEQ,
				'' RATING_FLG,
				'' STS_CD,
		        V_TB.ITEM_CD,
		        V_TB.ITEM_NM,
				V_TB.UNIT_CD	                             
		    FROM
				V_UNIT_QTY V_TB   
				<!-- LEFT OUTER JOIN TL_CTRT_CUST_FRT FRT
					ON V_TB.CTRT_NO  = FRT.CTRT_NO 
					AND FRT.CLS_NO = #cls_no#
					AND FRT.RATE_TP_CD = 'STO' -->
		    WHERE 1= 1 
	</select>
	
	<!-- Freight 정보 조회 -->
	<select id="searchWHClosingFreightList" resultClass="com.clt.apps.fis.wms.rate.dto.Grd02RTDetailListVO">
		/* wms.WHClosing.searchWHClosingFreightList */
		SELECT DISTINCT T.*
						<!-- ,case when (select CUST_ORD_NO from TL_WH_IB where WIB_BK_NO = T.BK_NO) is null then (select CUST_ORD_NO from TL_WH_OB where WOB_BK_NO = T.BK_NO)
						else (select CUST_ORD_NO from TL_WH_IB where WIB_BK_NO = T.BK_NO)
						end WIB_BK_NO -->
		FROM
			(SELECT 			      
			   CASE WHEN ISNULL(frt.WIB_BK_NO,'') = '' THEN frt.WOB_BK_NO
			   ELSE frt.WIB_BK_NO END WIB_BK_NO
			  ,frt.CUST_ORD_NO
			  ,CASE WHEN ISNULL(IB.INBOUND_DT,'') = '' THEN P.OUTBOUND_DT
			   ELSE IB.INBOUND_DT END TJ_DT <!-- Settlement Period -->
		      ,CASE WHEN ISNULL(IB.ORD_TP_CD,'') = '' THEN OB.ORD_TP_CD
		       ELSE IB.ORD_TP_CD END ORD_TP_CD
		      ,frt.WH_CD
		      ,frt.CTRT_NO
		      ,frt.WIB_BK_FRT_SEQ
		      ,frt.OFC_CD
		      ,frt.CUST_CD
		      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
		      ,frt.RATE_TP_CD
		      ,frt.FRT_CD
		      ,frt.FRT_NM
		      ,frt.UNIT_CD
		      ,frt.UNIT_CD2
		      ,frt.CURR_CD
		      ,frt.UNIT_PRICE
		      ,frt.QTY
		      ,frt.INV_AMT
		      ,frt.INV_TTL_AMT
		      ,frt.ITEM_CD
		      ,frt.STS_CD
		      ,frt.CLS_NO
		      ,frt.CLS_DT
		      ,frt.INV_SEQ
		      ,frt.SELL_BUY_TP_CD
		      ,frt.FRT_SEQ
		      ,frt.RATING_FLG
		      ,frt.USE_FLG
		      ,frt.DELT_FLG
		      ,frt.RGST_USRID
		      ,frt.RGST_OFC_CD
		      ,frt.RGST_TMS
		      ,frt.MODI_USRID
		      ,frt.MODI_OFC_CD
		      ,frt.MODI_TMS
		  FROM TL_CTRT_CUST_FRT frt
		  	   LEFT OUTER JOIN TL_WH_IB IB
		  	   ON frt.WIB_BK_NO = IB.WIB_BK_NO
		  	   LEFT OUTER JOIN TL_WH_OB OB
		  	   ON frt.WOB_BK_NO = OB.WOB_BK_NO     
		  	   LEFT OUTER JOIN TL_WH_LOAD_PLAN_ITEM PI
		  	   ON OB.WOB_BK_NO = PI.WOB_BK_NO
		  	   LEFT OUTER JOIN TL_WH_LOAD_PLAN P
			   ON P.LP_NO = PI.LP_NO
			   AND P.LP_STS_CD = 'L'     
		 WHERE 1 = 1 
		 		<!-- <isNotEmpty property="cls_no">
		 		AND frt.CLS_NO = #cls_no# 다른 Closing#에 assign 되지 않는 데이터 리스트업
		 		</isNotEmpty> -->
		 		AND isnull(frt.CLS_NO,'') = ''
	            <isNotEmpty property="set_fr_dt">
	          		<![CDATA[AND  ( (IB.INBOUND_DT >=#set_fr_dt# AND IB.INBOUND_DT <=#set_to_dt#) 
	          				 OR (P.OUTBOUND_DT >=#set_fr_dt# AND P.OUTBOUND_DT <=#set_to_dt#) ) ]]> 
	            </isNotEmpty>
	            <isNotEmpty property="wh_cd">
	          		AND  frt.wh_cd = #wh_cd# 
	            </isNotEmpty>
	            <isNotEmpty property="ctrt_no">
	          		AND  frt.ctrt_no = #ctrt_no# 
	            </isNotEmpty>
	            <isNotEmpty property="rate_tp_cd">
	            	<isEqual property="rate_tp_cd" compareValue="IAO">
		          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
	            	</isEqual>
	            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
		            	<isEqual property="rate_tp_cd" compareValue="STO">
			          		AND  frt.rate_tp_cd = 'STO' <!-- Storage -->
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="STO">
		            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
		            	</isNotEqual>
	            	</isNotEqual>
	            </isNotEmpty>
			<isNotEmpty property="s_cust_cd">
			AND frt.CUST_CD  = #s_cust_cd#
			</isNotEmpty>
		   AND frt.USE_FLG = 'Y'
		   AND frt.DELT_FLG = 'N'
		 ) T
		 ORDER BY
		 	<isEmpty property="sort_by">
		 	<isEqual property="ord_tp_cd" compareValue="STO">
		 		T.WIB_BK_FRT_SEQ
		 	</isEqual>
		 	<isNotEqual property="ord_tp_cd" compareValue="STO">
			 	WIB_BK_NO, T.WIB_BK_FRT_SEQ
		 	</isNotEqual>
		 	</isEmpty>
		 	<isEqual property="sort_by" compareValue="TNO">
		 	WIB_BK_NO, T.WIB_BK_FRT_SEQ
		 	</isEqual>
		 	<isEqual property="sort_by" compareValue="TDT">
		 	T.TJ_DT
		 	</isEqual>
		 	<isEqual property="sort_by" compareValue="FRT">
		 	T.FRT_CD
		 	</isEqual> 
	</select>
	
	<!-- (Storage)Freight 정보 조회 -->
	<select id="searchWHClsStoDailyUOMFreightInfo" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClsStoDailyUOMFreightInfo */
		SELECT frt.WIB_BK_NO
		      ,frt.TJ_DT
		      ,frt.WH_CD
		      ,frt.CTRT_NO
		      ,frt.WIB_BK_FRT_SEQ
		      ,frt.OFC_CD
		      ,frt.CUST_CD
		      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
		      ,frt.RATE_TP_CD
		      ,frt.FRT_CD
		      ,frt.FRT_NM
		      ,frt.UNIT_CD
		      ,frt.UNIT_CD2
		      ,frt.CURR_CD
		      ,frt.UNIT_PRICE
		      ,frt.QTY
		      ,frt.INV_AMT
		      ,frt.INV_TTL_AMT
		      ,frt.ITEM_CD
		      ,frt.STS_CD
		      ,frt.CLS_NO
		      ,frt.CLS_DT
		      ,frt.INV_SEQ
		      ,frt.SELL_BUY_TP_CD
		      ,frt.FRT_SEQ
		      ,frt.RATING_FLG
		      ,frt.USE_FLG
		      ,frt.DELT_FLG
		      ,frt.RGST_USRID
		      ,frt.RGST_OFC_CD
		      ,frt.RGST_TMS
		      ,frt.MODI_USRID
		      ,frt.MODI_OFC_CD
		      ,frt.MODI_TMS
				,frt.hunit_for_uom
				,frt.hndl_unit
				,frt.inbound
				,frt.outbound
				,frt.bgin_bln
				,frt.end_bln
				,frt.cacl_bln
				,frt.item_nm
				<isNotEqual property="sheet_nm" compareValue="sheet3">
				,#set_fr_dt# set_fr_dt
				,#set_to_dt# set_to_dt
				</isNotEqual>
				<isEqual property="sheet_nm" compareValue="sheet3">
				,frt.set_fr_dt
				,frt.set_to_dt
				</isEqual>
		  FROM TL_CTRT_CUST_FRT frt
		 WHERE 1 = 1 
		 		<isNotEmpty property="cls_no">
		 		AND frt.CLS_NO = #cls_no# <!-- 다른 Closing#에 assign 되지 않는 데이터 리스트업 -->
		 		</isNotEmpty>
<!-- 		 		<isEmpty property="cls_no">
		 		AND isnull(frt.CLS_NO,'') = ''
		 		</isEmpty> -->
	            <isNotEmpty property="set_to_dt">
	            	<isEqual property="sheet_nm" compareValue="sheet1">
		          		AND  frt.TJ_DT = #set_to_dt# 
	            	</isEqual>
	            	<isEqual property="sheet_nm" compareValue="sheet2">
		          		<![CDATA[AND  (frt.TJ_DT >=#set_fr_dt# AND frt.TJ_DT <=#set_to_dt#) ]]> 
	            	</isEqual>
	            	<isEqual property="sheet_nm" compareValue="sheet3">
		          		<![CDATA[AND  (frt.TJ_DT >=#set_fr_dt# AND frt.TJ_DT <=#set_to_dt#) ]]> 
	            	</isEqual>
	            </isNotEmpty>
	            <isNotEmpty property="wh_cd">
	          		AND  frt.wh_cd = #wh_cd# 
	            </isNotEmpty>
	            <isNotEmpty property="ctrt_no">
	          		AND  frt.ctrt_no = #ctrt_no# 
	            </isNotEmpty>
	            <isNotEmpty property="rate_tp_cd">
	            	<isEqual property="rate_tp_cd" compareValue="IAO">
		          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
	            	</isEqual>
	            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
		            	<isEqual property="rate_tp_cd" compareValue="STO">
			          		AND  frt.rate_tp_cd = 'STO' <!-- Storage -->
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="STO">
		            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
		            	</isNotEqual>
	            	</isNotEqual>
	            </isNotEmpty>
			<isNotEmpty property="s_cust_cd">
			AND frt.CUST_CD  = #s_cust_cd#
			</isNotEmpty>
		   AND frt.USE_FLG = 'Y'
		   AND frt.SHEET_NM = #sheet_nm#
		   AND frt.DELT_FLG = 'N'
		 ORDER BY
		 	<!-- frt.ITEM_CD, frt.TJ_DT, frt.WIB_BK_FRT_SEQ -->
		 	frt.WIB_BK_FRT_SEQ
	</select>
	
	<!-- custom별 Freight 정보 조회 -->
<select id="searchFreightListFrCustNo" resultClass="com.clt.apps.fis.wms.rate.dto.Grd02RTDetailListVO">
		/* wms.WHClosing.searchFreightListFrCustNo */
		SELECT   
				frt.CLS_NO,
		        frt.CUST_CD,
		        frt.INV_SEQ,
		        MIN(frt.RATE_TP_CD) RATE_TP_CD,
		        SUM(frt.INV_AMT) INV_TTL_AMT   
		  FROM TL_CTRT_CUST_FRT frt
		  	   LEFT OUTER JOIN TL_WH_IB IB
		  	   ON frt.WIB_BK_NO = IB.WIB_BK_NO    
		  	   LEFT OUTER JOIN TL_WH_OB OB
		  	   ON frt.WOB_BK_NO = OB.WOB_BK_NO     
		  	   LEFT OUTER JOIN (
		  	   					SELECT DISTINCT OUTBOUND_DT,WOB_BK_NO FROM TL_WH_LOAD_PLAN_ITEM PI 								
		  						LEFT OUTER JOIN TL_WH_LOAD_PLAN P
								ON P.LP_NO = PI.LP_NO AND P.LP_STS_CD = 'L'
								WHERE 1=1
								<isNotEmpty property="set_fr_dt">
					          		<![CDATA[AND P.OUTBOUND_DT >=#set_fr_dt# AND P.OUTBOUND_DT <=#set_to_dt# ]]> 
					            </isNotEmpty>
								) P ON P.WOB_BK_NO = OB.WOB_BK_NO
		 WHERE 1 = 1 
		 		<isNotEmpty property="cls_no">
		 		AND frt.CLS_NO = #cls_no# 
		 		</isNotEmpty>
		 		<isEmpty property="cls_no">
		 		AND isnull(frt.CLS_NO,'') = ''
		 		</isEmpty>
	            <isNotEmpty property="set_fr_dt">
	          		<![CDATA[AND  ( (IB.INBOUND_DT >=#set_fr_dt# AND IB.INBOUND_DT <=#set_to_dt#) 
	          				 OR (P.OUTBOUND_DT >=#set_fr_dt# AND P.OUTBOUND_DT <=#set_to_dt#) ) ]]> 
	            </isNotEmpty>
	            <isNotEmpty property="wh_cd">
	          		AND  frt.wh_cd = #wh_cd# 
	            </isNotEmpty>
	            <isNotEmpty property="ctrt_no">
	          		AND  frt.ctrt_no = #ctrt_no# 
	            </isNotEmpty>
	            <isNotEmpty property="rate_tp_cd">
	            	<isEqual property="rate_tp_cd" compareValue="IAO">
		          		AND  frt.rate_tp_cd IN ('IN','OUT','IAO')
	            	</isEqual>
	            	<isNotEqual property="rate_tp_cd" compareValue="IAO">
		            	<isEqual property="rate_tp_cd" compareValue="STO">
			          		AND  frt.rate_tp_cd = 'STO' <!-- Storage -->
		            	</isEqual>
		            	<isNotEqual property="rate_tp_cd" compareValue="STO">
		            		AND  frt.rate_tp_cd IN (#rate_tp_cd# ,'IAO') 
		            	</isNotEqual>
	            	</isNotEqual>
	            </isNotEmpty>
			<isNotEmpty property="s_cust_cd">
			AND frt.CUST_CD  = #s_cust_cd#
			</isNotEmpty>
		   AND frt.USE_FLG = 'Y'
		   AND frt.DELT_FLG = 'N'
	    GROUP BY
	        frt.CLS_NO,
	        frt.CUST_CD,
	        frt.INV_SEQ   
	</select>
	
	<!-- Freight 정보 조회 -->
	<select id="searchWHClosingFreightList2" resultClass="com.clt.apps.fis.wms.rate.dto.Grd02RTDetailListVO">
		/* wms.WHClosing.searchWHClosingFreightList2 */
		SELECT DISTINCT T.*
						<!-- ,case when (select CUST_ORD_NO from TL_WH_IB where WIB_BK_NO = T.BK_NO) is null then (select CUST_ORD_NO from TL_WH_OB where WOB_BK_NO = T.BK_NO)
						else (select CUST_ORD_NO from TL_WH_IB where WIB_BK_NO = T.BK_NO)
						end WIB_BK_NO -->
		FROM
			(SELECT 
			      CASE WHEN ISNULL(frt.WIB_BK_NO,'') = '' THEN frt.WOB_BK_NO
			            ELSE frt.WIB_BK_NO END WIB_BK_NO
<!-- 			      ,CASE WHEN ISNULL(IB.INBOUND_DT,'') = '' THEN P.OUTBOUND_DT
			            ELSE IB.INBOUND_DT END TJ_DT Settlement Period -->
				  ,frt.CUST_ORD_NO
		          ,CASE 
		                WHEN ISNULL(IB.INBOUND_DT,'') = '' 
						THEN CASE WHEN ISNULL(P.OUTBOUND_DT,'') = '' THEN frt.CLS_DT
							 ELSE P.OUTBOUND_DT
							 END
		                ELSE IB.INBOUND_DT 
		            END TJ_DT
			      ,CASE WHEN ISNULL(IB.ORD_TP_CD,'') = '' THEN OB.ORD_TP_CD
			       ELSE IB.ORD_TP_CD END ORD_TP_CD
			      ,frt.WH_CD
			      ,frt.CTRT_NO
			      ,frt.WIB_BK_FRT_SEQ
			      ,frt.OFC_CD
			      ,frt.CUST_CD
			      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
			      ,frt.RATE_TP_CD
			      ,frt.FRT_CD
			      ,frt.FRT_NM
			      ,frt.UNIT_CD
			      ,frt.UNIT_CD2
			      ,frt.CURR_CD
			      ,frt.UNIT_PRICE
			      ,frt.QTY
			      ,frt.INV_AMT
			      ,frt.INV_TTL_AMT
			      ,frt.ITEM_CD
			      ,frt.STS_CD
			      ,frt.CLS_NO
			      ,frt.CLS_DT
			      ,frt.INV_SEQ
			      ,frt.SELL_BUY_TP_CD
			      ,frt.FRT_SEQ
			      ,frt.RATING_FLG
			      ,frt.USE_FLG
			      ,frt.DELT_FLG
			      ,frt.RGST_USRID
			      ,frt.RGST_OFC_CD
			      ,frt.RGST_TMS
			      ,frt.MODI_USRID
			      ,frt.MODI_OFC_CD
			      ,frt.MODI_TMS
			  FROM TL_CTRT_CUST_FRT frt
			  	   LEFT OUTER JOIN TL_WH_IB IB
			  	   ON frt.WIB_BK_NO = IB.WIB_BK_NO  
			  	   LEFT OUTER JOIN TL_WH_OB OB
			  	   ON frt.WOB_BK_NO = OB.WOB_BK_NO     
			  	   LEFT OUTER JOIN TL_WH_LOAD_PLAN_ITEM PI
			  	   ON OB.WOB_BK_NO = PI.WOB_BK_NO
			  	   LEFT OUTER JOIN TL_WH_LOAD_PLAN P
				   ON P.LP_NO = PI.LP_NO
				   AND P.LP_STS_CD = 'L'   
			 WHERE 1 = 1 
			 		<isNotEmpty property="cls_no">
			 		AND frt.CLS_NO = #cls_no# 
			 		</isNotEmpty>
			 		<isNotEmpty property="s_cust_cd">
			 		AND frt.CUST_CD = #s_cust_cd# 
			 		</isNotEmpty>
			   AND frt.USE_FLG = 'Y'
			   AND frt.DELT_FLG = 'N'
			 ) T
		 ORDER BY
		 	<isEmpty property="sort_by">
		 	<isEqual property="ord_tp_cd" compareValue="STO">
		 		T.WIB_BK_FRT_SEQ
		 	</isEqual>
		 	<isNotEqual property="ord_tp_cd" compareValue="STO">
		 		T.CUST_ORD_NO
		 		<!-- BluePrint #2245:[BINEX WMS] IN & OUT CHARGE DETAIL IMPROVEMENT -->
			 	<!-- WIB_BK_NO, T.WIB_BK_FRT_SEQ -->
		 	</isNotEqual>
		 	</isEmpty>
		 	<isEqual property="sort_by" compareValue="TNO">
		 	T.CUST_ORD_NO
		 	<!-- BluePrint #2245:[BINEX WMS] IN & OUT CHARGE DETAIL IMPROVEMENT -->
		 	<!-- WIB_BK_NO, T.WIB_BK_FRT_SEQ -->
		 	</isEqual>
		 	<isEqual property="sort_by" compareValue="TDT">
		 	T.TJ_DT
		 	</isEqual>
		 	<isEqual property="sort_by" compareValue="FRT">
		 	T.FRT_CD
		 	</isEqual> 
	</select>
	
	<!-- Invoice Freight 정보 조회(Group by) -->
	<select id="searchWHClosingFreightList3" resultClass="com.clt.apps.fis.wms.rate.dto.Grd02RTDetailListVO">
		/* wms.WHClosing.searchWHClosingFreightList3 */
		SELECT
            frt.CUST_CD,
            dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM,
            frt.FRT_CD,
            frt.FRT_NM,
            frt.UNIT_CD,
            MAX(frt.UNIT_CD2) UNIT_CD2,
            frt.CURR_CD,
            frt.UNIT_PRICE,
            
            <!--#5534 [Binex] WMS Invoice Amount Wrong - WMS 와 Accounting 모듈간 Amout 차이가 생기는 원인을 Qty 조정으로 보정  -->
            <!-- SUM(frt.QTY) QTY, -->
            SUM(FRT.INV_aMT)/FRT.UNIT_PRICE QTY,
            
            SUM(frt.INV_AMT) INV_AMT        
        FROM
            TL_CTRT_CUST_FRT frt          
        WHERE
            1 = 1               
            AND frt.CLS_NO = #cls_no#                      
            AND frt.USE_FLG = 'Y'       
            AND frt.DELT_FLG = 'N'     
		GROUP BY
			frt.CUST_CD,
			frt.FRT_CD,
			frt.FRT_NM,
			frt.UNIT_CD,
			frt.CURR_CD,
			frt.UNIT_PRICE
	</select>
	
	<!-- Invoice Freight 정보 조회(Group by) -->
	<select id="searchWHClosingInvTtlAmt" resultClass="String">
		/* wms.WHClosing.searchWHClosingInvTtlAmt */
		SELECT SUM(A.INV_AMT2) INV_TTL_AMT
		FROM
		(
			SELECT
				frt.CUST_CD,
				dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM,
				frt.FRT_CD,
				frt.FRT_NM,
				frt.UNIT_CD,
				MAX(frt.UNIT_CD2) UNIT_CD2,
				frt.CURR_CD,
				frt.UNIT_PRICE,
				SUM(frt.QTY) QTY,
				SUM(frt.INV_AMT) INV_AMT,        
				SUM(frt.QTY*frt.UNIT_PRICE) INV_AMT2
			FROM
				TL_CTRT_CUST_FRT frt          
			WHERE
				1 = 1               
				AND frt.CLS_NO = #cls_no#                 
				AND frt.USE_FLG = 'Y'       
				AND frt.DELT_FLG = 'N'     
			GROUP BY
				frt.CUST_CD,
				frt.FRT_CD,
				frt.FRT_NM,
				frt.UNIT_CD,
				frt.CURR_CD,
				frt.UNIT_PRICE
			) A
	</select>
	
	<!-- STORAGE FREIGHT INFO INSERT -->
	<insert id="insertWHInMgmForFreightStoChg">
	/*wms.WHClosing.insertWHInMgmForFreightStoChg*/
	INSERT INTO TL_CTRT_CUST_FRT
           (WIB_BK_NO
           ,WH_CD
           ,CTRT_NO
           ,WIB_BK_FRT_SEQ
           ,OFC_CD
           ,CUST_CD
           ,RATE_TP_CD
           ,FRT_CD
           ,FRT_NM
           ,UNIT_CD
           ,UNIT_CD2
           ,CURR_CD
           ,UNIT_PRICE
           ,QTY
           ,INV_AMT
           ,INV_TTL_AMT
           ,ITEM_CD
           ,STS_CD
           ,CLS_NO
           ,CLS_DT
           ,INV_SEQ
           ,SELL_BUY_TP_CD
           ,FRT_SEQ
           ,RATING_FLG
           ,USE_FLG
           ,DELT_FLG
			,TJ_DT
			,HUNIT_FOR_UOM
			,HNDL_UNIT
			,INBOUND
			,OUTBOUND
			,BGIN_BLN
			,END_BLN
			,CACL_BLN
			,ITEM_NM
			,SHEET_NM
			,SET_FR_DT
			,SET_TO_DT
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           ,MODI_TMS)
     VALUES
           (#wib_bk_no#
           ,#wh_cd#
           ,#ctrt_no#
           ,(SELECT isnull(MAX(WIB_BK_FRT_SEQ),0) + 1 
           	 FROM TL_CTRT_CUST_FRT 
		     WHERE RATE_TP_CD            = 'STO'
		       AND WH_CD             	 = #wh_cd#
		       AND CTRT_NO           	 = #ctrt_no# 
		       AND CLS_NO 				 = #cls_no# 
		       )
           ,#ofc_cd#
           ,#cust_cd#
           ,#rate_tp_cd#
           ,#frt_cd#
           ,#frt_nm#
           ,#unit_cd#
           ,#unit_cd2#
           ,#curr_cd#
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
           ,#item_cd#
           ,#sts_cd#
           ,#cls_no#
           ,#cls_dt#
           ,#inv_seq#
           ,#sell_buy_tp_cd#
           ,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
           ,#rating_flg#
           ,'Y'
           ,'N'
			,#tj_dt#
			,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#hunit_for_uom#,',','') AS FLOAT)))
			,#hndl_unit#
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#inbound#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#outbound#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#bgin_bln#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#end_bln#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#cacl_bln#,',','') AS FLOAT)))
			,#item_nm#
			,#sheet_nm#
			,#set_fr_dt#
			,#set_to_dt#
           ,#rgst_usrid#
           ,#rgst_ofc_cd#
           ,GETDATE()
           ,#modi_usrid#
           ,#modi_ofc_cd#
           ,GETUTCDATE()
           )
    </insert>
    <!-- STORAGE FREIGHT INFO MODIFY -->
	<update id="modifyWHInMgmForFreightUpStoChg">
		/*wms.WHClosing.modifyWHInMgmForFreightUpStoChg*/
		UPDATE TL_CTRT_CUST_FRT
		   SET wib_bk_no = #wib_bk_no#
		      ,wh_cd = #wh_cd#
		      ,ctrt_no = #ctrt_no#
		      ,wib_bk_frt_seq = (SELECT CONVERT(NUMERIC(4, 0), CAST(REPLACE(#wib_bk_frt_seq#,',','') AS FLOAT)))
		      ,ofc_cd = #ofc_cd#
		      ,cust_cd = #cust_cd#
		      ,rate_tp_cd = #rate_tp_cd#
		      ,frt_cd = #frt_cd#
		      ,frt_nm = #frt_nm#
		      ,unit_cd = #unit_cd#
		      ,unit_cd2 = #unit_cd2#
		      ,curr_cd = #curr_cd#
		      ,unit_price = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
		      ,qty = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
		      ,inv_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
		      ,inv_ttl_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
		      ,item_cd = #item_cd#
		      ,sts_cd = #sts_cd#
		      ,cls_no = #cls_no#
		      ,cls_dt = #cls_dt#
		      ,inv_seq = #inv_seq#
		      ,sell_buy_tp_cd = #sell_buy_tp_cd#
		      ,frt_seq = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
		      ,rating_flg = #rating_flg#
		      ,use_flg = 'Y'
		      ,delt_flg = 'N'
				,tj_dt = #tj_dt#
				,hunit_for_uom = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#hunit_for_uom#,',','') AS FLOAT)))
				,hndl_unit = #hndl_unit#
				,inbound = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#inbound#,',','') AS FLOAT)))
				,outbound = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#outbound#,',','') AS FLOAT)))
				,bgin_bln = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#bgin_bln#,',','') AS FLOAT)))
				,end_bln = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#end_bln#,',','') AS FLOAT)))
				,cacl_bln = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#cacl_bln#,',','') AS FLOAT)))
				,item_nm = #item_nm#
		      ,rgst_usrid = #rgst_usrid#
		      ,rgst_ofc_cd = #rgst_ofc_cd#
		      ,rgst_tms = GETDATE()
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO             	 = #cls_no#
	       AND WH_CD             	 = #wh_cd#
	       AND CTRT_NO           	 = #ctrt_no#
	       <isNotEmpty property="wib_bk_frt_seq">
		       AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	       </isNotEmpty>
	</update>
	<update id="modifyWHInMgmForFreightDelStoChg">
		/*wms.WHClosing.modifyWHInMgmForFreightDelStoChg*/
		UPDATE TL_CTRT_CUST_FRT
		   SET DELT_FLG          	 = 'Y'
		     , USE_FLG          	 = 'N'
		     , MODI_USRID            = #modi_usrid#
	         , MODI_OFC_CD           = #modi_ofc_cd#
	         , MODI_TMS           	 = GETUTCDATE()
	     WHERE CLS_NO             	 = #cls_no#
	       AND WH_CD             	 = #wh_cd#
	       AND CTRT_NO           	 = #ctrt_no#
	       <isNotEmpty property="wib_bk_frt_seq">
		       AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	       </isNotEmpty>
	</update>
	
	<!-- FRT_SEQ UPDATE -->
	<update id="updateFreightSeqInfo">
		/*wms.WHClosing.updateFreightSeqInfo*/
		UPDATE TL_CTRT_CUST_FRT 
		   SET FRT_SEQ = #frt_seq#
		 WHERE CLS_NO = #cls_no#  
		   AND CUST_CD = #cust_cd#
		   AND FRT_CD = #frt_cd#
		   AND FRT_NM = #frt_nm#
		   AND UNIT_CD = #unit_cd#
		   AND CURR_CD = #curr_cd#
		   AND UNIT_PRICE = #unit_price# 
           AND USE_FLG = 'Y'       
           AND DELT_FLG = 'N'   
	</update>
	
	<select id="checkSettlementDate" parameterClass="HashMap" resultClass="String">
       /*wms.WHClosing.checkSettlementDate*/
       SELECT 
       		convert(char(10),convert(date,A.SET_TO_DT),110) SET_TO_DT
       FROM
       	(
		SELECT MIN(frt.SET_FR_DT) SET_FR_DT, MAX(frt.SET_TO_DT) SET_TO_DT, MAX(hrd.CLS_NO) CLS_NO
		FROM 
			TL_WH_CLS_HRD hrd,
			TL_CTRT_CUST_FRT frt
		WHERE hrd.CLS_NO = frt.CLS_NO
		AND ISNULL(hrd.STS_CD,'') != ''
		AND hrd.CTRT_NO = #ctrt_no#
		AND hrd.WH_CD = #wh_cd#
		AND hrd.USE_FLG = 'Y'           
		AND hrd.DELT_FLG = 'N'                                                                    
		AND hrd.RATE_TP_CD = 'STO'  
		<isNotEmpty property="sheet_nm">  
		AND frt.SHEET_NM = #sheet_nm# <!-- sheet1 : ENDING BALANCE, sheet2 : Daily In & Out, sheet3 : Fixed Rate, sheet4 : Daily Total Volume -->
		</isNotEmpty>
		AND frt.USE_FLG = 'Y'           
		AND frt.DELT_FLG = 'N' 
		) A
	   WHERE 1=1
	   	 <isEqual property="sheet_nm" compareValue="sheet1">
		 AND convert(char(10),A.SET_TO_DT,102) >= convert(char(10),#set_fr_dt#,102) 
		 </isEqual>
		 <isEqual property="sheet_nm" compareValue="sheet2">
		 AND convert(char(10),A.SET_TO_DT,102) >= convert(char(10),#set_fr_dt#,102)
		 AND convert(char(10),A.SET_FR_DT,102) <![CDATA[ <= ]]> convert(char(10),#set_to_dt#,102) 
		 </isEqual>
	   	 <isEqual property="sheet_nm" compareValue="sheet3">
		 AND convert(char(10),A.SET_TO_DT,102) >= convert(char(10),#set_fr_dt#,102) 
		 </isEqual>
	   	 <isEqual property="sheet_nm" compareValue="sheet4">
		 AND convert(char(10),A.SET_TO_DT,102) >= convert(char(10),#set_fr_dt#,102) 
		 </isEqual>
		 <isNotEmpty property="cls_no">
		 AND ISNULL(#cls_no#,'') = ''
		 </isNotEmpty>
    </select>
    
	<select id="checkSettlementDateInAndOut" parameterClass="HashMap" resultClass="String">
       /*wms.WHClosing.checkSettlementDateInAndOut*/
       SELECT 
       		convert(char(10),convert(date,A.SET_TO_DT),110) SET_TO_DT
       FROM
       	(
		SELECT MIN(hrd.SET_FR_DT) SET_FR_DT, MAX(hrd.SET_TO_DT) SET_TO_DT, MAX(hrd.CLS_NO) CLS_NO
		FROM 
			TL_WH_CLS_HRD hrd,
			TL_CTRT_CUST_FRT frt
		WHERE hrd.CLS_NO = frt.CLS_NO
		AND ISNULL(hrd.STS_CD,'') != ''
		AND hrd.CTRT_NO = #ctrt_no#
		AND hrd.WH_CD = #wh_cd#
		AND hrd.USE_FLG = 'Y'           
		AND hrd.DELT_FLG = 'N'                                                                    
		AND frt.RATE_TP_CD IN ('IAO','IN','OUT') 
		AND frt.USE_FLG = 'Y'           
		AND frt.DELT_FLG = 'N' 
		) A
	   WHERE 1=1
	   	 AND convert(char(10),A.SET_TO_DT,102) >= convert(char(10),#set_fr_dt#,102)
		 <isNotEmpty property="cls_no">
		 AND ISNULL(#cls_no#,'') = ''
		 </isNotEmpty>
    </select>
    
    <!-- #1084 [WMS4.0]File# assign 로직 변경 - Filling No 중복 체크 -->
    <select id="checkDupFilingNo" parameterClass="java.util.HashMap" resultClass="String">
		/* wms.WHClosing.checkDupFilingNo */
		SELECT TOP 1 REF_NO 
		from TL_WH_CLS_HRD 
		WHERE 1=1
		AND REF_NO = #f_ref_no# 
		AND CLS_NO != #cls_no# 
<!-- 		AND WH_CD = #wh_cd# 
		AND CTRT_NO = #ctrt_no# -->
		AND USE_FLG = 'Y'
	</select>
	
    <!-- #1084 [WMS4.0]File# assign 로직 변경 - Get Closing Status Code -->
    <select id="getClosingStsCd" parameterClass="java.util.HashMap" resultClass="String">
		/* wms.WHClosing.getClosingStsCd */
		SELECT TOP 1 STS_CD 
		FROM TL_WH_CLS_HRD 
		WHERE 1=1
		AND CLS_NO = #cls_no# 
		AND WH_CD = #wh_cd# 
		AND CTRT_NO = #ctrt_no#
		<isNotEmpty property="s_cust_cd">
		AND CUST_CD = #s_cust_cd#
		</isNotEmpty>
		AND USE_FLG = 'Y'
	</select>

	<!-- #1069 Closing other entry  Start -->
	<update id="modifyTlWhClsOtherHrd">
		/*WHClosing.modifyTlWhClsOtherHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET CUST_CD = #cust_cd#
		      ,SORT_BY = #sort_by#
		      ,CTRT_NO = #ctrt_no#
		      ,WH_CD = #wh_cd#
		      ,OFC_CD = #ofc_cd#
		      ,WM_DOC_SEQ = #wm_doc_seq#
		      ,INV_TTL_AMT = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
		      ,CURR_CD = #curr_cd#
		      ,STS_CD = #sts_cd#
		      ,CLS_DT = #cls_dt#
		      ,SET_FR_DT = #set_fr_dt#
		      ,SET_TO_DT = #set_to_dt#
		      ,F_REMARK = #f_remark#
		      ,REF_NO = #f_ref_no#
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		      ,MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
		      ,SELL_BUY_TP_CD = #sell_buy_tp_cd#
		 WHERE CLS_NO = #cls_no# 
	</update>

	<!-- Header 정보 조회 -->
	<select id="searchWHClosingOtherHeaderList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClosingOtherHeaderList */
		SELECT top 1
			   hrd.CLS_NO
			  ,hrd.CTRT_NO 
			  ,dbo.TL_GET_CTRT_NM(hrd.CTRT_NO) AS CTRT_NM  
		      ,hrd.CUST_CD
		      ,dbo.TL_GET_CUST_NM(hrd.CUST_CD) AS CUST_NM
		      ,hrd.SELL_BUY_TP_CD
		      ,hrd.CURR_CD
		      ,hrd.INV_TTL_AMT
		      ,hrd.STS_CD
		      ,case when hrd.STS_CD = 'CON' then 'Confirmed'
		      		when hrd.STS_CD = 'SAV' then 'Saved'
		      		when hrd.STS_CD = 'INV' then 'Invoiced'
		       end AS STS_NM
		      ,case when  ISNULL(hrd.CLS_DT,'') = '' then '' else ISNULL(CONVERT(varchar(10),convert(DATETIME, hrd.CLS_DT),110),'') end CLS_DT
		      ,hrd.REF_NO
		      ,hrd.WH_CD
		      ,hrd.F_REMARK
		      ,hrd.USE_FLG
		      ,hrd.DELT_FLG
		      ,hrd.WM_DOC_SEQ
		      ,hrd.OFC_CD
		  FROM TL_WH_CLS_HRD hrd
 		 WHERE 1 = 1 
	       AND hrd.CLS_NO = #cls_no# 
		   AND hrd.RATE_TP_CD  = #rate_tp_cd#
		   AND hrd.USE_FLG = 'Y'
		   AND hrd.DELT_FLG = 'N'
	</select>
	
	<!-- #1069 Closing other entry   Freight 정보 조회  -->
	<select id="searchWHClosingOtherFreightList" resultClass="com.clt.apps.fis.wms.whclosing.dto.ClosingInoutMgmtVO">
		/* wms.WHClosing.searchWHClosingOtherFreightList */
			SELECT 			      
			   CASE WHEN ISNULL(frt.WIB_BK_NO,'') = '' THEN frt.WOB_BK_NO
			   ELSE frt.WIB_BK_NO END WIB_BK_NO
			  ,frt.TJ_DT 
		      ,frt.WH_CD
		      ,frt.CTRT_NO
		      ,frt.WIB_BK_FRT_SEQ
		      ,frt.OFC_CD
		      ,frt.CUST_CD
		      ,dbo.TL_GET_CUST_NM(frt.CUST_CD) AS CUST_NM
		      ,frt.RATE_TP_CD
		      ,frt.FRT_CD
		      ,frt.FRT_NM
		      ,frt.UNIT_CD
		      ,frt.UNIT_CD2
		      ,frt.CURR_CD
		      ,frt.UNIT_PRICE
		      ,frt.QTY
		      ,frt.INV_AMT
		      ,frt.INV_TTL_AMT
		      ,frt.ITEM_CD
		      ,frt.STS_CD
		      ,frt.CLS_NO
		      ,frt.CLS_DT
		      ,frt.INV_SEQ
		      ,frt.SELL_BUY_TP_CD
		      ,frt.FRT_SEQ
		      ,frt.RATING_FLG
		      ,frt.USE_FLG
		      ,frt.DELT_FLG
		      ,frt.RGST_USRID
		      ,frt.RGST_OFC_CD
		      ,frt.RGST_TMS
		      ,frt.MODI_USRID
		      ,frt.MODI_OFC_CD
		      ,frt.MODI_TMS
		  FROM TL_CTRT_CUST_FRT frt
		 WHERE 1 = 1 
		   AND frt.CLS_NO  = #cls_no#
		   AND frt.RATE_TP_CD = #rate_tp_cd#
		   AND frt.USE_FLG = 'Y'
		   AND frt.DELT_FLG = 'N'
	</select>

	<!-- #1069 Closing other entry INSERT -->
	<insert id="insertWHOtherMgmForFreight">
	/* wms.WHClosing.insertWHOtherMgmForFreight */
	INSERT INTO TL_CTRT_CUST_FRT
           (WIB_BK_NO
           ,WH_CD
           ,CTRT_NO
           ,WIB_BK_FRT_SEQ
           ,OFC_CD
           ,CUST_CD
           ,RATE_TP_CD
           ,FRT_CD
           ,FRT_NM
           ,UNIT_CD
           ,UNIT_CD2
           ,CURR_CD
           ,UNIT_PRICE
           ,QTY
           ,INV_AMT
           ,INV_TTL_AMT
           ,ITEM_CD
           ,STS_CD
           ,CLS_NO
           ,CLS_DT
           ,INV_SEQ
           ,SELL_BUY_TP_CD
           ,FRT_SEQ
           ,RATING_FLG
           ,USE_FLG
           ,DELT_FLG
			,TJ_DT
			,HUNIT_FOR_UOM
			,HNDL_UNIT
			,INBOUND
			,OUTBOUND
			,BGIN_BLN
			,END_BLN
			,CACL_BLN
			,ITEM_NM
			,SHEET_NM
			,SET_FR_DT
			,SET_TO_DT
           ,RGST_USRID
           ,RGST_OFC_CD
           ,RGST_TMS
           ,MODI_USRID
           ,MODI_OFC_CD
           ,MODI_TMS)
     VALUES
           (#wib_bk_no#
           ,#wh_cd#
           ,#ctrt_no#
           ,(SELECT isnull(MAX(WIB_BK_FRT_SEQ),0) + 1 
           	 FROM TL_CTRT_CUST_FRT 
		     WHERE RATE_TP_CD            = 'OTH'
		       AND CLS_NO 				 = #cls_no# 
		       )
           ,#ofc_cd#
           ,#cust_cd#
           ,#rate_tp_cd#
           ,#frt_cd#
           ,#frt_nm#
           ,#unit_cd#
           ,#unit_cd2#
           ,#curr_cd#
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
           ,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
           ,#item_cd#
           ,#sts_cd#
           ,#cls_no#
           ,#cls_dt#
           ,#inv_seq#
           ,#sell_buy_tp_cd#
           ,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
           ,#rating_flg#
           ,'Y'
           ,'N'
			,#tj_dt#
			,(SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#hunit_for_uom#,',','') AS FLOAT)))
			,#hndl_unit#
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#inbound#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#outbound#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#bgin_bln#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#end_bln#,',','') AS FLOAT)))
			,(SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#cacl_bln#,',','') AS FLOAT)))
			,#item_nm#
			,#sheet_nm#
			,#set_fr_dt#
			,#set_to_dt#
           ,#rgst_usrid#
           ,#rgst_ofc_cd#
           ,GETDATE()
           ,#modi_usrid#
           ,#modi_ofc_cd#
           ,GETUTCDATE()
           )
    </insert>
	
	<update id="deleteWHOtherMgmForFreight">
		/*wms.WHClosing.deleteWHOtherMgmForFreight*/
		UPDATE TL_CTRT_CUST_FRT
		   SET DELT_FLG          	 = 'Y'
		     , USE_FLG          	 = 'N'
		     , MODI_USRID            = #modi_usrid#
	         , MODI_OFC_CD           = #modi_ofc_cd#
	         , MODI_TMS           	 = GETUTCDATE()
	     WHERE CLS_NO             	 = #cls_no#
		   AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	</update>	
	
    <!-- STORAGE FREIGHT INFO MODIFY -->
	<update id="modifyWHOtherMgmForFreight">
		/*wms.WHClosing.modifyWHOtherMgmForFreight*/
		UPDATE TL_CTRT_CUST_FRT
		   SET wib_bk_no = #wib_bk_no#
		      ,wh_cd = #wh_cd#
		      ,ctrt_no = #ctrt_no#
		      ,ofc_cd = #ofc_cd#
		      ,cust_cd = #cust_cd#
		      ,rate_tp_cd = #rate_tp_cd#
		      ,frt_cd = #frt_cd#
		      ,frt_nm = #frt_nm#
		      ,unit_cd = #unit_cd#
		      ,unit_cd2 = #unit_cd2#
		      ,curr_cd = #curr_cd#
		      ,unit_price = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#unit_price#,',','') AS FLOAT)))
		      ,qty = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#qty#,',','') AS FLOAT)))
		      ,inv_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_amt#,',','') AS FLOAT)))
		      ,inv_ttl_amt = (SELECT CONVERT(NUMERIC(20, 8), CAST(REPLACE(#inv_ttl_amt#,',','') AS FLOAT)))
		      ,item_cd = #item_cd#
		      ,sts_cd = #sts_cd#
		      ,cls_no = #cls_no#
		      ,cls_dt = #cls_dt#
		      ,inv_seq = #inv_seq#
		      ,sell_buy_tp_cd = #sell_buy_tp_cd#
		      ,frt_seq = (SELECT CONVERT(NUMERIC(12, 0), CAST(REPLACE(#frt_seq#,',','') AS FLOAT)))
		      ,rating_flg = #rating_flg#
		      ,use_flg = 'Y'
		      ,delt_flg = 'N'
			  ,tj_dt = #tj_dt#
		      ,rgst_tms = GETDATE()
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO             	 = #cls_no#
	       AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	</update>	
	
    <select id="getClosingOtherStsCd" parameterClass="java.util.HashMap" resultClass="String">
		/* wms.WHClosing.getClosingOtherStsCd */
		SELECT TOP 1 STS_CD 
		FROM TL_WH_CLS_HRD 
		WHERE 1=1
		AND CLS_NO = #cls_no# 
		AND USE_FLG = 'Y'
	</select>	
	
	<update id="modifyCfCancelOtherWhClsHrd">
		/*WHClosing.modifyCfCancelTlWhClsHrd*/
		UPDATE TL_WH_CLS_HRD
		   SET WM_DOC_SEQ = #wm_doc_seq#
		      ,STS_CD = #sts_cd#
		      ,F_REMARK = #f_remark#
		      ,MODI_USRID = #modi_usrid#
		      ,MODI_OFC_CD = #modi_ofc_cd#
		      ,MODI_TMS = GETUTCDATE()
		      ,MODI_LOC_DT = dbo.TL_GET_TM_ZONE_DATE_DT(#wh_cd#)
		 WHERE CLS_NO = #cls_no#
	</update>	
	
	<update id="modifyWHOtherMgmForFreightSts">
		/*wms.WHClosing.modifyWHOtherMgmForFreightSts*/
		UPDATE TL_CTRT_CUST_FRT
		   SET 
		      sts_cd = #sts_cd#
		      ,frt_seq = #frt_seq#
		      ,modi_usrid = #modi_usrid#
		      ,modi_ofc_cd = #modi_ofc_cd#
		      ,modi_tms = GETUTCDATE()
	     WHERE CLS_NO     = #cls_no#
		   AND WIB_BK_FRT_SEQ        = #wib_bk_frt_seq#
	</update>		
	
	<select id="getWmsCntrOfc" parameterClass="HashMap" resultClass="HashMap">
		/*wms.WHClosing.getWmsCntrOfc*/
	   SELECT
	        WH_CD,
	        WH_NM,
	        isnull(WH_OFC_CD, '') AS WH_OFC_CD,
	        isnull((select a.trf_cur_cd from tb_ofc a where a.ofc_cd =  WH_OFC_CD and a.delt_flg = 'N'),'') AS WH_OFC_CURR
	    FROM
	        TL_WH    
	    WHERE
	        1=1     
	        AND WH_CD = UPPER( #wh_cd#)    
	
	</select>
	<!-- #1069 Closing other entry  End -->
	<!-- Freight 목록을 삭제함   -->
	<update id="deleteFRT" parameterClass="com.clt.apps.fis.see.frt.freight.dto.FrtVO">
	/*  WmsWHClosingSQL.xml > deleteFRT */
		UPDATE  tb_frt
		   SET  delt_flg = 'Y',                 modi_usrid = #proc_usrid#, 
		        modi_ofc_cd = #proc_ofccd#,     modi_tms = GETUTCDATE(), inv_seq = null
		 WHERE  frt_seq = #frt_seq# AND WMS_SEQ = #wms_seq#
	</update>
	
	<!-- #5142 [Binex Tor] Inbound C.Cancel error -->
	<select id="getOrderNo" parameterClass="HashMap" resultClass="HashMap">
		/*wms.WHClosing.getOrderNo*/
		SELECT 
			TOP 1
			T.*,
			isnull(frt.CUST_CD,'') as CUST_CD,
			isnull(dbo.TL_GET_CUST_NM(frt.CUST_CD),'') AS CUST_NM,
			frt.STS_CD    
	  FROM (
	        SELECT IB.WH_CD
	             , dbo.TL_GET_LOC_NM(IB.WH_CD) AS WH_NM
	             , IB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(IB.CTRT_NO) AS CTRT_NM
	             , MAX(IB.BK_DATE) AS BK_DATE
	             , RCV.INBOUND_DT AS COMP_DATE
	             , IB.WIB_BK_NO AS BK_NO
	             ,  MAX(IB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'IN' AS BK_CLS_CD
	             , 'Inbound' AS BK_CLS_NM
	             ,  MAX(IB.ORD_TP_CD) AS ORD_TP_CD
	             ,  MAX(IB.LOAD_TP_CD) AS LOAD_TP_CD
	             ,  MAX(IB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_IB IB
	             , TL_WH_RCV RCV
	         WHERE IB.WIB_BK_NO = RCV.WIB_BK_NO
	           AND IB.IN_STS_CD IS NOT NULL           
	           AND IB.WH_CD = #wh_cd#
	           AND IB.CTRT_NO = #ctrt_no#
	           AND IB.CUST_ORD_NO = #cust_ord_no#
	           
			 GROUP BY IB.WH_CD, IB.CTRT_NO, IB.WIB_BK_NO, RCV.INBOUND_DT
	         UNION ALL	        
	        SELECT OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , MAX(OB.BK_DATE) AS BK_DATE
	             , ISSU.OUTBOUND_DT
	             , OB.WOB_BK_NO
	             , MAX(OB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , MAX(OB.ORD_TP_CD) AS ORD_TP_CD
	             , MAX(OB.LOAD_TP_CD) AS LOAD_TP_CD
	             , MAX(OB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_ALLC ALLC
	             , TL_WH_ISSU ISSU
	         WHERE OB.WOB_BK_NO = ALLC.WOB_BK_NO
	           AND ALLC.WALC_NO = ISSU.WALC_NO      
	           AND OB.WH_CD = #wh_cd#
	           AND OB.CTRT_NO = #ctrt_no#
	           AND OB.CUST_ORD_NO = #cust_ord_no#
	           
	         GROUP BY OB.WH_CD, OB.CTRT_NO, OB.WOB_BK_NO, ISSU.OUTBOUND_DT  
	         UNION ALL	        
	        SELECT OB.WH_CD
	             , dbo.TL_GET_LOC_NM(OB.WH_CD) AS WH_NM
	             , OB.CTRT_NO
	             , dbo.TL_GET_CTRT_NM(OB.CTRT_NO) AS CTRT_NM
	             , MAX(OB.BK_DATE) AS BK_DATE
	             , LP.OUTBOUND_DT
	             , LPI.WOB_BK_NO
	             , MAX(OB.CUST_ORD_NO) AS CUST_ORD_NO
	             , 'OUT' AS BK_CLS_CD
	             , 'Outbound' AS BK_CLS_NM
	             , MAX(OB.ORD_TP_CD) AS ORD_TP_CD
	             , MAX(OB.LOAD_TP_CD) AS LOAD_TP_CD
	             , MAX(OB.ORDER_REL) AS ORDER_REL
	          FROM TL_WH_OB OB
	             , TL_WH_LOAD_PLAN_ITEM LPI
	             , TL_WH_LOAD_PLAN LP
	         WHERE OB.WOB_BK_NO = LPI.WOB_BK_NO   
	           AND LPI.LP_NO = LP.LP_NO   
	           AND OB.WH_CD = #wh_cd#
	           AND OB.CTRT_NO = #ctrt_no#
	           AND OB.CUST_ORD_NO = #cust_ord_no#
	           
	         GROUP BY OB.WH_CD, OB.CTRT_NO, LP.OUTBOUND_DT, LPI.WOB_BK_NO
	     ) T
	     LEFT OUTER JOIN TL_CTRT_CUST_FRT frt 
     					ON T.BK_NO = frt.WIB_BK_NO
     					OR T.BK_NO = frt.WOB_BK_NO
	
	</select>	
	
</sqlMap>
